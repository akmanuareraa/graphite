// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: 5GT6nVB5WgvLWb2iBXTk1E
// Component: XGiynfTTfjk
import * as React from "react";
import * as p from "@plasmicapp/react-web";
import {
  hasVariant,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts
} from "@plasmicapp/react-web";
import ButtonB from "../../ButtonB"; // plasmic-import: oSXCQ8ez26/component
import "@plasmicapp/react-web/lib/plasmic.css";
import projectcss from "./plasmic_project_5162.module.css"; // plasmic-import: 5GT6nVB5WgvLWb2iBXTk1E/projectcss
import sty from "./PlasmicLogisticsgeneration.module.css"; // plasmic-import: XGiynfTTfjk/css

export const PlasmicLogisticsgeneration__VariantProps = new Array(
  "displaylogistics"
);

export const PlasmicLogisticsgeneration__ArgProps = new Array(
  "cha",
  "ffname",
  "entryno",
  "entrydate",
  "dutyamount",
  "hts",
  "invoiceno",
  "tfamount",
  "ntfamount",
  "tchaamount",
  "ntchaamount"
);

function PlasmicLogisticsgeneration__RenderFunc(props) {
  const { variants, args, overrides, forNode } = props;
  return (
    <div
      data-plasmic-name={"root"}
      data-plasmic-override={overrides.root}
      data-plasmic-root={true}
      data-plasmic-for-node={forNode}
      className={classNames(projectcss.all, projectcss.root_reset, sty.root)}
    >
      <div
        className={classNames(
          projectcss.all,
          projectcss.__wab_text,
          sty.text__qyUD,
          {
            [sty.text__displaylogistics__qyUDrz7MF]: hasVariant(
              variants,
              "displaylogistics",
              "displaylogistics"
            )
          }
        )}
      >
        {hasVariant(variants, "displaylogistics", "displaylogistics")
          ? "LOGISTICS GENERATION"
          : "SALES ORDER GENERATION"}
      </div>

      <div
        data-plasmic-name={"applicationForm"}
        data-plasmic-override={overrides.applicationForm}
        className={classNames(projectcss.all, sty.applicationForm, {
          [sty.applicationForm__displaylogistics]: hasVariant(
            variants,
            "displaylogistics",
            "displaylogistics"
          )
        })}
      >
        <p.Stack
          as={"div"}
          hasGap={true}
          className={classNames(projectcss.all, sty.freeBox__e6Sc, {
            [sty.freeBox__displaylogistics__e6Scrz7MF]: hasVariant(
              variants,
              "displaylogistics",
              "displaylogistics"
            )
          })}
        >
          {(
            hasVariant(variants, "displaylogistics", "displaylogistics")
              ? true
              : true
          ) ? (
            <div
              className={classNames(projectcss.all, sty.freeBox__gMcPj, {
                [sty.freeBox__displaylogistics__gMcPjrz7MF]: hasVariant(
                  variants,
                  "displaylogistics",
                  "displaylogistics"
                )
              })}
            >
              <div
                className={classNames(projectcss.all, sty.freeBox__d2J9O, {
                  [sty.freeBox__displaylogistics__d2J9Orz7MF]: hasVariant(
                    variants,
                    "displaylogistics",
                    "displaylogistics"
                  )
                })}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__yo3Lw,
                    {
                      [sty.text__displaylogistics__yo3LWrz7MF]: hasVariant(
                        variants,
                        "displaylogistics",
                        "displaylogistics"
                      )
                    }
                  )}
                >
                  {hasVariant(variants, "displaylogistics", "displaylogistics")
                    ? "Invoice No"
                    : "Order ID"}
                </div>

                {true ? (
                  <div
                    className={classNames(projectcss.all, sty.freeBox__oYd2H, {
                      [sty.freeBox__displaylogistics__oYd2Hrz7MF]: hasVariant(
                        variants,
                        "displaylogistics",
                        "displaylogistics"
                      )
                    })}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__mgIY,
                        {
                          [sty.text__displaylogistics__mgIYrz7MF]: hasVariant(
                            variants,
                            "displaylogistics",
                            "displaylogistics"
                          )
                        }
                      )}
                    >
                      {"#"}
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        sty.freeBox__nUvZn,
                        {
                          [sty.freeBox__displaylogistics__nUvZnrz7MF]:
                            hasVariant(
                              variants,
                              "displaylogistics",
                              "displaylogistics"
                            )
                        }
                      )}
                    >
                      {p.renderPlasmicSlot({
                        defaultContents: "ABC123",
                        value: args.invoiceno,
                        className: classNames(sty.slotTargetInvoiceno, {
                          [sty.slotTargetInvoiceno__displaylogistics]:
                            hasVariant(
                              variants,
                              "displaylogistics",
                              "displaylogistics"
                            )
                        })
                      })}
                    </div>
                  </div>
                ) : null}
              </div>
            </div>
          ) : null}
          {(
            hasVariant(variants, "displaylogistics", "displaylogistics")
              ? true
              : false
          ) ? (
            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__nzzHx, {
                [sty.freeBox__displaylogistics__nzzHxrz7MF]: hasVariant(
                  variants,
                  "displaylogistics",
                  "displaylogistics"
                )
              })}
            >
              {(
                hasVariant(variants, "displaylogistics", "displaylogistics")
                  ? true
                  : true
              ) ? (
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__fsEkk,
                    {
                      [sty.text__displaylogistics__fsEkKrz7MF]: hasVariant(
                        variants,
                        "displaylogistics",
                        "displaylogistics"
                      )
                    }
                  )}
                >
                  {"Order To: "}
                </div>
              ) : null}
              {(
                hasVariant(variants, "displaylogistics", "displaylogistics")
                  ? true
                  : true
              ) ? (
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text___0R5O1,
                    {
                      [sty.text__displaylogistics___0R5O1Rz7MF]: hasVariant(
                        variants,
                        "displaylogistics",
                        "displaylogistics"
                      )
                    }
                  )}
                >
                  {"Ship To:"}
                </div>
              ) : null}
            </p.Stack>
          ) : null}
          {(
            hasVariant(variants, "displaylogistics", "displaylogistics")
              ? true
              : true
          ) ? (
            <div
              className={classNames(projectcss.all, sty.freeBox__mbAAm, {
                [sty.freeBox__displaylogistics__mbAAmrz7MF]: hasVariant(
                  variants,
                  "displaylogistics",
                  "displaylogistics"
                )
              })}
            >
              <div
                className={classNames(projectcss.all, sty.freeBox__ikdL, {
                  [sty.freeBox__displaylogistics__ikdLRz7MF]: hasVariant(
                    variants,
                    "displaylogistics",
                    "displaylogistics"
                  )
                })}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__v5HU,
                    {
                      [sty.text__displaylogistics__v5HUrz7MF]: hasVariant(
                        variants,
                        "displaylogistics",
                        "displaylogistics"
                      )
                    }
                  )}
                >
                  {"CHA Name"}
                </div>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__ku7Xl,
                    {
                      [sty.text__displaylogistics__ku7XLrz7MF]: hasVariant(
                        variants,
                        "displaylogistics",
                        "displaylogistics"
                      )
                    }
                  )}
                >
                  {":"}
                </div>

                <div
                  data-plasmic-name={"supplier"}
                  data-plasmic-override={overrides.supplier}
                  className={classNames(projectcss.all, sty.supplier, {
                    [sty.supplier__displaylogistics]: hasVariant(
                      variants,
                      "displaylogistics",
                      "displaylogistics"
                    )
                  })}
                >
                  {p.renderPlasmicSlot({
                    defaultContents: "N/A",
                    value: args.cha,
                    className: classNames(sty.slotTargetCha, {
                      [sty.slotTargetCha__displaylogistics]: hasVariant(
                        variants,
                        "displaylogistics",
                        "displaylogistics"
                      )
                    })
                  })}
                </div>
              </div>

              <div
                className={classNames(projectcss.all, sty.freeBox___0OxFq, {
                  [sty.freeBox__displaylogistics___0OxFqrz7MF]: hasVariant(
                    variants,
                    "displaylogistics",
                    "displaylogistics"
                  )
                })}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__x5Kt,
                    {
                      [sty.text__displaylogistics__x5KTrz7MF]: hasVariant(
                        variants,
                        "displaylogistics",
                        "displaylogistics"
                      )
                    }
                  )}
                >
                  {"Freight Forwarder Name"}
                </div>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__jV0,
                    {
                      [sty.text__displaylogistics__jV0Rz7MF]: hasVariant(
                        variants,
                        "displaylogistics",
                        "displaylogistics"
                      )
                    }
                  )}
                >
                  {":"}
                </div>

                <div
                  data-plasmic-name={"shipmentmode"}
                  data-plasmic-override={overrides.shipmentmode}
                  className={classNames(projectcss.all, sty.shipmentmode, {
                    [sty.shipmentmode__displaylogistics]: hasVariant(
                      variants,
                      "displaylogistics",
                      "displaylogistics"
                    )
                  })}
                >
                  {p.renderPlasmicSlot({
                    defaultContents: "N/A",
                    value: args.ffname,
                    className: classNames(sty.slotTargetFfname, {
                      [sty.slotTargetFfname__displaylogistics]: hasVariant(
                        variants,
                        "displaylogistics",
                        "displaylogistics"
                      )
                    })
                  })}
                </div>
              </div>

              <div
                className={classNames(projectcss.all, sty.freeBox__jyOub, {
                  [sty.freeBox__displaylogistics__jyOubrz7MF]: hasVariant(
                    variants,
                    "displaylogistics",
                    "displaylogistics"
                  )
                })}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__cqMCs,
                    {
                      [sty.text__displaylogistics__cqMCsrz7MF]: hasVariant(
                        variants,
                        "displaylogistics",
                        "displaylogistics"
                      )
                    }
                  )}
                >
                  {"Bill of Entry No"}
                </div>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__oGcx,
                    {
                      [sty.text__displaylogistics__oGcxRz7MF]: hasVariant(
                        variants,
                        "displaylogistics",
                        "displaylogistics"
                      )
                    }
                  )}
                >
                  {":"}
                </div>

                <div
                  data-plasmic-name={"origincountry"}
                  data-plasmic-override={overrides.origincountry}
                  className={classNames(projectcss.all, sty.origincountry, {
                    [sty.origincountry__displaylogistics]: hasVariant(
                      variants,
                      "displaylogistics",
                      "displaylogistics"
                    )
                  })}
                >
                  {p.renderPlasmicSlot({
                    defaultContents: "N/A",
                    value: args.entryno,
                    className: classNames(sty.slotTargetEntryno, {
                      [sty.slotTargetEntryno__displaylogistics]: hasVariant(
                        variants,
                        "displaylogistics",
                        "displaylogistics"
                      )
                    })
                  })}
                </div>
              </div>

              <div
                className={classNames(projectcss.all, sty.freeBox__rK0J, {
                  [sty.freeBox__displaylogistics__rK0Jrz7MF]: hasVariant(
                    variants,
                    "displaylogistics",
                    "displaylogistics"
                  )
                })}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__ctDte,
                    {
                      [sty.text__displaylogistics__ctDterz7MF]: hasVariant(
                        variants,
                        "displaylogistics",
                        "displaylogistics"
                      )
                    }
                  )}
                >
                  {"Bill of Entry Date"}
                </div>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__q9AaQ,
                    {
                      [sty.text__displaylogistics__q9AaQrz7MF]: hasVariant(
                        variants,
                        "displaylogistics",
                        "displaylogistics"
                      )
                    }
                  )}
                >
                  {":"}
                </div>

                <div
                  data-plasmic-name={"sap"}
                  data-plasmic-override={overrides.sap}
                  className={classNames(projectcss.all, sty.sap, {
                    [sty.sap__displaylogistics]: hasVariant(
                      variants,
                      "displaylogistics",
                      "displaylogistics"
                    )
                  })}
                >
                  {p.renderPlasmicSlot({
                    defaultContents: "N/A",
                    value: args.entrydate,
                    className: classNames(sty.slotTargetEntrydate, {
                      [sty.slotTargetEntrydate__displaylogistics]: hasVariant(
                        variants,
                        "displaylogistics",
                        "displaylogistics"
                      )
                    })
                  })}
                </div>
              </div>

              <div
                className={classNames(projectcss.all, sty.freeBox__hu0DY, {
                  [sty.freeBox__displaylogistics__hu0DYrz7MF]: hasVariant(
                    variants,
                    "displaylogistics",
                    "displaylogistics"
                  )
                })}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__gf6Ee,
                    {
                      [sty.text__displaylogistics__gf6EErz7MF]: hasVariant(
                        variants,
                        "displaylogistics",
                        "displaylogistics"
                      )
                    }
                  )}
                >
                  {"Duty Amount"}
                </div>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__sySf,
                    {
                      [sty.text__displaylogistics__sySfRz7MF]: hasVariant(
                        variants,
                        "displaylogistics",
                        "displaylogistics"
                      )
                    }
                  )}
                >
                  {":"}
                </div>

                <div
                  data-plasmic-name={"grn"}
                  data-plasmic-override={overrides.grn}
                  className={classNames(projectcss.all, sty.grn, {
                    [sty.grn__displaylogistics]: hasVariant(
                      variants,
                      "displaylogistics",
                      "displaylogistics"
                    )
                  })}
                >
                  {p.renderPlasmicSlot({
                    defaultContents: "N/A",
                    value: args.dutyamount,
                    className: classNames(sty.slotTargetDutyamount, {
                      [sty.slotTargetDutyamount__displaylogistics]: hasVariant(
                        variants,
                        "displaylogistics",
                        "displaylogistics"
                      )
                    })
                  })}
                </div>
              </div>

              <div
                className={classNames(projectcss.all, sty.freeBox__qdErP, {
                  [sty.freeBox__displaylogistics__qdErPrz7MF]: hasVariant(
                    variants,
                    "displaylogistics",
                    "displaylogistics"
                  )
                })}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__gsoau,
                    {
                      [sty.text__displaylogistics__gsoaurz7MF]: hasVariant(
                        variants,
                        "displaylogistics",
                        "displaylogistics"
                      )
                    }
                  )}
                >
                  {"HTS Code"}
                </div>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text___0KUpu,
                    {
                      [sty.text__displaylogistics___0KUpurz7MF]: hasVariant(
                        variants,
                        "displaylogistics",
                        "displaylogistics"
                      )
                    }
                  )}
                >
                  {":"}
                </div>

                <div
                  data-plasmic-name={"creditnotevalue"}
                  data-plasmic-override={overrides.creditnotevalue}
                  className={classNames(projectcss.all, sty.creditnotevalue, {
                    [sty.creditnotevalue__displaylogistics]: hasVariant(
                      variants,
                      "displaylogistics",
                      "displaylogistics"
                    )
                  })}
                >
                  {p.renderPlasmicSlot({
                    defaultContents: "N/A",
                    value: args.hts,
                    className: classNames(sty.slotTargetHts, {
                      [sty.slotTargetHts__displaylogistics]: hasVariant(
                        variants,
                        "displaylogistics",
                        "displaylogistics"
                      )
                    })
                  })}
                </div>
              </div>

              <div
                className={classNames(projectcss.all, sty.freeBox__jrUbR, {
                  [sty.freeBox__displaylogistics__jrUbRrz7MF]: hasVariant(
                    variants,
                    "displaylogistics",
                    "displaylogistics"
                  )
                })}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__qJ1Uo,
                    {
                      [sty.text__displaylogistics__qJ1Uorz7MF]: hasVariant(
                        variants,
                        "displaylogistics",
                        "displaylogistics"
                      )
                    }
                  )}
                >
                  {"Taxable Freight Amount"}
                </div>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__uOe3C,
                    {
                      [sty.text__displaylogistics__uOe3Crz7MF]: hasVariant(
                        variants,
                        "displaylogistics",
                        "displaylogistics"
                      )
                    }
                  )}
                >
                  {":"}
                </div>

                <div
                  data-plasmic-name={"creditnotevalue2"}
                  data-plasmic-override={overrides.creditnotevalue2}
                  className={classNames(projectcss.all, sty.creditnotevalue2, {
                    [sty.creditnotevalue2__displaylogistics]: hasVariant(
                      variants,
                      "displaylogistics",
                      "displaylogistics"
                    )
                  })}
                >
                  {p.renderPlasmicSlot({
                    defaultContents: "N/A",
                    value: args.tfamount,
                    className: classNames(sty.slotTargetTfamount, {
                      [sty.slotTargetTfamount__displaylogistics]: hasVariant(
                        variants,
                        "displaylogistics",
                        "displaylogistics"
                      )
                    })
                  })}
                </div>
              </div>

              <div
                className={classNames(projectcss.all, sty.freeBox__alz7, {
                  [sty.freeBox__displaylogistics__alz7Rz7MF]: hasVariant(
                    variants,
                    "displaylogistics",
                    "displaylogistics"
                  )
                })}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__qZrRs,
                    {
                      [sty.text__displaylogistics__qZrRSrz7MF]: hasVariant(
                        variants,
                        "displaylogistics",
                        "displaylogistics"
                      )
                    }
                  )}
                >
                  {"Non Taxable Freight Amount"}
                </div>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__dV1GG,
                    {
                      [sty.text__displaylogistics__dV1GGrz7MF]: hasVariant(
                        variants,
                        "displaylogistics",
                        "displaylogistics"
                      )
                    }
                  )}
                >
                  {":"}
                </div>

                <div
                  data-plasmic-name={"creditnotevalue3"}
                  data-plasmic-override={overrides.creditnotevalue3}
                  className={classNames(projectcss.all, sty.creditnotevalue3, {
                    [sty.creditnotevalue3__displaylogistics]: hasVariant(
                      variants,
                      "displaylogistics",
                      "displaylogistics"
                    )
                  })}
                >
                  {p.renderPlasmicSlot({
                    defaultContents: "N/A",
                    value: args.ntfamount,
                    className: classNames(sty.slotTargetNtfamount, {
                      [sty.slotTargetNtfamount__displaylogistics]: hasVariant(
                        variants,
                        "displaylogistics",
                        "displaylogistics"
                      )
                    })
                  })}
                </div>
              </div>

              <div
                className={classNames(projectcss.all, sty.freeBox__mc2Dc, {
                  [sty.freeBox__displaylogistics__mc2DCrz7MF]: hasVariant(
                    variants,
                    "displaylogistics",
                    "displaylogistics"
                  )
                })}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__wyEWc,
                    {
                      [sty.text__displaylogistics__wyEWcrz7MF]: hasVariant(
                        variants,
                        "displaylogistics",
                        "displaylogistics"
                      )
                    }
                  )}
                >
                  {"Taxable CHA Amount"}
                </div>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__lhzhb,
                    {
                      [sty.text__displaylogistics__lhzhBrz7MF]: hasVariant(
                        variants,
                        "displaylogistics",
                        "displaylogistics"
                      )
                    }
                  )}
                >
                  {":"}
                </div>

                <div
                  data-plasmic-name={"creditnotevalue4"}
                  data-plasmic-override={overrides.creditnotevalue4}
                  className={classNames(projectcss.all, sty.creditnotevalue4, {
                    [sty.creditnotevalue4__displaylogistics]: hasVariant(
                      variants,
                      "displaylogistics",
                      "displaylogistics"
                    )
                  })}
                >
                  {p.renderPlasmicSlot({
                    defaultContents: "N/A",
                    value: args.tchaamount,
                    className: classNames(sty.slotTargetTchaamount, {
                      [sty.slotTargetTchaamount__displaylogistics]: hasVariant(
                        variants,
                        "displaylogistics",
                        "displaylogistics"
                      )
                    })
                  })}
                </div>
              </div>

              <div
                className={classNames(projectcss.all, sty.freeBox__i0Wvv, {
                  [sty.freeBox__displaylogistics__i0Wvvrz7MF]: hasVariant(
                    variants,
                    "displaylogistics",
                    "displaylogistics"
                  )
                })}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__nrkk5,
                    {
                      [sty.text__displaylogistics__nrkk5Rz7MF]: hasVariant(
                        variants,
                        "displaylogistics",
                        "displaylogistics"
                      )
                    }
                  )}
                >
                  {"Non Taxable CHA Amount"}
                </div>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__sxuUm,
                    {
                      [sty.text__displaylogistics__sxuUmrz7MF]: hasVariant(
                        variants,
                        "displaylogistics",
                        "displaylogistics"
                      )
                    }
                  )}
                >
                  {":"}
                </div>

                <div
                  data-plasmic-name={"creditnotevalue5"}
                  data-plasmic-override={overrides.creditnotevalue5}
                  className={classNames(projectcss.all, sty.creditnotevalue5, {
                    [sty.creditnotevalue5__displaylogistics]: hasVariant(
                      variants,
                      "displaylogistics",
                      "displaylogistics"
                    )
                  })}
                >
                  {p.renderPlasmicSlot({
                    defaultContents: "N/A",
                    value: args.ntchaamount,
                    className: classNames(sty.slotTargetNtchaamount, {
                      [sty.slotTargetNtchaamount__displaylogistics]: hasVariant(
                        variants,
                        "displaylogistics",
                        "displaylogistics"
                      )
                    })
                  })}
                </div>
              </div>
            </div>
          ) : null}
          {(
            hasVariant(variants, "displaylogistics", "displaylogistics")
              ? true
              : true
          ) ? (
            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__jzDf6, {
                [sty.freeBox__displaylogistics__jzDf6Rz7MF]: hasVariant(
                  variants,
                  "displaylogistics",
                  "displaylogistics"
                )
              })}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text___4Yz8E,
                  {
                    [sty.text__displaylogistics___4Yz8Erz7MF]: hasVariant(
                      variants,
                      "displaylogistics",
                      "displaylogistics"
                    )
                  }
                )}
              >
                {"Order To: "}
              </div>

              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__n8EeS,
                  {
                    [sty.text__displaylogistics__n8EeSrz7MF]: hasVariant(
                      variants,
                      "displaylogistics",
                      "displaylogistics"
                    )
                  }
                )}
              >
                {"Ship To:"}
              </div>
            </p.Stack>
          ) : null}
          {(
            hasVariant(variants, "displaylogistics", "displaylogistics")
              ? true
              : true
          ) ? (
            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__i2GFa, {
                [sty.freeBox__displaylogistics__i2GFArz7MF]: hasVariant(
                  variants,
                  "displaylogistics",
                  "displaylogistics"
                )
              })}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__i08O,
                  {
                    [sty.text__displaylogistics__i08Orz7MF]: hasVariant(
                      variants,
                      "displaylogistics",
                      "displaylogistics"
                    )
                  }
                )}
              >
                {"ABC Company, \nLocation"}
              </div>

              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__e3Z3S,
                  {
                    [sty.text__displaylogistics__e3Z3Srz7MF]: hasVariant(
                      variants,
                      "displaylogistics",
                      "displaylogistics"
                    )
                  }
                )}
              >
                {"ABC Company, \nLocation"}
              </div>
            </p.Stack>
          ) : null}
          {(
            hasVariant(variants, "displaylogistics", "displaylogistics")
              ? true
              : true
          ) ? (
            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__lZ46, {
                [sty.freeBox__displaylogistics__lZ46Rz7MF]: hasVariant(
                  variants,
                  "displaylogistics",
                  "displaylogistics"
                )
              })}
            >
              <div
                className={classNames(projectcss.all, sty.freeBox__ygeSt, {
                  [sty.freeBox__displaylogistics__ygeStrz7MF]: hasVariant(
                    variants,
                    "displaylogistics",
                    "displaylogistics"
                  )
                })}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__fi5WE
                  )}
                >
                  {"Contact:"}
                </div>

                {true ? (
                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__nzCcN, {
                      [sty.freeBox__displaylogistics__nzCcNrz7MF]: hasVariant(
                        variants,
                        "displaylogistics",
                        "displaylogistics"
                      )
                    })}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__txftM,
                        {
                          [sty.text__displaylogistics__txftMrz7MF]: hasVariant(
                            variants,
                            "displaylogistics",
                            "displaylogistics"
                          )
                        }
                      )}
                    >
                      {"Name:"}
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___8Fv9D,
                        {
                          [sty.text__displaylogistics___8Fv9Drz7MF]: hasVariant(
                            variants,
                            "displaylogistics",
                            "displaylogistics"
                          )
                        }
                      )}
                    >
                      {"1234567890"}
                    </div>
                  </p.Stack>
                ) : null}
              </div>

              <div
                className={classNames(projectcss.all, sty.freeBox__hYlyT, {
                  [sty.freeBox__displaylogistics__hYlyTrz7MF]: hasVariant(
                    variants,
                    "displaylogistics",
                    "displaylogistics"
                  )
                })}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__nZaG,
                    {
                      [sty.text__displaylogistics__nZaGrz7MF]: hasVariant(
                        variants,
                        "displaylogistics",
                        "displaylogistics"
                      )
                    }
                  )}
                >
                  {"Date:"}
                </div>

                {true ? (
                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox___2V2X9, {
                      [sty.freeBox__displaylogistics___2V2X9Rz7MF]: hasVariant(
                        variants,
                        "displaylogistics",
                        "displaylogistics"
                      )
                    })}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__stoGk,
                        {
                          [sty.text__displaylogistics__stoGkrz7MF]: hasVariant(
                            variants,
                            "displaylogistics",
                            "displaylogistics"
                          )
                        }
                      )}
                    >
                      {"1234567890"}
                    </div>
                  </p.Stack>
                ) : null}
              </div>
            </p.Stack>
          ) : null}
          {(
            hasVariant(variants, "displaylogistics", "displaylogistics")
              ? true
              : true
          ) ? (
            <div
              className={classNames(projectcss.all, sty.freeBox__mTwTv, {
                [sty.freeBox__displaylogistics__mTwTVrz7MF]: hasVariant(
                  variants,
                  "displaylogistics",
                  "displaylogistics"
                )
              })}
            >
              <div
                className={classNames(projectcss.all, sty.freeBox__qxkVz, {
                  [sty.freeBox__displaylogistics__qxkVzrz7MF]: hasVariant(
                    variants,
                    "displaylogistics",
                    "displaylogistics"
                  )
                })}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__fjn0O,
                    {
                      [sty.text__displaylogistics__fjn0Orz7MF]: hasVariant(
                        variants,
                        "displaylogistics",
                        "displaylogistics"
                      )
                    }
                  )}
                >
                  {"#"}
                </div>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__dJ3WJ,
                    {
                      [sty.text__displaylogistics__dJ3WJrz7MF]: hasVariant(
                        variants,
                        "displaylogistics",
                        "displaylogistics"
                      )
                    }
                  )}
                >
                  {"Product ID"}
                </div>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__burww,
                    {
                      [sty.text__displaylogistics__burwwrz7MF]: hasVariant(
                        variants,
                        "displaylogistics",
                        "displaylogistics"
                      )
                    }
                  )}
                >
                  {"Product"}
                </div>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text___3V4Oj,
                    {
                      [sty.text__displaylogistics___3V4Ojrz7MF]: hasVariant(
                        variants,
                        "displaylogistics",
                        "displaylogistics"
                      )
                    }
                  )}
                >
                  {"Quantity"}
                </div>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__uvAh0,
                    {
                      [sty.text__displaylogistics__uvAh0Rz7MF]: hasVariant(
                        variants,
                        "displaylogistics",
                        "displaylogistics"
                      )
                    }
                  )}
                >
                  {"Unit Price"}
                </div>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text___8UKnz,
                    {
                      [sty.text__displaylogistics___8UKnZrz7MF]: hasVariant(
                        variants,
                        "displaylogistics",
                        "displaylogistics"
                      )
                    }
                  )}
                >
                  {"Total"}
                </div>
              </div>

              <div className={classNames(projectcss.all, sty.freeBox__gRpJh)}>
                <div
                  className={classNames(projectcss.all, sty.freeBox__y8Tma, {
                    [sty.freeBox__displaylogistics__y8Tmarz7MF]: hasVariant(
                      variants,
                      "displaylogistics",
                      "displaylogistics"
                    )
                  })}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__chAaV,
                      {
                        [sty.text__displaylogistics__chAaVrz7MF]: hasVariant(
                          variants,
                          "displaylogistics",
                          "displaylogistics"
                        )
                      }
                    )}
                  >
                    {"#"}
                  </div>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__ihHlM,
                      {
                        [sty.text__displaylogistics__ihHlMrz7MF]: hasVariant(
                          variants,
                          "displaylogistics",
                          "displaylogistics"
                        )
                      }
                    )}
                  >
                    {"Product ID"}
                  </div>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__zGLzY,
                      {
                        [sty.text__displaylogistics__zGLzYrz7MF]: hasVariant(
                          variants,
                          "displaylogistics",
                          "displaylogistics"
                        )
                      }
                    )}
                  >
                    {"Product"}
                  </div>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__yhjaY,
                      {
                        [sty.text__displaylogistics__yhjaYrz7MF]: hasVariant(
                          variants,
                          "displaylogistics",
                          "displaylogistics"
                        )
                      }
                    )}
                  >
                    {"Quantity"}
                  </div>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__yfEry,
                      {
                        [sty.text__displaylogistics__yfErYrz7MF]: hasVariant(
                          variants,
                          "displaylogistics",
                          "displaylogistics"
                        )
                      }
                    )}
                  >
                    {"Unit Price"}
                  </div>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___3Q9Db,
                      {
                        [sty.text__displaylogistics___3Q9DBrz7MF]: hasVariant(
                          variants,
                          "displaylogistics",
                          "displaylogistics"
                        )
                      }
                    )}
                  >
                    {"Total"}
                  </div>
                </div>

                {(
                  hasVariant(variants, "displaylogistics", "displaylogistics")
                    ? true
                    : true
                ) ? (
                  <div
                    className={classNames(projectcss.all, sty.freeBox___1HrMo, {
                      [sty.freeBox__displaylogistics___1HrMorz7MF]: hasVariant(
                        variants,
                        "displaylogistics",
                        "displaylogistics"
                      )
                    })}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__cEHs6,
                        {
                          [sty.text__displaylogistics__cEHs6Rz7MF]: hasVariant(
                            variants,
                            "displaylogistics",
                            "displaylogistics"
                          )
                        }
                      )}
                    >
                      {"#"}
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___1ILum,
                        {
                          [sty.text__displaylogistics___1ILumrz7MF]: hasVariant(
                            variants,
                            "displaylogistics",
                            "displaylogistics"
                          )
                        }
                      )}
                    >
                      {"Product ID"}
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__y5KSe,
                        {
                          [sty.text__displaylogistics__y5KSerz7MF]: hasVariant(
                            variants,
                            "displaylogistics",
                            "displaylogistics"
                          )
                        }
                      )}
                    >
                      {"Product"}
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___0CGu4
                      )}
                    >
                      {"Quantity"}
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__azcKm
                      )}
                    >
                      {"Unit Price"}
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__bEcW8
                      )}
                    >
                      {"Total"}
                    </div>
                  </div>
                ) : null}
                {(
                  hasVariant(variants, "displaylogistics", "displaylogistics")
                    ? true
                    : true
                ) ? (
                  <div
                    className={classNames(projectcss.all, sty.freeBox___1Vp29, {
                      [sty.freeBox__displaylogistics___1Vp29Rz7MF]: hasVariant(
                        variants,
                        "displaylogistics",
                        "displaylogistics"
                      )
                    })}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__uky4C
                      )}
                    >
                      {"#"}
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___0OQcI
                      )}
                    >
                      {"Product ID"}
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___2WlGo
                      )}
                    >
                      {"Product"}
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__b7MhV
                      )}
                    >
                      {"Quantity"}
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__iZLxK
                      )}
                    >
                      {"Unit Price"}
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__usEz7
                      )}
                    >
                      {"Total"}
                    </div>
                  </div>
                ) : null}
                {(
                  hasVariant(variants, "displaylogistics", "displaylogistics")
                    ? true
                    : true
                ) ? (
                  <div
                    className={classNames(projectcss.all, sty.freeBox__bj0Zs, {
                      [sty.freeBox__displaylogistics__bj0ZSrz7MF]: hasVariant(
                        variants,
                        "displaylogistics",
                        "displaylogistics"
                      )
                    })}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__soyY
                      )}
                    >
                      {"#"}
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__zJcsU
                      )}
                    >
                      {"Product ID"}
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___0Rk9T
                      )}
                    >
                      {"Product"}
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___8XBu0
                      )}
                    >
                      {"Quantity"}
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__moq35
                      )}
                    >
                      {"Unit Price"}
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__tpdGs
                      )}
                    >
                      {"Total"}
                    </div>
                  </div>
                ) : null}
              </div>
            </div>
          ) : null}
          {(
            hasVariant(variants, "displaylogistics", "displaylogistics")
              ? true
              : true
          ) ? (
            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox___1LbaT, {
                [sty.freeBox__displaylogistics___1LbaTrz7MF]: hasVariant(
                  variants,
                  "displaylogistics",
                  "displaylogistics"
                )
              })}
            >
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__gQr4G, {
                  [sty.freeBox__displaylogistics__gQr4Grz7MF]: hasVariant(
                    variants,
                    "displaylogistics",
                    "displaylogistics"
                  )
                })}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__u1Vd5,
                    {
                      [sty.text__displaylogistics__u1Vd5Rz7MF]: hasVariant(
                        variants,
                        "displaylogistics",
                        "displaylogistics"
                      )
                    }
                  )}
                >
                  {"Sub Total"}
                </div>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__ijGJw,
                    {
                      [sty.text__displaylogistics__ijGJwrz7MF]: hasVariant(
                        variants,
                        "displaylogistics",
                        "displaylogistics"
                      )
                    }
                  )}
                >
                  {"Total"}
                </div>
              </p.Stack>

              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__fuWps, {
                  [sty.freeBox__displaylogistics__fuWpsrz7MF]: hasVariant(
                    variants,
                    "displaylogistics",
                    "displaylogistics"
                  )
                })}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__aqq4Z
                  )}
                >
                  {"Tax"}
                </div>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__bkIQ,
                    {
                      [sty.text__displaylogistics__bkIQrz7MF]: hasVariant(
                        variants,
                        "displaylogistics",
                        "displaylogistics"
                      )
                    }
                  )}
                >
                  {"Total"}
                </div>
              </p.Stack>

              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__zJH, {
                  [sty.freeBox__displaylogistics__zJHrz7MF]: hasVariant(
                    variants,
                    "displaylogistics",
                    "displaylogistics"
                  )
                })}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text___8RPsv,
                    {
                      [sty.text__displaylogistics___8RPsVrz7MF]: hasVariant(
                        variants,
                        "displaylogistics",
                        "displaylogistics"
                      )
                    }
                  )}
                >
                  {"Total"}
                </div>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__aAIfk,
                    {
                      [sty.text__displaylogistics__aAIfkrz7MF]: hasVariant(
                        variants,
                        "displaylogistics",
                        "displaylogistics"
                      )
                    }
                  )}
                >
                  {"Total"}
                </div>
              </p.Stack>
            </p.Stack>
          ) : null}
          {true ? (
            <ButtonB
              data-plasmic-name={"formbutton"}
              data-plasmic-override={overrides.formbutton}
              className={classNames("__wab_instance", sty.formbutton, {
                [sty.formbutton__displaylogistics]: hasVariant(
                  variants,
                  "displaylogistics",
                  "displaylogistics"
                )
              })}
              connectmm={true}
            />
          ) : null}
        </p.Stack>
      </div>
    </div>
  );
}

const PlasmicDescendants = {
  root: [
    "root",
    "applicationForm",
    "supplier",
    "shipmentmode",
    "origincountry",
    "sap",
    "grn",
    "creditnotevalue",
    "creditnotevalue2",
    "creditnotevalue3",
    "creditnotevalue4",
    "creditnotevalue5",
    "formbutton"
  ],

  applicationForm: [
    "applicationForm",
    "supplier",
    "shipmentmode",
    "origincountry",
    "sap",
    "grn",
    "creditnotevalue",
    "creditnotevalue2",
    "creditnotevalue3",
    "creditnotevalue4",
    "creditnotevalue5",
    "formbutton"
  ],

  supplier: ["supplier"],
  shipmentmode: ["shipmentmode"],
  origincountry: ["origincountry"],
  sap: ["sap"],
  grn: ["grn"],
  creditnotevalue: ["creditnotevalue"],
  creditnotevalue2: ["creditnotevalue2"],
  creditnotevalue3: ["creditnotevalue3"],
  creditnotevalue4: ["creditnotevalue4"],
  creditnotevalue5: ["creditnotevalue5"],
  formbutton: ["formbutton"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = deriveRenderOpts(props, {
      name: nodeName,
      descendantNames: [...PlasmicDescendants[nodeName]],
      internalArgPropNames: PlasmicLogisticsgeneration__ArgProps,
      internalVariantPropNames: PlasmicLogisticsgeneration__VariantProps
    });

    return PlasmicLogisticsgeneration__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicLogisticsgeneration";
  } else {
    func.displayName = `PlasmicLogisticsgeneration.${nodeName}`;
  }
  return func;
}

export const PlasmicLogisticsgeneration = Object.assign(
  // Top-level PlasmicLogisticsgeneration renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    applicationForm: makeNodeComponent("applicationForm"),
    supplier: makeNodeComponent("supplier"),
    shipmentmode: makeNodeComponent("shipmentmode"),
    origincountry: makeNodeComponent("origincountry"),
    sap: makeNodeComponent("sap"),
    grn: makeNodeComponent("grn"),
    creditnotevalue: makeNodeComponent("creditnotevalue"),
    creditnotevalue2: makeNodeComponent("creditnotevalue2"),
    creditnotevalue3: makeNodeComponent("creditnotevalue3"),
    creditnotevalue4: makeNodeComponent("creditnotevalue4"),
    creditnotevalue5: makeNodeComponent("creditnotevalue5"),
    formbutton: makeNodeComponent("formbutton"),
    // Metadata about props expected for PlasmicLogisticsgeneration
    internalVariantProps: PlasmicLogisticsgeneration__VariantProps,
    internalArgProps: PlasmicLogisticsgeneration__ArgProps
  }
);

export default PlasmicLogisticsgeneration;
/* prettier-ignore-end */
