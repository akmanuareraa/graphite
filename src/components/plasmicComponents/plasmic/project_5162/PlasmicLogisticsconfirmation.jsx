// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: 5GT6nVB5WgvLWb2iBXTk1E
// Component: jTt4NZSuBM5
import * as React from "react";
import * as p from "@plasmicapp/react-web";
import {
  hasVariant,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts
} from "@plasmicapp/react-web";
import Consentandsubmit from "../../Consentandsubmit"; // plasmic-import: eZig3v-AJ7/component
import ButtonB from "../../ButtonB"; // plasmic-import: oSXCQ8ez26/component
import "@plasmicapp/react-web/lib/plasmic.css";
import projectcss from "./plasmic_project_5162.module.css"; // plasmic-import: 5GT6nVB5WgvLWb2iBXTk1E/projectcss
import sty from "./PlasmicLogisticsconfirmation.module.css"; // plasmic-import: jTt4NZSuBM5/css

export const PlasmicLogisticsconfirmation__VariantProps = new Array(
  "loading",
  "notfound",
  "confirmed"
);

export const PlasmicLogisticsconfirmation__ArgProps = new Array(
  "ffname",
  "entryno",
  "entrydate",
  "dutyamount",
  "hts",
  "tfamount",
  "ntfamount",
  "tchaamount",
  "ntchaamount",
  "cha"
);

function PlasmicLogisticsconfirmation__RenderFunc(props) {
  const { variants, args, overrides, forNode } = props;
  return (
    <div
      data-plasmic-name={"root"}
      data-plasmic-override={overrides.root}
      data-plasmic-root={true}
      data-plasmic-for-node={forNode}
      className={classNames(projectcss.all, projectcss.root_reset, sty.root)}
    >
      <div
        className={classNames(
          projectcss.all,
          projectcss.__wab_text,
          sty.text__rvGhJ
        )}
      >
        {"LOGISTICS CONFIRMATION"}
      </div>

      <div
        data-plasmic-name={"applicationForm"}
        data-plasmic-override={overrides.applicationForm}
        className={classNames(projectcss.all, sty.applicationForm, {
          [sty.applicationFormconfirmed]: hasVariant(
            variants,
            "confirmed",
            "confirmed"
          ),

          [sty.applicationFormloading]: hasVariant(
            variants,
            "loading",
            "loading"
          ),

          [sty.applicationFormnotfound]: hasVariant(
            variants,
            "notfound",
            "notfound"
          )
        })}
      >
        {(
          hasVariant(variants, "confirmed", "confirmed")
            ? false
            : hasVariant(variants, "notfound", "notfound")
            ? false
            : hasVariant(variants, "loading", "loading")
            ? false
            : true
        ) ? (
          <p.Stack
            as={"div"}
            hasGap={true}
            className={classNames(projectcss.all, sty.freeBox__sZeKg, {
              [sty.freeBoxconfirmed__sZeKg3JYSs]: hasVariant(
                variants,
                "confirmed",
                "confirmed"
              ),

              [sty.freeBoxloading__sZeKgqCclm]: hasVariant(
                variants,
                "loading",
                "loading"
              ),

              [sty.freeBoxnotfound__sZeKgONFd]: hasVariant(
                variants,
                "notfound",
                "notfound"
              )
            })}
          >
            {true ? (
              <div className={classNames(projectcss.all, sty.freeBox__cVo1U)}>
                <div className={classNames(projectcss.all, sty.freeBox___2WHb)}>
                  {true ? (
                    <div
                      className={classNames(projectcss.all, sty.freeBox__cmAFf)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__jmZkw
                        )}
                      >
                        {"CHA Name"}
                      </div>

                      <div
                        data-plasmic-name={"supplier"}
                        data-plasmic-override={overrides.supplier}
                        className={classNames(projectcss.all, sty.supplier)}
                      >
                        {p.renderPlasmicSlot({
                          defaultContents: "N/A",
                          value: args.cha,
                          className: classNames(sty.slotTargetCha)
                        })}
                      </div>
                    </div>
                  ) : null}
                </div>

                <div className={classNames(projectcss.all, sty.freeBox__qWbj)}>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__ib63L
                    )}
                  >
                    {"Freight Forwarder Name"}
                  </div>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__fhHvl
                    )}
                  >
                    {":"}
                  </div>

                  <div
                    data-plasmic-name={"shipmentmode"}
                    data-plasmic-override={overrides.shipmentmode}
                    className={classNames(projectcss.all, sty.shipmentmode)}
                  >
                    {p.renderPlasmicSlot({
                      defaultContents: "N/A",
                      value: args.ffname,
                      className: classNames(sty.slotTargetFfname)
                    })}
                  </div>
                </div>

                <div className={classNames(projectcss.all, sty.freeBox__jgKfu)}>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__ww8Ia
                    )}
                  >
                    {"Bill of Entry No"}
                  </div>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__j52Gy
                    )}
                  >
                    {":"}
                  </div>

                  <div
                    data-plasmic-name={"origincountry"}
                    data-plasmic-override={overrides.origincountry}
                    className={classNames(projectcss.all, sty.origincountry)}
                  >
                    {p.renderPlasmicSlot({
                      defaultContents: "N/A",
                      value: args.entryno,
                      className: classNames(sty.slotTargetEntryno)
                    })}
                  </div>
                </div>

                <div
                  className={classNames(projectcss.all, sty.freeBox___7KLmA)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__dxTdf
                    )}
                  >
                    {"Bill of Entry Date"}
                  </div>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___8TH
                    )}
                  >
                    {":"}
                  </div>

                  <div
                    data-plasmic-name={"sap"}
                    data-plasmic-override={overrides.sap}
                    className={classNames(projectcss.all, sty.sap)}
                  >
                    {p.renderPlasmicSlot({
                      defaultContents: "N/A",
                      value: args.entrydate,
                      className: classNames(sty.slotTargetEntrydate)
                    })}
                  </div>
                </div>

                <div className={classNames(projectcss.all, sty.freeBox__kxKlR)}>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__awVh4
                    )}
                  >
                    {"Duty Amount"}
                  </div>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___3Fs4E
                    )}
                  >
                    {":"}
                  </div>

                  <div
                    data-plasmic-name={"grn"}
                    data-plasmic-override={overrides.grn}
                    className={classNames(projectcss.all, sty.grn)}
                  >
                    {p.renderPlasmicSlot({
                      defaultContents: "N/A",
                      value: args.dutyamount,
                      className: classNames(sty.slotTargetDutyamount)
                    })}
                  </div>
                </div>

                <div className={classNames(projectcss.all, sty.freeBox__mjwvh)}>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__soeo
                    )}
                  >
                    {"HTS Code"}
                  </div>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__ystD
                    )}
                  >
                    {":"}
                  </div>

                  <div
                    data-plasmic-name={"creditnotevalue"}
                    data-plasmic-override={overrides.creditnotevalue}
                    className={classNames(projectcss.all, sty.creditnotevalue)}
                  >
                    {p.renderPlasmicSlot({
                      defaultContents: "N/A",
                      value: args.hts,
                      className: classNames(sty.slotTargetHts)
                    })}
                  </div>
                </div>

                <div className={classNames(projectcss.all, sty.freeBox__sX5S)}>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__mVdaU
                    )}
                  >
                    {"Taxable Freight Amount"}
                  </div>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__lcrdT
                    )}
                  >
                    {":"}
                  </div>

                  <div
                    data-plasmic-name={"creditnotevalue2"}
                    data-plasmic-override={overrides.creditnotevalue2}
                    className={classNames(projectcss.all, sty.creditnotevalue2)}
                  >
                    {p.renderPlasmicSlot({
                      defaultContents: "N/A",
                      value: args.tfamount,
                      className: classNames(sty.slotTargetTfamount)
                    })}
                  </div>
                </div>

                <div className={classNames(projectcss.all, sty.freeBox__vRQl3)}>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___2UaC8
                    )}
                  >
                    {"Non Taxable Freight Amount"}
                  </div>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__kYtkG
                    )}
                  >
                    {":"}
                  </div>

                  <div
                    data-plasmic-name={"creditnotevalue3"}
                    data-plasmic-override={overrides.creditnotevalue3}
                    className={classNames(projectcss.all, sty.creditnotevalue3)}
                  >
                    {p.renderPlasmicSlot({
                      defaultContents: "N/A",
                      value: args.ntfamount,
                      className: classNames(sty.slotTargetNtfamount)
                    })}
                  </div>
                </div>

                <div
                  className={classNames(projectcss.all, sty.freeBox___0I7Ls)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__pOdGn
                    )}
                  >
                    {"Taxable CHA Amount"}
                  </div>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___1Omb6
                    )}
                  >
                    {":"}
                  </div>

                  <div
                    data-plasmic-name={"creditnotevalue4"}
                    data-plasmic-override={overrides.creditnotevalue4}
                    className={classNames(projectcss.all, sty.creditnotevalue4)}
                  >
                    {p.renderPlasmicSlot({
                      defaultContents: "N/A",
                      value: args.tchaamount,
                      className: classNames(sty.slotTargetTchaamount)
                    })}
                  </div>
                </div>

                <div className={classNames(projectcss.all, sty.freeBox__upXrc)}>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__pDmc1
                    )}
                  >
                    {"Non Taxable CHA Amount"}
                  </div>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__sJx2T
                    )}
                  >
                    {":"}
                  </div>

                  <div
                    data-plasmic-name={"creditnotevalue5"}
                    data-plasmic-override={overrides.creditnotevalue5}
                    className={classNames(projectcss.all, sty.creditnotevalue5)}
                  >
                    {p.renderPlasmicSlot({
                      defaultContents: "N/A",
                      value: args.ntchaamount,
                      className: classNames(sty.slotTargetNtchaamount)
                    })}
                  </div>
                </div>
              </div>
            ) : null}
            {true ? (
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__i2QLc)}
              >
                {true ? (
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__sfGY
                    )}
                  >
                    {"Order To: "}
                  </div>
                ) : null}
                {true ? (
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__aAnoN
                    )}
                  >
                    {"Ship To:"}
                  </div>
                ) : null}
              </p.Stack>
            ) : null}

            <Consentandsubmit
              data-plasmic-name={"consent"}
              data-plasmic-override={overrides.consent}
              className={classNames("__wab_instance", sty.consent)}
            />

            {true ? (
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__kedwj)}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__duVvN
                  )}
                >
                  {"Order To: "}
                </div>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text___65FKk
                  )}
                >
                  {"Ship To:"}
                </div>
              </p.Stack>
            ) : null}
            {true ? (
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__kGhwE)}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__cnHle
                  )}
                >
                  {"ABC Company, \nLocation"}
                </div>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text___2Ds3G
                  )}
                >
                  {"ABC Company, \nLocation"}
                </div>
              </p.Stack>
            ) : null}
            {true ? (
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox___5OL50)}
              >
                <div className={classNames(projectcss.all, sty.freeBox__suClo)}>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__xZj3L
                    )}
                  >
                    {"Contact:"}
                  </div>

                  {true ? (
                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__fGebm)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__hS9Fp
                        )}
                      >
                        {"Name:"}
                      </div>

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__ooEfb
                        )}
                      >
                        {"1234567890"}
                      </div>
                    </p.Stack>
                  ) : null}
                </div>

                <div
                  className={classNames(projectcss.all, sty.freeBox___6ABmc)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__deKgz
                    )}
                  >
                    {"Date:"}
                  </div>

                  {true ? (
                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__pJpW)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__xaJrX
                        )}
                      >
                        {"1234567890"}
                      </div>
                    </p.Stack>
                  ) : null}
                </div>
              </p.Stack>
            ) : null}
            {true ? (
              <div className={classNames(projectcss.all, sty.freeBox__veZZc)}>
                <div
                  className={classNames(projectcss.all, sty.freeBox___3Pqjr)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__mYu1
                    )}
                  >
                    {"#"}
                  </div>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__n9OCo
                    )}
                  >
                    {"Product ID"}
                  </div>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__q3Xqh
                    )}
                  >
                    {"Product"}
                  </div>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__wBwkB
                    )}
                  >
                    {"Quantity"}
                  </div>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__kiLx
                    )}
                  >
                    {"Unit Price"}
                  </div>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__pVrv7
                    )}
                  >
                    {"Total"}
                  </div>
                </div>

                <div className={classNames(projectcss.all, sty.freeBox___7LH2)}>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__m86Ri)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___4MdnN
                      )}
                    >
                      {"#"}
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__tjzht
                      )}
                    >
                      {"Product ID"}
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__pE0L2
                      )}
                    >
                      {"Product"}
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__uywDy
                      )}
                    >
                      {"Quantity"}
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__lz3Jh
                      )}
                    >
                      {"Unit Price"}
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__xf80A
                      )}
                    >
                      {"Total"}
                    </div>
                  </div>

                  {true ? (
                    <div
                      className={classNames(projectcss.all, sty.freeBox__aliwo)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__juqV
                        )}
                      >
                        {"#"}
                      </div>

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__gNVui
                        )}
                      >
                        {"Product ID"}
                      </div>

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__pP3Ns
                        )}
                      >
                        {"Product"}
                      </div>

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__frvVd
                        )}
                      >
                        {"Quantity"}
                      </div>

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__p50W
                        )}
                      >
                        {"Unit Price"}
                      </div>

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__spTro
                        )}
                      >
                        {"Total"}
                      </div>
                    </div>
                  ) : null}
                  {true ? (
                    <div
                      className={classNames(projectcss.all, sty.freeBox__k1JmT)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__g2ZJp
                        )}
                      >
                        {"#"}
                      </div>

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__mvPc2
                        )}
                      >
                        {"Product ID"}
                      </div>

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__du4G4
                        )}
                      >
                        {"Product"}
                      </div>

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__maIve
                        )}
                      >
                        {"Quantity"}
                      </div>

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__tpIuy
                        )}
                      >
                        {"Unit Price"}
                      </div>

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__aBiCg
                        )}
                      >
                        {"Total"}
                      </div>
                    </div>
                  ) : null}
                  {true ? (
                    <div
                      className={classNames(projectcss.all, sty.freeBox__rOqnr)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__aVsJz
                        )}
                      >
                        {"#"}
                      </div>

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__of1FX
                        )}
                      >
                        {"Product ID"}
                      </div>

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__uoL5N
                        )}
                      >
                        {"Product"}
                      </div>

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__d9Y5N
                        )}
                      >
                        {"Quantity"}
                      </div>

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__hPh7A
                        )}
                      >
                        {"Unit Price"}
                      </div>

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__azl7T
                        )}
                      >
                        {"Total"}
                      </div>
                    </div>
                  ) : null}
                </div>
              </div>
            ) : null}
            {true ? (
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__vgopK)}
              >
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__sgYuc)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__np1Ih
                    )}
                  >
                    {"Sub Total"}
                  </div>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__in5Rf
                    )}
                  >
                    {"Total"}
                  </div>
                </p.Stack>

                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__qOrvG)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__uSsiX
                    )}
                  >
                    {"Tax"}
                  </div>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__kqLfc
                    )}
                  >
                    {"Total"}
                  </div>
                </p.Stack>

                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__odqZw)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__f8Ahk
                    )}
                  >
                    {"Total"}
                  </div>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__wAk0Q
                    )}
                  >
                    {"Total"}
                  </div>
                </p.Stack>
              </p.Stack>
            ) : null}
            {true ? (
              <ButtonB
                data-plasmic-name={"formbutton"}
                data-plasmic-override={overrides.formbutton}
                className={classNames("__wab_instance", sty.formbutton)}
                connectmm={true}
              />
            ) : null}
          </p.Stack>
        ) : null}
        {(
          hasVariant(variants, "confirmed", "confirmed")
            ? true
            : hasVariant(variants, "notfound", "notfound")
            ? true
            : hasVariant(variants, "loading", "loading")
            ? true
            : true
        ) ? (
          <div
            className={classNames(
              projectcss.all,
              projectcss.__wab_text,
              sty.text__tDcVd,
              {
                [sty.textconfirmed__tDcVd3JYSs]: hasVariant(
                  variants,
                  "confirmed",
                  "confirmed"
                ),

                [sty.textloading__tDcVDqCclm]: hasVariant(
                  variants,
                  "loading",
                  "loading"
                ),

                [sty.textnotfound__tDcVdoNFd]: hasVariant(
                  variants,
                  "notfound",
                  "notfound"
                )
              }
            )}
          >
            {hasVariant(variants, "confirmed", "confirmed")
              ? "Logistics already approved."
              : hasVariant(variants, "notfound", "notfound")
              ? "No Record Found.\nPlease create the Logistics Form."
              : "Fetching Data from Database...."}
          </div>
        ) : null}
      </div>
    </div>
  );
}

const PlasmicDescendants = {
  root: [
    "root",
    "applicationForm",
    "supplier",
    "shipmentmode",
    "origincountry",
    "sap",
    "grn",
    "creditnotevalue",
    "creditnotevalue2",
    "creditnotevalue3",
    "creditnotevalue4",
    "creditnotevalue5",
    "consent",
    "formbutton"
  ],

  applicationForm: [
    "applicationForm",
    "supplier",
    "shipmentmode",
    "origincountry",
    "sap",
    "grn",
    "creditnotevalue",
    "creditnotevalue2",
    "creditnotevalue3",
    "creditnotevalue4",
    "creditnotevalue5",
    "consent",
    "formbutton"
  ],

  supplier: ["supplier"],
  shipmentmode: ["shipmentmode"],
  origincountry: ["origincountry"],
  sap: ["sap"],
  grn: ["grn"],
  creditnotevalue: ["creditnotevalue"],
  creditnotevalue2: ["creditnotevalue2"],
  creditnotevalue3: ["creditnotevalue3"],
  creditnotevalue4: ["creditnotevalue4"],
  creditnotevalue5: ["creditnotevalue5"],
  consent: ["consent"],
  formbutton: ["formbutton"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = deriveRenderOpts(props, {
      name: nodeName,
      descendantNames: [...PlasmicDescendants[nodeName]],
      internalArgPropNames: PlasmicLogisticsconfirmation__ArgProps,
      internalVariantPropNames: PlasmicLogisticsconfirmation__VariantProps
    });

    return PlasmicLogisticsconfirmation__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicLogisticsconfirmation";
  } else {
    func.displayName = `PlasmicLogisticsconfirmation.${nodeName}`;
  }
  return func;
}

export const PlasmicLogisticsconfirmation = Object.assign(
  // Top-level PlasmicLogisticsconfirmation renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    applicationForm: makeNodeComponent("applicationForm"),
    supplier: makeNodeComponent("supplier"),
    shipmentmode: makeNodeComponent("shipmentmode"),
    origincountry: makeNodeComponent("origincountry"),
    sap: makeNodeComponent("sap"),
    grn: makeNodeComponent("grn"),
    creditnotevalue: makeNodeComponent("creditnotevalue"),
    creditnotevalue2: makeNodeComponent("creditnotevalue2"),
    creditnotevalue3: makeNodeComponent("creditnotevalue3"),
    creditnotevalue4: makeNodeComponent("creditnotevalue4"),
    creditnotevalue5: makeNodeComponent("creditnotevalue5"),
    consent: makeNodeComponent("consent"),
    formbutton: makeNodeComponent("formbutton"),
    // Metadata about props expected for PlasmicLogisticsconfirmation
    internalVariantProps: PlasmicLogisticsconfirmation__VariantProps,
    internalArgProps: PlasmicLogisticsconfirmation__ArgProps
  }
);

export default PlasmicLogisticsconfirmation;
/* prettier-ignore-end */
