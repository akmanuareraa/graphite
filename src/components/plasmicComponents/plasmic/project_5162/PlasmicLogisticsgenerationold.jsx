// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: 5GT6nVB5WgvLWb2iBXTk1E
// Component: ArxPBuBw6bS
import * as React from "react";
import * as p from "@plasmicapp/react-web";
import {
  hasVariant,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts
} from "@plasmicapp/react-web";
import ButtonB from "../../ButtonB"; // plasmic-import: oSXCQ8ez26/component
import "@plasmicapp/react-web/lib/plasmic.css";
import projectcss from "./plasmic_project_5162.module.css"; // plasmic-import: 5GT6nVB5WgvLWb2iBXTk1E/projectcss
import sty from "./PlasmicLogisticsgenerationold.module.css"; // plasmic-import: ArxPBuBw6bS/css

export const PlasmicLogisticsgenerationold__VariantProps = new Array(
  "displaylogistics"
);

export const PlasmicLogisticsgenerationold__ArgProps = new Array(
  "cha",
  "ffname",
  "entryno",
  "entrydate",
  "dutyamount",
  "hts",
  "invoiceno",
  "tfamount",
  "ntfamount",
  "tchaamount",
  "ntchaamount"
);

function PlasmicLogisticsgenerationold__RenderFunc(props) {
  const { variants, args, overrides, forNode } = props;
  return (
    <div
      data-plasmic-name={"root"}
      data-plasmic-override={overrides.root}
      data-plasmic-root={true}
      data-plasmic-for-node={forNode}
      className={classNames(
        projectcss.all,
        projectcss.root_reset,
        projectcss.plasmic_default_styles,
        projectcss.plasmic_tokens,
        sty.root
      )}
    >
      <div
        className={classNames(
          projectcss.all,
          projectcss.__wab_text,
          sty.text__c6I9R,
          {
            [sty.textdisplaylogistics__c6I9RgGQk]: hasVariant(
              variants,
              "displaylogistics",
              "displaylogistics"
            )
          }
        )}
      >
        {hasVariant(variants, "displaylogistics", "displaylogistics")
          ? "LOGISTICS GENERATION"
          : "SALES ORDER GENERATION"}
      </div>

      <div
        data-plasmic-name={"applicationForm"}
        data-plasmic-override={overrides.applicationForm}
        className={classNames(projectcss.all, sty.applicationForm, {
          [sty.applicationFormdisplaylogistics]: hasVariant(
            variants,
            "displaylogistics",
            "displaylogistics"
          )
        })}
      >
        <p.Stack
          as={"div"}
          hasGap={true}
          className={classNames(projectcss.all, sty.freeBox__s39Ng, {
            [sty.freeBoxdisplaylogistics__s39NggGQk]: hasVariant(
              variants,
              "displaylogistics",
              "displaylogistics"
            )
          })}
        >
          {(
            hasVariant(variants, "displaylogistics", "displaylogistics")
              ? true
              : true
          ) ? (
            <div
              className={classNames(projectcss.all, sty.freeBox__eqbZi, {
                [sty.freeBoxdisplaylogistics__eqbZigGQk]: hasVariant(
                  variants,
                  "displaylogistics",
                  "displaylogistics"
                )
              })}
            >
              <div
                className={classNames(projectcss.all, sty.freeBox__movNx, {
                  [sty.freeBoxdisplaylogistics__movNXgGQk]: hasVariant(
                    variants,
                    "displaylogistics",
                    "displaylogistics"
                  )
                })}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__q1Ar,
                    {
                      [sty.textdisplaylogistics__q1ArgGQk]: hasVariant(
                        variants,
                        "displaylogistics",
                        "displaylogistics"
                      )
                    }
                  )}
                >
                  {hasVariant(variants, "displaylogistics", "displaylogistics")
                    ? "Invoice No"
                    : "Order ID"}
                </div>

                {true ? (
                  <div
                    className={classNames(projectcss.all, sty.freeBox___6KJQi, {
                      [sty.freeBoxdisplaylogistics___6KJQigGQk]: hasVariant(
                        variants,
                        "displaylogistics",
                        "displaylogistics"
                      )
                    })}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___1PgJg,
                        {
                          [sty.textdisplaylogistics___1PgJGgGQk]: hasVariant(
                            variants,
                            "displaylogistics",
                            "displaylogistics"
                          )
                        }
                      )}
                    >
                      {"#"}
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        sty.freeBox__u5REk,
                        {
                          [sty.freeBoxdisplaylogistics__u5REKgGQk]: hasVariant(
                            variants,
                            "displaylogistics",
                            "displaylogistics"
                          )
                        }
                      )}
                    >
                      {p.renderPlasmicSlot({
                        defaultContents: "ABC123",
                        value: args.invoiceno,
                        className: classNames(sty.slotTargetInvoiceno, {
                          [sty.slotTargetInvoicenodisplaylogistics]: hasVariant(
                            variants,
                            "displaylogistics",
                            "displaylogistics"
                          )
                        })
                      })}
                    </div>
                  </div>
                ) : null}
              </div>
            </div>
          ) : null}
          {(
            hasVariant(variants, "displaylogistics", "displaylogistics")
              ? true
              : false
          ) ? (
            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__tM4AR, {
                [sty.freeBoxdisplaylogistics__tM4ARgGQk]: hasVariant(
                  variants,
                  "displaylogistics",
                  "displaylogistics"
                )
              })}
            >
              {(
                hasVariant(variants, "displaylogistics", "displaylogistics")
                  ? true
                  : true
              ) ? (
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__mFeI,
                    {
                      [sty.textdisplaylogistics__mFeIgGQk]: hasVariant(
                        variants,
                        "displaylogistics",
                        "displaylogistics"
                      )
                    }
                  )}
                >
                  {"Order To: "}
                </div>
              ) : null}
              {(
                hasVariant(variants, "displaylogistics", "displaylogistics")
                  ? true
                  : true
              ) ? (
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__duUdh,
                    {
                      [sty.textdisplaylogistics__duUdhgGQk]: hasVariant(
                        variants,
                        "displaylogistics",
                        "displaylogistics"
                      )
                    }
                  )}
                >
                  {"Ship To:"}
                </div>
              ) : null}
            </p.Stack>
          ) : null}
          {(
            hasVariant(variants, "displaylogistics", "displaylogistics")
              ? true
              : true
          ) ? (
            <div
              className={classNames(projectcss.all, sty.freeBox__gvSc9, {
                [sty.freeBoxdisplaylogistics__gvSc9GGQk]: hasVariant(
                  variants,
                  "displaylogistics",
                  "displaylogistics"
                )
              })}
            >
              <div
                className={classNames(projectcss.all, sty.freeBox__dqiL, {
                  [sty.freeBoxdisplaylogistics__dqiLgGQk]: hasVariant(
                    variants,
                    "displaylogistics",
                    "displaylogistics"
                  )
                })}
              >
                {(
                  hasVariant(variants, "displaylogistics", "displaylogistics")
                    ? true
                    : true
                ) ? (
                  <div
                    className={classNames(projectcss.all, sty.freeBox__umHx3, {
                      [sty.freeBoxdisplaylogistics__umHx3GGQk]: hasVariant(
                        variants,
                        "displaylogistics",
                        "displaylogistics"
                      )
                    })}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___4Q3Th,
                        {
                          [sty.textdisplaylogistics___4Q3ThgGQk]: hasVariant(
                            variants,
                            "displaylogistics",
                            "displaylogistics"
                          )
                        }
                      )}
                    >
                      {"CHA Name"}
                    </div>

                    <div
                      data-plasmic-name={"supplier"}
                      data-plasmic-override={overrides.supplier}
                      className={classNames(projectcss.all, sty.supplier, {
                        [sty.supplierdisplaylogistics]: hasVariant(
                          variants,
                          "displaylogistics",
                          "displaylogistics"
                        )
                      })}
                    >
                      {p.renderPlasmicSlot({
                        defaultContents: "N/A",
                        value: args.cha,
                        className: classNames(sty.slotTargetCha, {
                          [sty.slotTargetChadisplaylogistics]: hasVariant(
                            variants,
                            "displaylogistics",
                            "displaylogistics"
                          )
                        })
                      })}
                    </div>
                  </div>
                ) : null}
              </div>

              <div
                className={classNames(projectcss.all, sty.freeBox__czr1K, {
                  [sty.freeBoxdisplaylogistics__czr1KgGQk]: hasVariant(
                    variants,
                    "displaylogistics",
                    "displaylogistics"
                  )
                })}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__yrXdY,
                    {
                      [sty.textdisplaylogistics__yrXdYgGQk]: hasVariant(
                        variants,
                        "displaylogistics",
                        "displaylogistics"
                      )
                    }
                  )}
                >
                  {"Freight Forwarder Name"}
                </div>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__qSaW,
                    {
                      [sty.textdisplaylogistics__qSaWgGQk]: hasVariant(
                        variants,
                        "displaylogistics",
                        "displaylogistics"
                      )
                    }
                  )}
                >
                  {":"}
                </div>

                <div
                  data-plasmic-name={"shipmentmode"}
                  data-plasmic-override={overrides.shipmentmode}
                  className={classNames(projectcss.all, sty.shipmentmode, {
                    [sty.shipmentmodedisplaylogistics]: hasVariant(
                      variants,
                      "displaylogistics",
                      "displaylogistics"
                    )
                  })}
                >
                  {p.renderPlasmicSlot({
                    defaultContents: "N/A",
                    value: args.ffname,
                    className: classNames(sty.slotTargetFfname, {
                      [sty.slotTargetFfnamedisplaylogistics]: hasVariant(
                        variants,
                        "displaylogistics",
                        "displaylogistics"
                      )
                    })
                  })}
                </div>
              </div>

              <div
                className={classNames(projectcss.all, sty.freeBox__z4JF5, {
                  [sty.freeBoxdisplaylogistics__z4JF5GGQk]: hasVariant(
                    variants,
                    "displaylogistics",
                    "displaylogistics"
                  )
                })}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__dyAn2,
                    {
                      [sty.textdisplaylogistics__dyAn2GGQk]: hasVariant(
                        variants,
                        "displaylogistics",
                        "displaylogistics"
                      )
                    }
                  )}
                >
                  {"Bill of Entry No"}
                </div>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__ebEkk,
                    {
                      [sty.textdisplaylogistics__ebEkkgGQk]: hasVariant(
                        variants,
                        "displaylogistics",
                        "displaylogistics"
                      )
                    }
                  )}
                >
                  {":"}
                </div>

                <div
                  data-plasmic-name={"origincountry"}
                  data-plasmic-override={overrides.origincountry}
                  className={classNames(projectcss.all, sty.origincountry, {
                    [sty.origincountrydisplaylogistics]: hasVariant(
                      variants,
                      "displaylogistics",
                      "displaylogistics"
                    )
                  })}
                >
                  {p.renderPlasmicSlot({
                    defaultContents: "N/A",
                    value: args.entryno,
                    className: classNames(sty.slotTargetEntryno, {
                      [sty.slotTargetEntrynodisplaylogistics]: hasVariant(
                        variants,
                        "displaylogistics",
                        "displaylogistics"
                      )
                    })
                  })}
                </div>
              </div>

              <div
                className={classNames(projectcss.all, sty.freeBox__wVlgM, {
                  [sty.freeBoxdisplaylogistics__wVlgMgGQk]: hasVariant(
                    variants,
                    "displaylogistics",
                    "displaylogistics"
                  )
                })}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__qz5Fh,
                    {
                      [sty.textdisplaylogistics__qz5FHgGQk]: hasVariant(
                        variants,
                        "displaylogistics",
                        "displaylogistics"
                      )
                    }
                  )}
                >
                  {"Bill of Entry Date"}
                </div>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__wmfYo,
                    {
                      [sty.textdisplaylogistics__wmfYOgGQk]: hasVariant(
                        variants,
                        "displaylogistics",
                        "displaylogistics"
                      )
                    }
                  )}
                >
                  {":"}
                </div>

                <div
                  data-plasmic-name={"sap"}
                  data-plasmic-override={overrides.sap}
                  className={classNames(projectcss.all, sty.sap, {
                    [sty.sapdisplaylogistics]: hasVariant(
                      variants,
                      "displaylogistics",
                      "displaylogistics"
                    )
                  })}
                >
                  {p.renderPlasmicSlot({
                    defaultContents: "N/A",
                    value: args.entrydate,
                    className: classNames(sty.slotTargetEntrydate, {
                      [sty.slotTargetEntrydatedisplaylogistics]: hasVariant(
                        variants,
                        "displaylogistics",
                        "displaylogistics"
                      )
                    })
                  })}
                </div>
              </div>

              <div
                className={classNames(projectcss.all, sty.freeBox__zolIn, {
                  [sty.freeBoxdisplaylogistics__zolIngGQk]: hasVariant(
                    variants,
                    "displaylogistics",
                    "displaylogistics"
                  )
                })}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__qt2K9,
                    {
                      [sty.textdisplaylogistics__qt2K9GGQk]: hasVariant(
                        variants,
                        "displaylogistics",
                        "displaylogistics"
                      )
                    }
                  )}
                >
                  {"Duty Amount"}
                </div>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__nc7B4,
                    {
                      [sty.textdisplaylogistics__nc7B4GGQk]: hasVariant(
                        variants,
                        "displaylogistics",
                        "displaylogistics"
                      )
                    }
                  )}
                >
                  {":"}
                </div>

                <div
                  data-plasmic-name={"grn"}
                  data-plasmic-override={overrides.grn}
                  className={classNames(projectcss.all, sty.grn, {
                    [sty.grndisplaylogistics]: hasVariant(
                      variants,
                      "displaylogistics",
                      "displaylogistics"
                    )
                  })}
                >
                  {p.renderPlasmicSlot({
                    defaultContents: "N/A",
                    value: args.dutyamount,
                    className: classNames(sty.slotTargetDutyamount, {
                      [sty.slotTargetDutyamountdisplaylogistics]: hasVariant(
                        variants,
                        "displaylogistics",
                        "displaylogistics"
                      )
                    })
                  })}
                </div>
              </div>

              <div
                className={classNames(projectcss.all, sty.freeBox__dt4VQ, {
                  [sty.freeBoxdisplaylogistics__dt4VQgGQk]: hasVariant(
                    variants,
                    "displaylogistics",
                    "displaylogistics"
                  )
                })}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__o2Bw,
                    {
                      [sty.textdisplaylogistics__o2BwgGQk]: hasVariant(
                        variants,
                        "displaylogistics",
                        "displaylogistics"
                      )
                    }
                  )}
                >
                  {"HTS Code"}
                </div>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__gDov,
                    {
                      [sty.textdisplaylogistics__gDovGGQk]: hasVariant(
                        variants,
                        "displaylogistics",
                        "displaylogistics"
                      )
                    }
                  )}
                >
                  {":"}
                </div>

                <div
                  data-plasmic-name={"creditnotevalue"}
                  data-plasmic-override={overrides.creditnotevalue}
                  className={classNames(projectcss.all, sty.creditnotevalue, {
                    [sty.creditnotevaluedisplaylogistics]: hasVariant(
                      variants,
                      "displaylogistics",
                      "displaylogistics"
                    )
                  })}
                >
                  {p.renderPlasmicSlot({
                    defaultContents: "N/A",
                    value: args.hts,
                    className: classNames(sty.slotTargetHts, {
                      [sty.slotTargetHtsdisplaylogistics]: hasVariant(
                        variants,
                        "displaylogistics",
                        "displaylogistics"
                      )
                    })
                  })}
                </div>
              </div>

              <div
                className={classNames(projectcss.all, sty.freeBox__t1GqG, {
                  [sty.freeBoxdisplaylogistics__t1GqGgGQk]: hasVariant(
                    variants,
                    "displaylogistics",
                    "displaylogistics"
                  )
                })}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__wXis,
                    {
                      [sty.textdisplaylogistics__wXisGGQk]: hasVariant(
                        variants,
                        "displaylogistics",
                        "displaylogistics"
                      )
                    }
                  )}
                >
                  {"Taxable Freight Amount"}
                </div>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__dSbnQ,
                    {
                      [sty.textdisplaylogistics__dSbnQgGQk]: hasVariant(
                        variants,
                        "displaylogistics",
                        "displaylogistics"
                      )
                    }
                  )}
                >
                  {":"}
                </div>

                <div
                  data-plasmic-name={"creditnotevalue2"}
                  data-plasmic-override={overrides.creditnotevalue2}
                  className={classNames(projectcss.all, sty.creditnotevalue2, {
                    [sty.creditnotevalue2displaylogistics]: hasVariant(
                      variants,
                      "displaylogistics",
                      "displaylogistics"
                    )
                  })}
                >
                  {p.renderPlasmicSlot({
                    defaultContents: "N/A",
                    value: args.tfamount,
                    className: classNames(sty.slotTargetTfamount, {
                      [sty.slotTargetTfamountdisplaylogistics]: hasVariant(
                        variants,
                        "displaylogistics",
                        "displaylogistics"
                      )
                    })
                  })}
                </div>
              </div>

              <div
                className={classNames(projectcss.all, sty.freeBox__e2Rcx, {
                  [sty.freeBoxdisplaylogistics__e2RcXgGQk]: hasVariant(
                    variants,
                    "displaylogistics",
                    "displaylogistics"
                  )
                })}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__cNDt,
                    {
                      [sty.textdisplaylogistics__cNDtGGQk]: hasVariant(
                        variants,
                        "displaylogistics",
                        "displaylogistics"
                      )
                    }
                  )}
                >
                  {"Non Taxable Freight Amount"}
                </div>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__kKpvA,
                    {
                      [sty.textdisplaylogistics__kKpvAgGQk]: hasVariant(
                        variants,
                        "displaylogistics",
                        "displaylogistics"
                      )
                    }
                  )}
                >
                  {":"}
                </div>

                <div
                  data-plasmic-name={"creditnotevalue3"}
                  data-plasmic-override={overrides.creditnotevalue3}
                  className={classNames(projectcss.all, sty.creditnotevalue3, {
                    [sty.creditnotevalue3displaylogistics]: hasVariant(
                      variants,
                      "displaylogistics",
                      "displaylogistics"
                    )
                  })}
                >
                  {p.renderPlasmicSlot({
                    defaultContents: "N/A",
                    value: args.ntfamount,
                    className: classNames(sty.slotTargetNtfamount, {
                      [sty.slotTargetNtfamountdisplaylogistics]: hasVariant(
                        variants,
                        "displaylogistics",
                        "displaylogistics"
                      )
                    })
                  })}
                </div>
              </div>

              <div
                className={classNames(projectcss.all, sty.freeBox__lWfhg, {
                  [sty.freeBoxdisplaylogistics__lWfhGgGQk]: hasVariant(
                    variants,
                    "displaylogistics",
                    "displaylogistics"
                  )
                })}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__mosPp,
                    {
                      [sty.textdisplaylogistics__mosPpgGQk]: hasVariant(
                        variants,
                        "displaylogistics",
                        "displaylogistics"
                      )
                    }
                  )}
                >
                  {"Taxable CHA Amount"}
                </div>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__kovOy,
                    {
                      [sty.textdisplaylogistics__kovOygGQk]: hasVariant(
                        variants,
                        "displaylogistics",
                        "displaylogistics"
                      )
                    }
                  )}
                >
                  {":"}
                </div>

                <div
                  data-plasmic-name={"creditnotevalue4"}
                  data-plasmic-override={overrides.creditnotevalue4}
                  className={classNames(projectcss.all, sty.creditnotevalue4, {
                    [sty.creditnotevalue4displaylogistics]: hasVariant(
                      variants,
                      "displaylogistics",
                      "displaylogistics"
                    )
                  })}
                >
                  {p.renderPlasmicSlot({
                    defaultContents: "N/A",
                    value: args.tchaamount,
                    className: classNames(sty.slotTargetTchaamount, {
                      [sty.slotTargetTchaamountdisplaylogistics]: hasVariant(
                        variants,
                        "displaylogistics",
                        "displaylogistics"
                      )
                    })
                  })}
                </div>
              </div>

              <div
                className={classNames(projectcss.all, sty.freeBox___49Qlq, {
                  [sty.freeBoxdisplaylogistics___49QlqgGQk]: hasVariant(
                    variants,
                    "displaylogistics",
                    "displaylogistics"
                  )
                })}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__mb9X,
                    {
                      [sty.textdisplaylogistics__mb9XgGQk]: hasVariant(
                        variants,
                        "displaylogistics",
                        "displaylogistics"
                      )
                    }
                  )}
                >
                  {"Non Taxable CHA Amount"}
                </div>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text___8OlNv,
                    {
                      [sty.textdisplaylogistics___8OlNvgGQk]: hasVariant(
                        variants,
                        "displaylogistics",
                        "displaylogistics"
                      )
                    }
                  )}
                >
                  {":"}
                </div>

                <div
                  data-plasmic-name={"creditnotevalue5"}
                  data-plasmic-override={overrides.creditnotevalue5}
                  className={classNames(projectcss.all, sty.creditnotevalue5, {
                    [sty.creditnotevalue5displaylogistics]: hasVariant(
                      variants,
                      "displaylogistics",
                      "displaylogistics"
                    )
                  })}
                >
                  {p.renderPlasmicSlot({
                    defaultContents: "N/A",
                    value: args.ntchaamount,
                    className: classNames(sty.slotTargetNtchaamount, {
                      [sty.slotTargetNtchaamountdisplaylogistics]: hasVariant(
                        variants,
                        "displaylogistics",
                        "displaylogistics"
                      )
                    })
                  })}
                </div>
              </div>
            </div>
          ) : null}
          {(
            hasVariant(variants, "displaylogistics", "displaylogistics")
              ? true
              : true
          ) ? (
            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__pY6Em, {
                [sty.freeBoxdisplaylogistics__pY6EmgGQk]: hasVariant(
                  variants,
                  "displaylogistics",
                  "displaylogistics"
                )
              })}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__byc8T,
                  {
                    [sty.textdisplaylogistics__byc8TgGQk]: hasVariant(
                      variants,
                      "displaylogistics",
                      "displaylogistics"
                    )
                  }
                )}
              >
                {"Order To: "}
              </div>

              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__qyjHc,
                  {
                    [sty.textdisplaylogistics__qyjHcgGQk]: hasVariant(
                      variants,
                      "displaylogistics",
                      "displaylogistics"
                    )
                  }
                )}
              >
                {"Ship To:"}
              </div>
            </p.Stack>
          ) : null}
          {(
            hasVariant(variants, "displaylogistics", "displaylogistics")
              ? true
              : true
          ) ? (
            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__gpFAg, {
                [sty.freeBoxdisplaylogistics__gpFAggGQk]: hasVariant(
                  variants,
                  "displaylogistics",
                  "displaylogistics"
                )
              })}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__v6BJb,
                  {
                    [sty.textdisplaylogistics__v6BJBgGQk]: hasVariant(
                      variants,
                      "displaylogistics",
                      "displaylogistics"
                    )
                  }
                )}
              >
                {"ABC Company, \nLocation"}
              </div>

              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text___6CX6P,
                  {
                    [sty.textdisplaylogistics___6CX6PgGQk]: hasVariant(
                      variants,
                      "displaylogistics",
                      "displaylogistics"
                    )
                  }
                )}
              >
                {"ABC Company, \nLocation"}
              </div>
            </p.Stack>
          ) : null}
          {(
            hasVariant(variants, "displaylogistics", "displaylogistics")
              ? true
              : true
          ) ? (
            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox___63GYl, {
                [sty.freeBoxdisplaylogistics___63GYlgGQk]: hasVariant(
                  variants,
                  "displaylogistics",
                  "displaylogistics"
                )
              })}
            >
              <div
                className={classNames(projectcss.all, sty.freeBox__sY2Xb, {
                  [sty.freeBoxdisplaylogistics__sY2XbgGQk]: hasVariant(
                    variants,
                    "displaylogistics",
                    "displaylogistics"
                  )
                })}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__mqNt
                  )}
                >
                  {"Contact:"}
                </div>

                {true ? (
                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__sVosO, {
                      [sty.freeBoxdisplaylogistics__sVosOgGQk]: hasVariant(
                        variants,
                        "displaylogistics",
                        "displaylogistics"
                      )
                    })}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__uFwiW,
                        {
                          [sty.textdisplaylogistics__uFwiWgGQk]: hasVariant(
                            variants,
                            "displaylogistics",
                            "displaylogistics"
                          )
                        }
                      )}
                    >
                      {"Name:"}
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__x0Sbl,
                        {
                          [sty.textdisplaylogistics__x0SblgGQk]: hasVariant(
                            variants,
                            "displaylogistics",
                            "displaylogistics"
                          )
                        }
                      )}
                    >
                      {"1234567890"}
                    </div>
                  </p.Stack>
                ) : null}
              </div>

              <div
                className={classNames(projectcss.all, sty.freeBox__bzVT, {
                  [sty.freeBoxdisplaylogistics__bzVTgGQk]: hasVariant(
                    variants,
                    "displaylogistics",
                    "displaylogistics"
                  )
                })}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__dZr0Q,
                    {
                      [sty.textdisplaylogistics__dZr0QgGQk]: hasVariant(
                        variants,
                        "displaylogistics",
                        "displaylogistics"
                      )
                    }
                  )}
                >
                  {"Date:"}
                </div>

                {true ? (
                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox___93B9I, {
                      [sty.freeBoxdisplaylogistics___93B9IgGQk]: hasVariant(
                        variants,
                        "displaylogistics",
                        "displaylogistics"
                      )
                    })}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__dslZl,
                        {
                          [sty.textdisplaylogistics__dslZlgGQk]: hasVariant(
                            variants,
                            "displaylogistics",
                            "displaylogistics"
                          )
                        }
                      )}
                    >
                      {"1234567890"}
                    </div>
                  </p.Stack>
                ) : null}
              </div>
            </p.Stack>
          ) : null}
          {(
            hasVariant(variants, "displaylogistics", "displaylogistics")
              ? true
              : true
          ) ? (
            <div
              className={classNames(projectcss.all, sty.freeBox___0XtkR, {
                [sty.freeBoxdisplaylogistics___0XtkRgGQk]: hasVariant(
                  variants,
                  "displaylogistics",
                  "displaylogistics"
                )
              })}
            >
              <div
                className={classNames(projectcss.all, sty.freeBox__fOl0F, {
                  [sty.freeBoxdisplaylogistics__fOl0FgGQk]: hasVariant(
                    variants,
                    "displaylogistics",
                    "displaylogistics"
                  )
                })}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text___8AfTc,
                    {
                      [sty.textdisplaylogistics___8AfTCgGQk]: hasVariant(
                        variants,
                        "displaylogistics",
                        "displaylogistics"
                      )
                    }
                  )}
                >
                  {"#"}
                </div>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__bJldT,
                    {
                      [sty.textdisplaylogistics__bJldTgGQk]: hasVariant(
                        variants,
                        "displaylogistics",
                        "displaylogistics"
                      )
                    }
                  )}
                >
                  {"Product ID"}
                </div>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__fp84F,
                    {
                      [sty.textdisplaylogistics__fp84FgGQk]: hasVariant(
                        variants,
                        "displaylogistics",
                        "displaylogistics"
                      )
                    }
                  )}
                >
                  {"Product"}
                </div>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__oigbp,
                    {
                      [sty.textdisplaylogistics__oigbpgGQk]: hasVariant(
                        variants,
                        "displaylogistics",
                        "displaylogistics"
                      )
                    }
                  )}
                >
                  {"Quantity"}
                </div>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__gzNwi,
                    {
                      [sty.textdisplaylogistics__gzNwIgGQk]: hasVariant(
                        variants,
                        "displaylogistics",
                        "displaylogistics"
                      )
                    }
                  )}
                >
                  {"Unit Price"}
                </div>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__rwLmO,
                    {
                      [sty.textdisplaylogistics__rwLmOgGQk]: hasVariant(
                        variants,
                        "displaylogistics",
                        "displaylogistics"
                      )
                    }
                  )}
                >
                  {"Total"}
                </div>
              </div>

              <div className={classNames(projectcss.all, sty.freeBox__zEcex)}>
                <div
                  className={classNames(projectcss.all, sty.freeBox__uI5O, {
                    [sty.freeBoxdisplaylogistics__uI5OgGQk]: hasVariant(
                      variants,
                      "displaylogistics",
                      "displaylogistics"
                    )
                  })}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__ceyFv,
                      {
                        [sty.textdisplaylogistics__ceyFvgGQk]: hasVariant(
                          variants,
                          "displaylogistics",
                          "displaylogistics"
                        )
                      }
                    )}
                  >
                    {"#"}
                  </div>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__lnOjw,
                      {
                        [sty.textdisplaylogistics__lnOjwgGQk]: hasVariant(
                          variants,
                          "displaylogistics",
                          "displaylogistics"
                        )
                      }
                    )}
                  >
                    {"Product ID"}
                  </div>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___5WeSh,
                      {
                        [sty.textdisplaylogistics___5WeSHgGQk]: hasVariant(
                          variants,
                          "displaylogistics",
                          "displaylogistics"
                        )
                      }
                    )}
                  >
                    {"Product"}
                  </div>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__khx1Q,
                      {
                        [sty.textdisplaylogistics__khx1QgGQk]: hasVariant(
                          variants,
                          "displaylogistics",
                          "displaylogistics"
                        )
                      }
                    )}
                  >
                    {"Quantity"}
                  </div>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__h9MPk,
                      {
                        [sty.textdisplaylogistics__h9MPKgGQk]: hasVariant(
                          variants,
                          "displaylogistics",
                          "displaylogistics"
                        )
                      }
                    )}
                  >
                    {"Unit Price"}
                  </div>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__iYor,
                      {
                        [sty.textdisplaylogistics__iYorgGQk]: hasVariant(
                          variants,
                          "displaylogistics",
                          "displaylogistics"
                        )
                      }
                    )}
                  >
                    {"Total"}
                  </div>
                </div>

                {(
                  hasVariant(variants, "displaylogistics", "displaylogistics")
                    ? true
                    : true
                ) ? (
                  <div
                    className={classNames(projectcss.all, sty.freeBox__oUm5E, {
                      [sty.freeBoxdisplaylogistics__oUm5EgGQk]: hasVariant(
                        variants,
                        "displaylogistics",
                        "displaylogistics"
                      )
                    })}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__vtek,
                        {
                          [sty.textdisplaylogistics__vteKgGQk]: hasVariant(
                            variants,
                            "displaylogistics",
                            "displaylogistics"
                          )
                        }
                      )}
                    >
                      {"#"}
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__cBzOz,
                        {
                          [sty.textdisplaylogistics__cBzOZgGQk]: hasVariant(
                            variants,
                            "displaylogistics",
                            "displaylogistics"
                          )
                        }
                      )}
                    >
                      {"Product ID"}
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__y3Icd,
                        {
                          [sty.textdisplaylogistics__y3IcdgGQk]: hasVariant(
                            variants,
                            "displaylogistics",
                            "displaylogistics"
                          )
                        }
                      )}
                    >
                      {"Product"}
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___96QwH
                      )}
                    >
                      {"Quantity"}
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__mw5SX
                      )}
                    >
                      {"Unit Price"}
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__smgY
                      )}
                    >
                      {"Total"}
                    </div>
                  </div>
                ) : null}
                {(
                  hasVariant(variants, "displaylogistics", "displaylogistics")
                    ? true
                    : true
                ) ? (
                  <div
                    className={classNames(projectcss.all, sty.freeBox__oU0Ow, {
                      [sty.freeBoxdisplaylogistics__oU0OwgGQk]: hasVariant(
                        variants,
                        "displaylogistics",
                        "displaylogistics"
                      )
                    })}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__tpHod
                      )}
                    >
                      {"#"}
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__xg4Ah
                      )}
                    >
                      {"Product ID"}
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__jbpml
                      )}
                    >
                      {"Product"}
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__klXJr
                      )}
                    >
                      {"Quantity"}
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__migXh
                      )}
                    >
                      {"Unit Price"}
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__fOoIe
                      )}
                    >
                      {"Total"}
                    </div>
                  </div>
                ) : null}
                {(
                  hasVariant(variants, "displaylogistics", "displaylogistics")
                    ? true
                    : true
                ) ? (
                  <div
                    className={classNames(projectcss.all, sty.freeBox___2VVcS, {
                      [sty.freeBoxdisplaylogistics___2VVcSgGQk]: hasVariant(
                        variants,
                        "displaylogistics",
                        "displaylogistics"
                      )
                    })}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___21P0T
                      )}
                    >
                      {"#"}
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__nD42J
                      )}
                    >
                      {"Product ID"}
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__fC7S5
                      )}
                    >
                      {"Product"}
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__fskjz
                      )}
                    >
                      {"Quantity"}
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__rkdFx
                      )}
                    >
                      {"Unit Price"}
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__ikiIj
                      )}
                    >
                      {"Total"}
                    </div>
                  </div>
                ) : null}
              </div>
            </div>
          ) : null}
          {(
            hasVariant(variants, "displaylogistics", "displaylogistics")
              ? true
              : true
          ) ? (
            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox___7Tosc, {
                [sty.freeBoxdisplaylogistics___7ToscgGQk]: hasVariant(
                  variants,
                  "displaylogistics",
                  "displaylogistics"
                )
              })}
            >
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__pdwf9, {
                  [sty.freeBoxdisplaylogistics__pdwf9GGQk]: hasVariant(
                    variants,
                    "displaylogistics",
                    "displaylogistics"
                  )
                })}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__wCe8Z,
                    {
                      [sty.textdisplaylogistics__wCe8ZgGQk]: hasVariant(
                        variants,
                        "displaylogistics",
                        "displaylogistics"
                      )
                    }
                  )}
                >
                  {"Sub Total"}
                </div>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__x65X,
                    {
                      [sty.textdisplaylogistics__x65XgGQk]: hasVariant(
                        variants,
                        "displaylogistics",
                        "displaylogistics"
                      )
                    }
                  )}
                >
                  {"Total"}
                </div>
              </p.Stack>

              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__bPgZf, {
                  [sty.freeBoxdisplaylogistics__bPgZFgGQk]: hasVariant(
                    variants,
                    "displaylogistics",
                    "displaylogistics"
                  )
                })}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__qnT1Q
                  )}
                >
                  {"Tax"}
                </div>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__xi6Pj,
                    {
                      [sty.textdisplaylogistics__xi6PjgGQk]: hasVariant(
                        variants,
                        "displaylogistics",
                        "displaylogistics"
                      )
                    }
                  )}
                >
                  {"Total"}
                </div>
              </p.Stack>

              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__i2Tg2, {
                  [sty.freeBoxdisplaylogistics__i2Tg2GGQk]: hasVariant(
                    variants,
                    "displaylogistics",
                    "displaylogistics"
                  )
                })}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__ePDoD,
                    {
                      [sty.textdisplaylogistics__ePDoDgGQk]: hasVariant(
                        variants,
                        "displaylogistics",
                        "displaylogistics"
                      )
                    }
                  )}
                >
                  {"Total"}
                </div>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__f5Voi,
                    {
                      [sty.textdisplaylogistics__f5VoigGQk]: hasVariant(
                        variants,
                        "displaylogistics",
                        "displaylogistics"
                      )
                    }
                  )}
                >
                  {"Total"}
                </div>
              </p.Stack>
            </p.Stack>
          ) : null}
        </p.Stack>

        {true ? (
          <ButtonB
            data-plasmic-name={"formbutton"}
            data-plasmic-override={overrides.formbutton}
            className={classNames("__wab_instance", sty.formbutton, {
              [sty.formbuttondisplaylogistics]: hasVariant(
                variants,
                "displaylogistics",
                "displaylogistics"
              )
            })}
            connectmm={true}
          />
        ) : null}
      </div>
    </div>
  );
}

const PlasmicDescendants = {
  root: [
    "root",
    "applicationForm",
    "supplier",
    "shipmentmode",
    "origincountry",
    "sap",
    "grn",
    "creditnotevalue",
    "creditnotevalue2",
    "creditnotevalue3",
    "creditnotevalue4",
    "creditnotevalue5",
    "formbutton"
  ],

  applicationForm: [
    "applicationForm",
    "supplier",
    "shipmentmode",
    "origincountry",
    "sap",
    "grn",
    "creditnotevalue",
    "creditnotevalue2",
    "creditnotevalue3",
    "creditnotevalue4",
    "creditnotevalue5",
    "formbutton"
  ],

  supplier: ["supplier"],
  shipmentmode: ["shipmentmode"],
  origincountry: ["origincountry"],
  sap: ["sap"],
  grn: ["grn"],
  creditnotevalue: ["creditnotevalue"],
  creditnotevalue2: ["creditnotevalue2"],
  creditnotevalue3: ["creditnotevalue3"],
  creditnotevalue4: ["creditnotevalue4"],
  creditnotevalue5: ["creditnotevalue5"],
  formbutton: ["formbutton"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = deriveRenderOpts(props, {
      name: nodeName,
      descendantNames: [...PlasmicDescendants[nodeName]],
      internalArgPropNames: PlasmicLogisticsgenerationold__ArgProps,
      internalVariantPropNames: PlasmicLogisticsgenerationold__VariantProps
    });

    return PlasmicLogisticsgenerationold__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicLogisticsgenerationold";
  } else {
    func.displayName = `PlasmicLogisticsgenerationold.${nodeName}`;
  }
  return func;
}

export const PlasmicLogisticsgenerationold = Object.assign(
  // Top-level PlasmicLogisticsgenerationold renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    applicationForm: makeNodeComponent("applicationForm"),
    supplier: makeNodeComponent("supplier"),
    shipmentmode: makeNodeComponent("shipmentmode"),
    origincountry: makeNodeComponent("origincountry"),
    sap: makeNodeComponent("sap"),
    grn: makeNodeComponent("grn"),
    creditnotevalue: makeNodeComponent("creditnotevalue"),
    creditnotevalue2: makeNodeComponent("creditnotevalue2"),
    creditnotevalue3: makeNodeComponent("creditnotevalue3"),
    creditnotevalue4: makeNodeComponent("creditnotevalue4"),
    creditnotevalue5: makeNodeComponent("creditnotevalue5"),
    formbutton: makeNodeComponent("formbutton"),
    // Metadata about props expected for PlasmicLogisticsgenerationold
    internalVariantProps: PlasmicLogisticsgenerationold__VariantProps,
    internalArgProps: PlasmicLogisticsgenerationold__ArgProps
  }
);

export default PlasmicLogisticsgenerationold;
/* prettier-ignore-end */
