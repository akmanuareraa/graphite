// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: 5GT6nVB5WgvLWb2iBXTk1E
// Component: mUo8dNu01S5
import * as React from "react";
import * as p from "@plasmicapp/react-web";
import {
  hasVariant,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts
} from "@plasmicapp/react-web";
import ButtonB from "../../ButtonB"; // plasmic-import: oSXCQ8ez26/component
import "@plasmicapp/react-web/lib/plasmic.css";
import projectcss from "./plasmic_project_5162.module.css"; // plasmic-import: 5GT6nVB5WgvLWb2iBXTk1E/projectcss
import sty from "./PlasmicInvoicegeneration.module.css"; // plasmic-import: mUo8dNu01S5/css

export const PlasmicInvoicegeneration__VariantProps = new Array(
  "displayinvoice"
);

export const PlasmicInvoicegeneration__ArgProps = new Array(
  "date",
  "value",
  "awbbl",
  "qty",
  "gross",
  "volume",
  "invoiceno",
  "eta"
);

function PlasmicInvoicegeneration__RenderFunc(props) {
  const { variants, args, overrides, forNode } = props;
  return (
    <div
      data-plasmic-name={"root"}
      data-plasmic-override={overrides.root}
      data-plasmic-root={true}
      data-plasmic-for-node={forNode}
      className={classNames(projectcss.all, projectcss.root_reset, sty.root)}
    >
      <div
        className={classNames(
          projectcss.all,
          projectcss.__wab_text,
          sty.text__uQgei,
          {
            [sty.textdisplayinvoice__uQgeIokUjk]: hasVariant(
              variants,
              "displayinvoice",
              "displayinvoice"
            )
          }
        )}
      >
        {hasVariant(variants, "displayinvoice", "displayinvoice")
          ? "INVOICE GENERATION"
          : "SALES ORDER GENERATION"}
      </div>

      <div
        data-plasmic-name={"applicationForm"}
        data-plasmic-override={overrides.applicationForm}
        className={classNames(projectcss.all, sty.applicationForm, {
          [sty.applicationFormdisplayinvoice]: hasVariant(
            variants,
            "displayinvoice",
            "displayinvoice"
          )
        })}
      >
        <p.Stack
          as={"div"}
          hasGap={true}
          className={classNames(projectcss.all, sty.freeBox___8MuRw, {
            [sty.freeBoxdisplayinvoice___8MuRWokUjk]: hasVariant(
              variants,
              "displayinvoice",
              "displayinvoice"
            )
          })}
        >
          {(
            hasVariant(variants, "displayinvoice", "displayinvoice")
              ? true
              : false
          ) ? (
            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__gk6W, {
                [sty.freeBoxdisplayinvoice__gk6WOkUjk]: hasVariant(
                  variants,
                  "displayinvoice",
                  "displayinvoice"
                )
              })}
            >
              {(
                hasVariant(variants, "displayinvoice", "displayinvoice")
                  ? true
                  : true
              ) ? (
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text___1D6HD,
                    {
                      [sty.textdisplayinvoice___1D6HDokUjk]: hasVariant(
                        variants,
                        "displayinvoice",
                        "displayinvoice"
                      )
                    }
                  )}
                >
                  {"Order To: "}
                </div>
              ) : null}
              {(
                hasVariant(variants, "displayinvoice", "displayinvoice")
                  ? true
                  : true
              ) ? (
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__wGxCl,
                    {
                      [sty.textdisplayinvoice__wGxClokUjk]: hasVariant(
                        variants,
                        "displayinvoice",
                        "displayinvoice"
                      )
                    }
                  )}
                >
                  {"Ship To:"}
                </div>
              ) : null}
            </p.Stack>
          ) : null}
          {(
            hasVariant(variants, "displayinvoice", "displayinvoice")
              ? true
              : true
          ) ? (
            <div
              className={classNames(projectcss.all, sty.freeBox__m6SfG, {
                [sty.freeBoxdisplayinvoice__m6SfGokUjk]: hasVariant(
                  variants,
                  "displayinvoice",
                  "displayinvoice"
                )
              })}
            >
              <div
                className={classNames(projectcss.all, sty.freeBox__vKagz, {
                  [sty.freeBoxdisplayinvoice__vKagZokUjk]: hasVariant(
                    variants,
                    "displayinvoice",
                    "displayinvoice"
                  )
                })}
              >
                <div
                  className={classNames(projectcss.all, sty.freeBox__cMQnQ, {
                    [sty.freeBoxdisplayinvoice__cMQnQokUjk]: hasVariant(
                      variants,
                      "displayinvoice",
                      "displayinvoice"
                    )
                  })}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__ctBq8,
                      {
                        [sty.textdisplayinvoice__ctBq8OkUjk]: hasVariant(
                          variants,
                          "displayinvoice",
                          "displayinvoice"
                        )
                      }
                    )}
                  >
                    {hasVariant(variants, "displayinvoice", "displayinvoice")
                      ? "Invoice No"
                      : "Order ID"}
                  </div>

                  {true ? (
                    <div
                      className={classNames(
                        projectcss.all,
                        sty.freeBox__lSfPp,
                        {
                          [sty.freeBoxdisplayinvoice__lSfPpokUjk]: hasVariant(
                            variants,
                            "displayinvoice",
                            "displayinvoice"
                          )
                        }
                      )}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__l34Dd,
                          {
                            [sty.textdisplayinvoice__l34DdokUjk]: hasVariant(
                              variants,
                              "displayinvoice",
                              "displayinvoice"
                            )
                          }
                        )}
                      >
                        {"#"}
                      </div>

                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__ayPnk,
                          {
                            [sty.freeBoxdisplayinvoice__ayPnKokUjk]: hasVariant(
                              variants,
                              "displayinvoice",
                              "displayinvoice"
                            )
                          }
                        )}
                      >
                        {p.renderPlasmicSlot({
                          defaultContents: "ABC123",
                          value: args.invoiceno,
                          className: classNames(sty.slotTargetInvoiceno, {
                            [sty.slotTargetInvoicenodisplayinvoice]: hasVariant(
                              variants,
                              "displayinvoice",
                              "displayinvoice"
                            )
                          })
                        })}
                      </div>
                    </div>
                  ) : null}
                </div>
              </div>

              <div
                className={classNames(projectcss.all, sty.freeBox__c0DkA, {
                  [sty.freeBoxdisplayinvoice__c0DkAokUjk]: hasVariant(
                    variants,
                    "displayinvoice",
                    "displayinvoice"
                  )
                })}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__x4XRu,
                    {
                      [sty.textdisplayinvoice__x4XRuokUjk]: hasVariant(
                        variants,
                        "displayinvoice",
                        "displayinvoice"
                      )
                    }
                  )}
                >
                  {"Invoice Date"}
                </div>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__otYjX,
                    {
                      [sty.textdisplayinvoice__otYjXokUjk]: hasVariant(
                        variants,
                        "displayinvoice",
                        "displayinvoice"
                      )
                    }
                  )}
                >
                  {":"}
                </div>

                <div
                  data-plasmic-name={"supplier"}
                  data-plasmic-override={overrides.supplier}
                  className={classNames(projectcss.all, sty.supplier, {
                    [sty.supplierdisplayinvoice]: hasVariant(
                      variants,
                      "displayinvoice",
                      "displayinvoice"
                    )
                  })}
                >
                  {p.renderPlasmicSlot({
                    defaultContents: "N/A",
                    value: args.date,
                    className: classNames(sty.slotTargetDate, {
                      [sty.slotTargetDatedisplayinvoice]: hasVariant(
                        variants,
                        "displayinvoice",
                        "displayinvoice"
                      )
                    })
                  })}
                </div>
              </div>

              <div
                className={classNames(projectcss.all, sty.freeBox___0PtkT, {
                  [sty.freeBoxdisplayinvoice___0PtkTokUjk]: hasVariant(
                    variants,
                    "displayinvoice",
                    "displayinvoice"
                  )
                })}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__nZbnm,
                    {
                      [sty.textdisplayinvoice__nZbnmokUjk]: hasVariant(
                        variants,
                        "displayinvoice",
                        "displayinvoice"
                      )
                    }
                  )}
                >
                  {"Invoice Value"}
                </div>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__y9Ssp,
                    {
                      [sty.textdisplayinvoice__y9SspokUjk]: hasVariant(
                        variants,
                        "displayinvoice",
                        "displayinvoice"
                      )
                    }
                  )}
                >
                  {":"}
                </div>

                <div
                  data-plasmic-name={"shipmentmode"}
                  data-plasmic-override={overrides.shipmentmode}
                  className={classNames(projectcss.all, sty.shipmentmode, {
                    [sty.shipmentmodedisplayinvoice]: hasVariant(
                      variants,
                      "displayinvoice",
                      "displayinvoice"
                    )
                  })}
                >
                  {p.renderPlasmicSlot({
                    defaultContents: "N/A",
                    value: args.value,
                    className: classNames(sty.slotTargetValue, {
                      [sty.slotTargetValuedisplayinvoice]: hasVariant(
                        variants,
                        "displayinvoice",
                        "displayinvoice"
                      )
                    })
                  })}
                </div>
              </div>

              <div
                className={classNames(projectcss.all, sty.freeBox__mnWRo, {
                  [sty.freeBoxdisplayinvoice__mnWRookUjk]: hasVariant(
                    variants,
                    "displayinvoice",
                    "displayinvoice"
                  )
                })}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text___1AalI,
                    {
                      [sty.textdisplayinvoice___1AalIokUjk]: hasVariant(
                        variants,
                        "displayinvoice",
                        "displayinvoice"
                      )
                    }
                  )}
                >
                  {"AWB_BL No"}
                </div>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__gfUpE,
                    {
                      [sty.textdisplayinvoice__gfUpEokUjk]: hasVariant(
                        variants,
                        "displayinvoice",
                        "displayinvoice"
                      )
                    }
                  )}
                >
                  {":"}
                </div>

                <div
                  data-plasmic-name={"origincountry"}
                  data-plasmic-override={overrides.origincountry}
                  className={classNames(projectcss.all, sty.origincountry, {
                    [sty.origincountrydisplayinvoice]: hasVariant(
                      variants,
                      "displayinvoice",
                      "displayinvoice"
                    )
                  })}
                >
                  {p.renderPlasmicSlot({
                    defaultContents: "N/A",
                    value: args.awbbl,
                    className: classNames(sty.slotTargetAwbbl, {
                      [sty.slotTargetAwbbldisplayinvoice]: hasVariant(
                        variants,
                        "displayinvoice",
                        "displayinvoice"
                      )
                    })
                  })}
                </div>
              </div>

              <div
                className={classNames(projectcss.all, sty.freeBox__khcv, {
                  [sty.freeBoxdisplayinvoice__khcvOkUjk]: hasVariant(
                    variants,
                    "displayinvoice",
                    "displayinvoice"
                  )
                })}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text___2CPb3,
                    {
                      [sty.textdisplayinvoice___2CPb3OkUjk]: hasVariant(
                        variants,
                        "displayinvoice",
                        "displayinvoice"
                      )
                    }
                  )}
                >
                  {"Quantity"}
                </div>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text___1YsOf,
                    {
                      [sty.textdisplayinvoice___1YsOfokUjk]: hasVariant(
                        variants,
                        "displayinvoice",
                        "displayinvoice"
                      )
                    }
                  )}
                >
                  {":"}
                </div>

                <div
                  data-plasmic-name={"sap"}
                  data-plasmic-override={overrides.sap}
                  className={classNames(projectcss.all, sty.sap, {
                    [sty.sapdisplayinvoice]: hasVariant(
                      variants,
                      "displayinvoice",
                      "displayinvoice"
                    )
                  })}
                >
                  {p.renderPlasmicSlot({
                    defaultContents: "N/A",
                    value: args.qty,
                    className: classNames(sty.slotTargetQty, {
                      [sty.slotTargetQtydisplayinvoice]: hasVariant(
                        variants,
                        "displayinvoice",
                        "displayinvoice"
                      )
                    })
                  })}
                </div>
              </div>

              <div
                className={classNames(projectcss.all, sty.freeBox__nSM7, {
                  [sty.freeBoxdisplayinvoice__nSM7OkUjk]: hasVariant(
                    variants,
                    "displayinvoice",
                    "displayinvoice"
                  )
                })}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__gqKPg,
                    {
                      [sty.textdisplayinvoice__gqKPgokUjk]: hasVariant(
                        variants,
                        "displayinvoice",
                        "displayinvoice"
                      )
                    }
                  )}
                >
                  {"Gross Weight"}
                </div>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__lq5XY,
                    {
                      [sty.textdisplayinvoice__lq5XYokUjk]: hasVariant(
                        variants,
                        "displayinvoice",
                        "displayinvoice"
                      )
                    }
                  )}
                >
                  {":"}
                </div>

                <div
                  data-plasmic-name={"grn"}
                  data-plasmic-override={overrides.grn}
                  className={classNames(projectcss.all, sty.grn, {
                    [sty.grndisplayinvoice]: hasVariant(
                      variants,
                      "displayinvoice",
                      "displayinvoice"
                    )
                  })}
                >
                  {p.renderPlasmicSlot({
                    defaultContents: "N/A",
                    value: args.gross,
                    className: classNames(sty.slotTargetGross, {
                      [sty.slotTargetGrossdisplayinvoice]: hasVariant(
                        variants,
                        "displayinvoice",
                        "displayinvoice"
                      )
                    })
                  })}
                </div>
              </div>

              <div
                className={classNames(projectcss.all, sty.freeBox__umBQy, {
                  [sty.freeBoxdisplayinvoice__umBQyokUjk]: hasVariant(
                    variants,
                    "displayinvoice",
                    "displayinvoice"
                  )
                })}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__gQoas,
                    {
                      [sty.textdisplayinvoice__gQoasokUjk]: hasVariant(
                        variants,
                        "displayinvoice",
                        "displayinvoice"
                      )
                    }
                  )}
                >
                  {"Volume Weight"}
                </div>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text___7BV7S,
                    {
                      [sty.textdisplayinvoice___7BV7SokUjk]: hasVariant(
                        variants,
                        "displayinvoice",
                        "displayinvoice"
                      )
                    }
                  )}
                >
                  {":"}
                </div>

                <div
                  data-plasmic-name={"creditnotevalue"}
                  data-plasmic-override={overrides.creditnotevalue}
                  className={classNames(projectcss.all, sty.creditnotevalue, {
                    [sty.creditnotevaluedisplayinvoice]: hasVariant(
                      variants,
                      "displayinvoice",
                      "displayinvoice"
                    )
                  })}
                >
                  {p.renderPlasmicSlot({
                    defaultContents: "N/A",
                    value: args.volume,
                    className: classNames(sty.slotTargetVolume, {
                      [sty.slotTargetVolumedisplayinvoice]: hasVariant(
                        variants,
                        "displayinvoice",
                        "displayinvoice"
                      )
                    })
                  })}
                </div>
              </div>

              <div
                className={classNames(projectcss.all, sty.freeBox__gxTFq, {
                  [sty.freeBoxdisplayinvoice__gxTFqokUjk]: hasVariant(
                    variants,
                    "displayinvoice",
                    "displayinvoice"
                  )
                })}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__kr8ML,
                    {
                      [sty.textdisplayinvoice__kr8MLokUjk]: hasVariant(
                        variants,
                        "displayinvoice",
                        "displayinvoice"
                      )
                    }
                  )}
                >
                  {"ETA"}
                </div>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__tNOjk,
                    {
                      [sty.textdisplayinvoice__tNOjkokUjk]: hasVariant(
                        variants,
                        "displayinvoice",
                        "displayinvoice"
                      )
                    }
                  )}
                >
                  {":"}
                </div>

                <div
                  data-plasmic-name={"creditnotevalue2"}
                  data-plasmic-override={overrides.creditnotevalue2}
                  className={classNames(projectcss.all, sty.creditnotevalue2, {
                    [sty.creditnotevalue2displayinvoice]: hasVariant(
                      variants,
                      "displayinvoice",
                      "displayinvoice"
                    )
                  })}
                >
                  {p.renderPlasmicSlot({
                    defaultContents: "N/A",
                    value: args.eta,
                    className: classNames(sty.slotTargetEta, {
                      [sty.slotTargetEtadisplayinvoice]: hasVariant(
                        variants,
                        "displayinvoice",
                        "displayinvoice"
                      )
                    })
                  })}
                </div>
              </div>
            </div>
          ) : null}
          {(
            hasVariant(variants, "displayinvoice", "displayinvoice")
              ? true
              : true
          ) ? (
            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__uu6Sa, {
                [sty.freeBoxdisplayinvoice__uu6SaokUjk]: hasVariant(
                  variants,
                  "displayinvoice",
                  "displayinvoice"
                )
              })}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__hgmZr,
                  {
                    [sty.textdisplayinvoice__hgmZrokUjk]: hasVariant(
                      variants,
                      "displayinvoice",
                      "displayinvoice"
                    )
                  }
                )}
              >
                {"Order To: "}
              </div>

              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__kicXe,
                  {
                    [sty.textdisplayinvoice__kicXeokUjk]: hasVariant(
                      variants,
                      "displayinvoice",
                      "displayinvoice"
                    )
                  }
                )}
              >
                {"Ship To:"}
              </div>
            </p.Stack>
          ) : null}
          {(
            hasVariant(variants, "displayinvoice", "displayinvoice")
              ? true
              : true
          ) ? (
            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__kbBix, {
                [sty.freeBoxdisplayinvoice__kbBiXokUjk]: hasVariant(
                  variants,
                  "displayinvoice",
                  "displayinvoice"
                )
              })}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__mUlzL,
                  {
                    [sty.textdisplayinvoice__mUlzLokUjk]: hasVariant(
                      variants,
                      "displayinvoice",
                      "displayinvoice"
                    )
                  }
                )}
              >
                {"ABC Company, \nLocation"}
              </div>

              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__yRQl4,
                  {
                    [sty.textdisplayinvoice__yRQl4OkUjk]: hasVariant(
                      variants,
                      "displayinvoice",
                      "displayinvoice"
                    )
                  }
                )}
              >
                {"ABC Company, \nLocation"}
              </div>
            </p.Stack>
          ) : null}
          {(
            hasVariant(variants, "displayinvoice", "displayinvoice")
              ? true
              : true
          ) ? (
            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox___83W0, {
                [sty.freeBoxdisplayinvoice___83W0OkUjk]: hasVariant(
                  variants,
                  "displayinvoice",
                  "displayinvoice"
                )
              })}
            >
              <div
                className={classNames(projectcss.all, sty.freeBox__xdGuc, {
                  [sty.freeBoxdisplayinvoice__xdGucokUjk]: hasVariant(
                    variants,
                    "displayinvoice",
                    "displayinvoice"
                  )
                })}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__cvHgx
                  )}
                >
                  {"Contact:"}
                </div>

                {true ? (
                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__wQqkD, {
                      [sty.freeBoxdisplayinvoice__wQqkDokUjk]: hasVariant(
                        variants,
                        "displayinvoice",
                        "displayinvoice"
                      )
                    })}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___98CQl,
                        {
                          [sty.textdisplayinvoice___98CQLokUjk]: hasVariant(
                            variants,
                            "displayinvoice",
                            "displayinvoice"
                          )
                        }
                      )}
                    >
                      {"Name:"}
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__f7FzI,
                        {
                          [sty.textdisplayinvoice__f7FzIokUjk]: hasVariant(
                            variants,
                            "displayinvoice",
                            "displayinvoice"
                          )
                        }
                      )}
                    >
                      {"1234567890"}
                    </div>
                  </p.Stack>
                ) : null}
              </div>

              <div
                className={classNames(projectcss.all, sty.freeBox__xPigo, {
                  [sty.freeBoxdisplayinvoice__xPigookUjk]: hasVariant(
                    variants,
                    "displayinvoice",
                    "displayinvoice"
                  )
                })}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__uevCp,
                    {
                      [sty.textdisplayinvoice__uevCpokUjk]: hasVariant(
                        variants,
                        "displayinvoice",
                        "displayinvoice"
                      )
                    }
                  )}
                >
                  {"Date:"}
                </div>

                {true ? (
                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__zMqwK, {
                      [sty.freeBoxdisplayinvoice__zMqwKokUjk]: hasVariant(
                        variants,
                        "displayinvoice",
                        "displayinvoice"
                      )
                    })}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__nEtQ6,
                        {
                          [sty.textdisplayinvoice__nEtQ6OkUjk]: hasVariant(
                            variants,
                            "displayinvoice",
                            "displayinvoice"
                          )
                        }
                      )}
                    >
                      {"1234567890"}
                    </div>
                  </p.Stack>
                ) : null}
              </div>
            </p.Stack>
          ) : null}
          {(
            hasVariant(variants, "displayinvoice", "displayinvoice")
              ? true
              : true
          ) ? (
            <div
              className={classNames(projectcss.all, sty.freeBox__w90E0, {
                [sty.freeBoxdisplayinvoice__w90E0OkUjk]: hasVariant(
                  variants,
                  "displayinvoice",
                  "displayinvoice"
                )
              })}
            >
              <div
                className={classNames(projectcss.all, sty.freeBox__gGnd, {
                  [sty.freeBoxdisplayinvoice__gGndokUjk]: hasVariant(
                    variants,
                    "displayinvoice",
                    "displayinvoice"
                  )
                })}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__bfb4M,
                    {
                      [sty.textdisplayinvoice__bfb4MokUjk]: hasVariant(
                        variants,
                        "displayinvoice",
                        "displayinvoice"
                      )
                    }
                  )}
                >
                  {"#"}
                </div>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__av2W6,
                    {
                      [sty.textdisplayinvoice__av2W6OkUjk]: hasVariant(
                        variants,
                        "displayinvoice",
                        "displayinvoice"
                      )
                    }
                  )}
                >
                  {"Product ID"}
                </div>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__plpYr,
                    {
                      [sty.textdisplayinvoice__plpYrokUjk]: hasVariant(
                        variants,
                        "displayinvoice",
                        "displayinvoice"
                      )
                    }
                  )}
                >
                  {"Product"}
                </div>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text___2DYr,
                    {
                      [sty.textdisplayinvoice___2DYRokUjk]: hasVariant(
                        variants,
                        "displayinvoice",
                        "displayinvoice"
                      )
                    }
                  )}
                >
                  {"Quantity"}
                </div>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__fX3T,
                    {
                      [sty.textdisplayinvoice__fX3TokUjk]: hasVariant(
                        variants,
                        "displayinvoice",
                        "displayinvoice"
                      )
                    }
                  )}
                >
                  {"Unit Price"}
                </div>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__n34BD,
                    {
                      [sty.textdisplayinvoice__n34BDokUjk]: hasVariant(
                        variants,
                        "displayinvoice",
                        "displayinvoice"
                      )
                    }
                  )}
                >
                  {"Total"}
                </div>
              </div>

              <div className={classNames(projectcss.all, sty.freeBox__alvO)}>
                <div
                  className={classNames(projectcss.all, sty.freeBox__tOAf3, {
                    [sty.freeBoxdisplayinvoice__tOAf3OkUjk]: hasVariant(
                      variants,
                      "displayinvoice",
                      "displayinvoice"
                    )
                  })}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___3ExPj,
                      {
                        [sty.textdisplayinvoice___3ExPjokUjk]: hasVariant(
                          variants,
                          "displayinvoice",
                          "displayinvoice"
                        )
                      }
                    )}
                  >
                    {"#"}
                  </div>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__p2Scr,
                      {
                        [sty.textdisplayinvoice__p2ScRokUjk]: hasVariant(
                          variants,
                          "displayinvoice",
                          "displayinvoice"
                        )
                      }
                    )}
                  >
                    {"Product ID"}
                  </div>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__fc19X,
                      {
                        [sty.textdisplayinvoice__fc19XokUjk]: hasVariant(
                          variants,
                          "displayinvoice",
                          "displayinvoice"
                        )
                      }
                    )}
                  >
                    {"Product"}
                  </div>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___8Vbth,
                      {
                        [sty.textdisplayinvoice___8VbtHokUjk]: hasVariant(
                          variants,
                          "displayinvoice",
                          "displayinvoice"
                        )
                      }
                    )}
                  >
                    {"Quantity"}
                  </div>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__u4F8O,
                      {
                        [sty.textdisplayinvoice__u4F8OokUjk]: hasVariant(
                          variants,
                          "displayinvoice",
                          "displayinvoice"
                        )
                      }
                    )}
                  >
                    {"Unit Price"}
                  </div>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__mc1PZ,
                      {
                        [sty.textdisplayinvoice__mc1PZokUjk]: hasVariant(
                          variants,
                          "displayinvoice",
                          "displayinvoice"
                        )
                      }
                    )}
                  >
                    {"Total"}
                  </div>
                </div>

                {(
                  hasVariant(variants, "displayinvoice", "displayinvoice")
                    ? true
                    : true
                ) ? (
                  <div
                    className={classNames(projectcss.all, sty.freeBox__oSwR, {
                      [sty.freeBoxdisplayinvoice__oSwRokUjk]: hasVariant(
                        variants,
                        "displayinvoice",
                        "displayinvoice"
                      )
                    })}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__je19H,
                        {
                          [sty.textdisplayinvoice__je19HokUjk]: hasVariant(
                            variants,
                            "displayinvoice",
                            "displayinvoice"
                          )
                        }
                      )}
                    >
                      {"#"}
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__dXxEh,
                        {
                          [sty.textdisplayinvoice__dXxEhokUjk]: hasVariant(
                            variants,
                            "displayinvoice",
                            "displayinvoice"
                          )
                        }
                      )}
                    >
                      {"Product ID"}
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__fm2Ad,
                        {
                          [sty.textdisplayinvoice__fm2ADokUjk]: hasVariant(
                            variants,
                            "displayinvoice",
                            "displayinvoice"
                          )
                        }
                      )}
                    >
                      {"Product"}
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__omKiI
                      )}
                    >
                      {"Quantity"}
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___6Hbwa
                      )}
                    >
                      {"Unit Price"}
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___2Jwrx
                      )}
                    >
                      {"Total"}
                    </div>
                  </div>
                ) : null}
                {(
                  hasVariant(variants, "displayinvoice", "displayinvoice")
                    ? true
                    : true
                ) ? (
                  <div
                    className={classNames(projectcss.all, sty.freeBox__nsDbH, {
                      [sty.freeBoxdisplayinvoice__nsDbHokUjk]: hasVariant(
                        variants,
                        "displayinvoice",
                        "displayinvoice"
                      )
                    })}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__hjT1
                      )}
                    >
                      {"#"}
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__dmpM
                      )}
                    >
                      {"Product ID"}
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__l9UcQ
                      )}
                    >
                      {"Product"}
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__t5Kse
                      )}
                    >
                      {"Quantity"}
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__kWi4
                      )}
                    >
                      {"Unit Price"}
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__e3Qy9
                      )}
                    >
                      {"Total"}
                    </div>
                  </div>
                ) : null}
                {(
                  hasVariant(variants, "displayinvoice", "displayinvoice")
                    ? true
                    : true
                ) ? (
                  <div
                    className={classNames(projectcss.all, sty.freeBox__bOoEw, {
                      [sty.freeBoxdisplayinvoice__bOoEWokUjk]: hasVariant(
                        variants,
                        "displayinvoice",
                        "displayinvoice"
                      )
                    })}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__ov5Ir
                      )}
                    >
                      {"#"}
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__x9WA
                      )}
                    >
                      {"Product ID"}
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__vrdnz
                      )}
                    >
                      {"Product"}
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__hesmi
                      )}
                    >
                      {"Quantity"}
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___6EleG
                      )}
                    >
                      {"Unit Price"}
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__uR8R
                      )}
                    >
                      {"Total"}
                    </div>
                  </div>
                ) : null}
              </div>
            </div>
          ) : null}
          {(
            hasVariant(variants, "displayinvoice", "displayinvoice")
              ? true
              : true
          ) ? (
            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__tyqJz, {
                [sty.freeBoxdisplayinvoice__tyqJZokUjk]: hasVariant(
                  variants,
                  "displayinvoice",
                  "displayinvoice"
                )
              })}
            >
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__eUOhK, {
                  [sty.freeBoxdisplayinvoice__eUOhKokUjk]: hasVariant(
                    variants,
                    "displayinvoice",
                    "displayinvoice"
                  )
                })}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__pPh3S,
                    {
                      [sty.textdisplayinvoice__pPh3SokUjk]: hasVariant(
                        variants,
                        "displayinvoice",
                        "displayinvoice"
                      )
                    }
                  )}
                >
                  {"Sub Total"}
                </div>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text___9CNy2,
                    {
                      [sty.textdisplayinvoice___9CNy2OkUjk]: hasVariant(
                        variants,
                        "displayinvoice",
                        "displayinvoice"
                      )
                    }
                  )}
                >
                  {"Total"}
                </div>
              </p.Stack>

              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__x0Gh, {
                  [sty.freeBoxdisplayinvoice__x0GhokUjk]: hasVariant(
                    variants,
                    "displayinvoice",
                    "displayinvoice"
                  )
                })}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__tgDut
                  )}
                >
                  {"Tax"}
                </div>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__d8OL,
                    {
                      [sty.textdisplayinvoice__d8OLokUjk]: hasVariant(
                        variants,
                        "displayinvoice",
                        "displayinvoice"
                      )
                    }
                  )}
                >
                  {"Total"}
                </div>
              </p.Stack>

              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__aqxke, {
                  [sty.freeBoxdisplayinvoice__aqxkEokUjk]: hasVariant(
                    variants,
                    "displayinvoice",
                    "displayinvoice"
                  )
                })}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__auWxq,
                    {
                      [sty.textdisplayinvoice__auWxqokUjk]: hasVariant(
                        variants,
                        "displayinvoice",
                        "displayinvoice"
                      )
                    }
                  )}
                >
                  {"Total"}
                </div>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__ourag,
                    {
                      [sty.textdisplayinvoice__ouraGokUjk]: hasVariant(
                        variants,
                        "displayinvoice",
                        "displayinvoice"
                      )
                    }
                  )}
                >
                  {"Total"}
                </div>
              </p.Stack>
            </p.Stack>
          ) : null}
          {true ? (
            <ButtonB
              data-plasmic-name={"formbutton"}
              data-plasmic-override={overrides.formbutton}
              className={classNames("__wab_instance", sty.formbutton, {
                [sty.formbuttondisplayinvoice]: hasVariant(
                  variants,
                  "displayinvoice",
                  "displayinvoice"
                )
              })}
              connectmm={true}
            />
          ) : null}
        </p.Stack>
      </div>
    </div>
  );
}

const PlasmicDescendants = {
  root: [
    "root",
    "applicationForm",
    "supplier",
    "shipmentmode",
    "origincountry",
    "sap",
    "grn",
    "creditnotevalue",
    "creditnotevalue2",
    "formbutton"
  ],

  applicationForm: [
    "applicationForm",
    "supplier",
    "shipmentmode",
    "origincountry",
    "sap",
    "grn",
    "creditnotevalue",
    "creditnotevalue2",
    "formbutton"
  ],

  supplier: ["supplier"],
  shipmentmode: ["shipmentmode"],
  origincountry: ["origincountry"],
  sap: ["sap"],
  grn: ["grn"],
  creditnotevalue: ["creditnotevalue"],
  creditnotevalue2: ["creditnotevalue2"],
  formbutton: ["formbutton"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = deriveRenderOpts(props, {
      name: nodeName,
      descendantNames: [...PlasmicDescendants[nodeName]],
      internalArgPropNames: PlasmicInvoicegeneration__ArgProps,
      internalVariantPropNames: PlasmicInvoicegeneration__VariantProps
    });

    return PlasmicInvoicegeneration__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicInvoicegeneration";
  } else {
    func.displayName = `PlasmicInvoicegeneration.${nodeName}`;
  }
  return func;
}

export const PlasmicInvoicegeneration = Object.assign(
  // Top-level PlasmicInvoicegeneration renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    applicationForm: makeNodeComponent("applicationForm"),
    supplier: makeNodeComponent("supplier"),
    shipmentmode: makeNodeComponent("shipmentmode"),
    origincountry: makeNodeComponent("origincountry"),
    sap: makeNodeComponent("sap"),
    grn: makeNodeComponent("grn"),
    creditnotevalue: makeNodeComponent("creditnotevalue"),
    creditnotevalue2: makeNodeComponent("creditnotevalue2"),
    formbutton: makeNodeComponent("formbutton"),
    // Metadata about props expected for PlasmicInvoicegeneration
    internalVariantProps: PlasmicInvoicegeneration__VariantProps,
    internalArgProps: PlasmicInvoicegeneration__ArgProps
  }
);

export default PlasmicInvoicegeneration;
/* prettier-ignore-end */
