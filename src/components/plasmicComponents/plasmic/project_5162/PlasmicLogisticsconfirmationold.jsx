// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: 5GT6nVB5WgvLWb2iBXTk1E
// Component: gcDEsY1usqj
import * as React from "react";
import * as p from "@plasmicapp/react-web";
import {
  hasVariant,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts
} from "@plasmicapp/react-web";
import Consentandsubmit from "../../Consentandsubmit"; // plasmic-import: eZig3v-AJ7/component
import ButtonB from "../../ButtonB"; // plasmic-import: oSXCQ8ez26/component
import "@plasmicapp/react-web/lib/plasmic.css";
import projectcss from "./plasmic_project_5162.module.css"; // plasmic-import: 5GT6nVB5WgvLWb2iBXTk1E/projectcss
import sty from "./PlasmicLogisticsconfirmationold.module.css"; // plasmic-import: gcDEsY1usqj/css

export const PlasmicLogisticsconfirmationold__VariantProps = new Array(
  "loading",
  "notfound",
  "confirmed"
);

export const PlasmicLogisticsconfirmationold__ArgProps = new Array(
  "ffname",
  "entryno",
  "entrydate",
  "dutyamount",
  "hts",
  "tfamount",
  "ntfamount",
  "tchaamount",
  "ntchaamount",
  "cha"
);

function PlasmicLogisticsconfirmationold__RenderFunc(props) {
  const { variants, args, overrides, forNode } = props;
  return (
    <div
      data-plasmic-name={"root"}
      data-plasmic-override={overrides.root}
      data-plasmic-root={true}
      data-plasmic-for-node={forNode}
      className={classNames(
        projectcss.all,
        projectcss.root_reset,
        projectcss.plasmic_default_styles,
        projectcss.plasmic_tokens,
        sty.root
      )}
    >
      <div
        className={classNames(
          projectcss.all,
          projectcss.__wab_text,
          sty.text___4LQgc
        )}
      >
        {"LOGISTICS CONFIRMATION"}
      </div>

      <div
        data-plasmic-name={"applicationForm"}
        data-plasmic-override={overrides.applicationForm}
        className={classNames(projectcss.all, sty.applicationForm, {
          [sty.applicationFormconfirmed]: hasVariant(
            variants,
            "confirmed",
            "confirmed"
          ),

          [sty.applicationFormloading]: hasVariant(
            variants,
            "loading",
            "loading"
          ),

          [sty.applicationFormnotfound]: hasVariant(
            variants,
            "notfound",
            "notfound"
          )
        })}
      >
        {(
          hasVariant(variants, "confirmed", "confirmed")
            ? false
            : hasVariant(variants, "notfound", "notfound")
            ? false
            : hasVariant(variants, "loading", "loading")
            ? false
            : true
        ) ? (
          <p.Stack
            as={"div"}
            hasGap={true}
            className={classNames(projectcss.all, sty.freeBox__rIkOq, {
              [sty.freeBoxconfirmed__rIkOq8GzS]: hasVariant(
                variants,
                "confirmed",
                "confirmed"
              ),

              [sty.freeBoxloading__rIkOqIWtKv]: hasVariant(
                variants,
                "loading",
                "loading"
              ),

              [sty.freeBoxnotfound__rIkOqZlypz]: hasVariant(
                variants,
                "notfound",
                "notfound"
              )
            })}
          >
            {true ? (
              <div className={classNames(projectcss.all, sty.freeBox___6Rkb1)}>
                <div className={classNames(projectcss.all, sty.freeBox__pukEc)}>
                  {true ? (
                    <div
                      className={classNames(projectcss.all, sty.freeBox__tOag)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text___64Ro9
                        )}
                      >
                        {"CHA Name"}
                      </div>

                      <div
                        data-plasmic-name={"supplier"}
                        data-plasmic-override={overrides.supplier}
                        className={classNames(projectcss.all, sty.supplier)}
                      >
                        {p.renderPlasmicSlot({
                          defaultContents: "N/A",
                          value: args.cha,
                          className: classNames(sty.slotTargetCha)
                        })}
                      </div>
                    </div>
                  ) : null}
                </div>

                <div className={classNames(projectcss.all, sty.freeBox__bfRwQ)}>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___6NmWo
                    )}
                  >
                    {"Freight Forwarder Name"}
                  </div>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__sXmrC
                    )}
                  >
                    {":"}
                  </div>

                  <div
                    data-plasmic-name={"shipmentmode"}
                    data-plasmic-override={overrides.shipmentmode}
                    className={classNames(projectcss.all, sty.shipmentmode)}
                  >
                    {p.renderPlasmicSlot({
                      defaultContents: "N/A",
                      value: args.ffname,
                      className: classNames(sty.slotTargetFfname)
                    })}
                  </div>
                </div>

                <div className={classNames(projectcss.all, sty.freeBox__gbKu5)}>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___47Tzz
                    )}
                  >
                    {"Bill of Entry No"}
                  </div>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__ekGwi
                    )}
                  >
                    {":"}
                  </div>

                  <div
                    data-plasmic-name={"origincountry"}
                    data-plasmic-override={overrides.origincountry}
                    className={classNames(projectcss.all, sty.origincountry)}
                  >
                    {p.renderPlasmicSlot({
                      defaultContents: "N/A",
                      value: args.entryno,
                      className: classNames(sty.slotTargetEntryno)
                    })}
                  </div>
                </div>

                <div className={classNames(projectcss.all, sty.freeBox__acehB)}>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__ae25R
                    )}
                  >
                    {"Bill of Entry Date"}
                  </div>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___8AFjC
                    )}
                  >
                    {":"}
                  </div>

                  <div
                    data-plasmic-name={"sap"}
                    data-plasmic-override={overrides.sap}
                    className={classNames(projectcss.all, sty.sap)}
                  >
                    {p.renderPlasmicSlot({
                      defaultContents: "N/A",
                      value: args.entrydate,
                      className: classNames(sty.slotTargetEntrydate)
                    })}
                  </div>
                </div>

                <div
                  className={classNames(projectcss.all, sty.freeBox___96F8N)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__iC38N
                    )}
                  >
                    {"Duty Amount"}
                  </div>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__e84Jf
                    )}
                  >
                    {":"}
                  </div>

                  <div
                    data-plasmic-name={"grn"}
                    data-plasmic-override={overrides.grn}
                    className={classNames(projectcss.all, sty.grn)}
                  >
                    {p.renderPlasmicSlot({
                      defaultContents: "N/A",
                      value: args.dutyamount,
                      className: classNames(sty.slotTargetDutyamount)
                    })}
                  </div>
                </div>

                <div className={classNames(projectcss.all, sty.freeBox__qwdWw)}>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__xn5Yn
                    )}
                  >
                    {"HTS Code"}
                  </div>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__cznnR
                    )}
                  >
                    {":"}
                  </div>

                  <div
                    data-plasmic-name={"creditnotevalue"}
                    data-plasmic-override={overrides.creditnotevalue}
                    className={classNames(projectcss.all, sty.creditnotevalue)}
                  >
                    {p.renderPlasmicSlot({
                      defaultContents: "N/A",
                      value: args.hts,
                      className: classNames(sty.slotTargetHts)
                    })}
                  </div>
                </div>

                <div className={classNames(projectcss.all, sty.freeBox__nshOn)}>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__dFpN
                    )}
                  >
                    {"Taxable Freight Amount"}
                  </div>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__bFyj
                    )}
                  >
                    {":"}
                  </div>

                  <div
                    data-plasmic-name={"creditnotevalue2"}
                    data-plasmic-override={overrides.creditnotevalue2}
                    className={classNames(projectcss.all, sty.creditnotevalue2)}
                  >
                    {p.renderPlasmicSlot({
                      defaultContents: "N/A",
                      value: args.tfamount,
                      className: classNames(sty.slotTargetTfamount)
                    })}
                  </div>
                </div>

                <div className={classNames(projectcss.all, sty.freeBox__cq3Hn)}>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__tsO0K
                    )}
                  >
                    {"Non Taxable Freight Amount"}
                  </div>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__hckGd
                    )}
                  >
                    {":"}
                  </div>

                  <div
                    data-plasmic-name={"creditnotevalue3"}
                    data-plasmic-override={overrides.creditnotevalue3}
                    className={classNames(projectcss.all, sty.creditnotevalue3)}
                  >
                    {p.renderPlasmicSlot({
                      defaultContents: "N/A",
                      value: args.ntfamount,
                      className: classNames(sty.slotTargetNtfamount)
                    })}
                  </div>
                </div>

                <div className={classNames(projectcss.all, sty.freeBox__prRlj)}>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__uVHwJ
                    )}
                  >
                    {"Taxable CHA Amount"}
                  </div>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___2BnNw
                    )}
                  >
                    {":"}
                  </div>

                  <div
                    data-plasmic-name={"creditnotevalue4"}
                    data-plasmic-override={overrides.creditnotevalue4}
                    className={classNames(projectcss.all, sty.creditnotevalue4)}
                  >
                    {p.renderPlasmicSlot({
                      defaultContents: "N/A",
                      value: args.tchaamount,
                      className: classNames(sty.slotTargetTchaamount)
                    })}
                  </div>
                </div>

                <div className={classNames(projectcss.all, sty.freeBox__rfmO)}>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__gy7Ee
                    )}
                  >
                    {"Non Taxable CHA Amount"}
                  </div>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__pE2T
                    )}
                  >
                    {":"}
                  </div>

                  <div
                    data-plasmic-name={"creditnotevalue5"}
                    data-plasmic-override={overrides.creditnotevalue5}
                    className={classNames(projectcss.all, sty.creditnotevalue5)}
                  >
                    {p.renderPlasmicSlot({
                      defaultContents: "N/A",
                      value: args.ntchaamount,
                      className: classNames(sty.slotTargetNtchaamount)
                    })}
                  </div>
                </div>
              </div>
            ) : null}
            {true ? (
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__xwXjH)}
              >
                {true ? (
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__kxuWi
                    )}
                  >
                    {"Order To: "}
                  </div>
                ) : null}
                {true ? (
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__rW2Sn
                    )}
                  >
                    {"Ship To:"}
                  </div>
                ) : null}
              </p.Stack>
            ) : null}

            <Consentandsubmit
              data-plasmic-name={"consent"}
              data-plasmic-override={overrides.consent}
              className={classNames("__wab_instance", sty.consent)}
            />

            {true ? (
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__qzEt)}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__kcTiI
                  )}
                >
                  {"Order To: "}
                </div>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__ikfEn
                  )}
                >
                  {"Ship To:"}
                </div>
              </p.Stack>
            ) : null}
            {true ? (
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__wArwk)}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__e4ZC5
                  )}
                >
                  {"ABC Company, \nLocation"}
                </div>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__lMmk3
                  )}
                >
                  {"ABC Company, \nLocation"}
                </div>
              </p.Stack>
            ) : null}
            {true ? (
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox___1BOlR)}
              >
                <div className={classNames(projectcss.all, sty.freeBox__h2E2T)}>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__udJ
                    )}
                  >
                    {"Contact:"}
                  </div>

                  {true ? (
                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__ueCXo)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__zRlut
                        )}
                      >
                        {"Name:"}
                      </div>

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__baxLi
                        )}
                      >
                        {"1234567890"}
                      </div>
                    </p.Stack>
                  ) : null}
                </div>

                <div className={classNames(projectcss.all, sty.freeBox__v79Vh)}>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__elL2Q
                    )}
                  >
                    {"Date:"}
                  </div>

                  {true ? (
                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__xiHj6)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__lpxij
                        )}
                      >
                        {"1234567890"}
                      </div>
                    </p.Stack>
                  ) : null}
                </div>
              </p.Stack>
            ) : null}
            {true ? (
              <div className={classNames(projectcss.all, sty.freeBox__qY7S7)}>
                <div className={classNames(projectcss.all, sty.freeBox__ap48A)}>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__l9ZnE
                    )}
                  >
                    {"#"}
                  </div>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__nLu57
                    )}
                  >
                    {"Product ID"}
                  </div>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__v0TjB
                    )}
                  >
                    {"Product"}
                  </div>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__cUPpP
                    )}
                  >
                    {"Quantity"}
                  </div>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__nkFve
                    )}
                  >
                    {"Unit Price"}
                  </div>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___1SPn7
                    )}
                  >
                    {"Total"}
                  </div>
                </div>

                <div className={classNames(projectcss.all, sty.freeBox__zni31)}>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__dVN6)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__sjbMq
                      )}
                    >
                      {"#"}
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__ru0S5
                      )}
                    >
                      {"Product ID"}
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__wfkWw
                      )}
                    >
                      {"Product"}
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__g7Hu1
                      )}
                    >
                      {"Quantity"}
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__eyEd9
                      )}
                    >
                      {"Unit Price"}
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__h67Wl
                      )}
                    >
                      {"Total"}
                    </div>
                  </div>

                  {true ? (
                    <div
                      className={classNames(
                        projectcss.all,
                        sty.freeBox___9OtKy
                      )}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__vdJ4
                        )}
                      >
                        {"#"}
                      </div>

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__dZaha
                        )}
                      >
                        {"Product ID"}
                      </div>

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text___9TdD
                        )}
                      >
                        {"Product"}
                      </div>

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__oNt4H
                        )}
                      >
                        {"Quantity"}
                      </div>

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__shc7W
                        )}
                      >
                        {"Unit Price"}
                      </div>

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__dQvCk
                        )}
                      >
                        {"Total"}
                      </div>
                    </div>
                  ) : null}
                  {true ? (
                    <div
                      className={classNames(projectcss.all, sty.freeBox__pcSvR)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__lmfyx
                        )}
                      >
                        {"#"}
                      </div>

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__jYLjr
                        )}
                      >
                        {"Product ID"}
                      </div>

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text___8PJ8
                        )}
                      >
                        {"Product"}
                      </div>

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__sMrHn
                        )}
                      >
                        {"Quantity"}
                      </div>

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text___7Kh0P
                        )}
                      >
                        {"Unit Price"}
                      </div>

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__nsTyc
                        )}
                      >
                        {"Total"}
                      </div>
                    </div>
                  ) : null}
                  {true ? (
                    <div
                      className={classNames(
                        projectcss.all,
                        sty.freeBox___8BKad
                      )}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text___13Fal
                        )}
                      >
                        {"#"}
                      </div>

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__cLftf
                        )}
                      >
                        {"Product ID"}
                      </div>

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__rmmfQ
                        )}
                      >
                        {"Product"}
                      </div>

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__vgd7H
                        )}
                      >
                        {"Quantity"}
                      </div>

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__cm4Ti
                        )}
                      >
                        {"Unit Price"}
                      </div>

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__suhvd
                        )}
                      >
                        {"Total"}
                      </div>
                    </div>
                  ) : null}
                </div>
              </div>
            ) : null}
            {true ? (
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__gpAl3)}
              >
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__hNDme)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__bCm6R
                    )}
                  >
                    {"Sub Total"}
                  </div>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__wx06M
                    )}
                  >
                    {"Total"}
                  </div>
                </p.Stack>

                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__nDaK)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__pQsUv
                    )}
                  >
                    {"Tax"}
                  </div>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__lYFvR
                    )}
                  >
                    {"Total"}
                  </div>
                </p.Stack>

                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__iU0Ma)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__ynsbl
                    )}
                  >
                    {"Total"}
                  </div>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___45I6L
                    )}
                  >
                    {"Total"}
                  </div>
                </p.Stack>
              </p.Stack>
            ) : null}
            {true ? (
              <ButtonB
                data-plasmic-name={"formbutton"}
                data-plasmic-override={overrides.formbutton}
                className={classNames("__wab_instance", sty.formbutton)}
                connectmm={true}
              />
            ) : null}
          </p.Stack>
        ) : null}
        {(
          hasVariant(variants, "confirmed", "confirmed")
            ? true
            : hasVariant(variants, "notfound", "notfound")
            ? true
            : hasVariant(variants, "loading", "loading")
            ? true
            : true
        ) ? (
          <div
            className={classNames(
              projectcss.all,
              projectcss.__wab_text,
              sty.text__cMff2,
              {
                [sty.textconfirmed__cMff28GzS]: hasVariant(
                  variants,
                  "confirmed",
                  "confirmed"
                ),

                [sty.textloading__cMff2IWtKv]: hasVariant(
                  variants,
                  "loading",
                  "loading"
                ),

                [sty.textnotfound__cMff2Zlypz]: hasVariant(
                  variants,
                  "notfound",
                  "notfound"
                )
              }
            )}
          >
            {hasVariant(variants, "confirmed", "confirmed")
              ? "Logistics already approved."
              : hasVariant(variants, "notfound", "notfound")
              ? "No Record Found.\nPlease create the Logistics Form."
              : "Fetching Data from Database...."}
          </div>
        ) : null}
      </div>
    </div>
  );
}

const PlasmicDescendants = {
  root: [
    "root",
    "applicationForm",
    "supplier",
    "shipmentmode",
    "origincountry",
    "sap",
    "grn",
    "creditnotevalue",
    "creditnotevalue2",
    "creditnotevalue3",
    "creditnotevalue4",
    "creditnotevalue5",
    "consent",
    "formbutton"
  ],

  applicationForm: [
    "applicationForm",
    "supplier",
    "shipmentmode",
    "origincountry",
    "sap",
    "grn",
    "creditnotevalue",
    "creditnotevalue2",
    "creditnotevalue3",
    "creditnotevalue4",
    "creditnotevalue5",
    "consent",
    "formbutton"
  ],

  supplier: ["supplier"],
  shipmentmode: ["shipmentmode"],
  origincountry: ["origincountry"],
  sap: ["sap"],
  grn: ["grn"],
  creditnotevalue: ["creditnotevalue"],
  creditnotevalue2: ["creditnotevalue2"],
  creditnotevalue3: ["creditnotevalue3"],
  creditnotevalue4: ["creditnotevalue4"],
  creditnotevalue5: ["creditnotevalue5"],
  consent: ["consent"],
  formbutton: ["formbutton"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = deriveRenderOpts(props, {
      name: nodeName,
      descendantNames: [...PlasmicDescendants[nodeName]],
      internalArgPropNames: PlasmicLogisticsconfirmationold__ArgProps,
      internalVariantPropNames: PlasmicLogisticsconfirmationold__VariantProps
    });

    return PlasmicLogisticsconfirmationold__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicLogisticsconfirmationold";
  } else {
    func.displayName = `PlasmicLogisticsconfirmationold.${nodeName}`;
  }
  return func;
}

export const PlasmicLogisticsconfirmationold = Object.assign(
  // Top-level PlasmicLogisticsconfirmationold renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    applicationForm: makeNodeComponent("applicationForm"),
    supplier: makeNodeComponent("supplier"),
    shipmentmode: makeNodeComponent("shipmentmode"),
    origincountry: makeNodeComponent("origincountry"),
    sap: makeNodeComponent("sap"),
    grn: makeNodeComponent("grn"),
    creditnotevalue: makeNodeComponent("creditnotevalue"),
    creditnotevalue2: makeNodeComponent("creditnotevalue2"),
    creditnotevalue3: makeNodeComponent("creditnotevalue3"),
    creditnotevalue4: makeNodeComponent("creditnotevalue4"),
    creditnotevalue5: makeNodeComponent("creditnotevalue5"),
    consent: makeNodeComponent("consent"),
    formbutton: makeNodeComponent("formbutton"),
    // Metadata about props expected for PlasmicLogisticsconfirmationold
    internalVariantProps: PlasmicLogisticsconfirmationold__VariantProps,
    internalArgProps: PlasmicLogisticsconfirmationold__ArgProps
  }
);

export default PlasmicLogisticsconfirmationold;
/* prettier-ignore-end */
