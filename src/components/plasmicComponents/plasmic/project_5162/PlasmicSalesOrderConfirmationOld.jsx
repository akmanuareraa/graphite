// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: 5GT6nVB5WgvLWb2iBXTk1E
// Component: MF2jR67lEGM
import * as React from "react";
import * as p from "@plasmicapp/react-web";
import {
  hasVariant,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts
} from "@plasmicapp/react-web";
import Consentandsubmit from "../../Consentandsubmit"; // plasmic-import: eZig3v-AJ7/component
import ButtonB from "../../ButtonB"; // plasmic-import: oSXCQ8ez26/component
import "@plasmicapp/react-web/lib/plasmic.css";
import projectcss from "./plasmic_project_5162.module.css"; // plasmic-import: 5GT6nVB5WgvLWb2iBXTk1E/projectcss
import sty from "./PlasmicSalesOrderConfirmationOld.module.css"; // plasmic-import: MF2jR67lEGM/css

export const PlasmicSalesOrderConfirmationOld__VariantProps = new Array(
  "loading",
  "notfound",
  "confirmed"
);

export const PlasmicSalesOrderConfirmationOld__ArgProps = new Array(
  "pono",
  "children",
  "slot",
  "slot2",
  "slot3",
  "slot4",
  "slot5"
);

function PlasmicSalesOrderConfirmationOld__RenderFunc(props) {
  const { variants, args, overrides, forNode } = props;
  return (
    <div
      data-plasmic-name={"root"}
      data-plasmic-override={overrides.root}
      data-plasmic-root={true}
      data-plasmic-for-node={forNode}
      className={classNames(
        projectcss.all,
        projectcss.root_reset,
        projectcss.plasmic_default_styles,
        projectcss.plasmic_tokens,
        sty.root
      )}
    >
      <div
        className={classNames(
          projectcss.all,
          projectcss.__wab_text,
          sty.text__isekW,
          {
            [sty.textnotfound__isekWkt814]: hasVariant(
              variants,
              "notfound",
              "notfound"
            )
          }
        )}
      >
        {"SALES ORDER CONFIRMATION"}
      </div>

      <div
        data-plasmic-name={"applicationForm"}
        data-plasmic-override={overrides.applicationForm}
        className={classNames(projectcss.all, sty.applicationForm, {
          [sty.applicationFormconfirmed]: hasVariant(
            variants,
            "confirmed",
            "confirmed"
          ),

          [sty.applicationFormloading]: hasVariant(
            variants,
            "loading",
            "loading"
          ),

          [sty.applicationFormnotfound]: hasVariant(
            variants,
            "notfound",
            "notfound"
          )
        })}
      >
        {(
          hasVariant(variants, "confirmed", "confirmed")
            ? false
            : hasVariant(variants, "notfound", "notfound")
            ? false
            : hasVariant(variants, "loading", "loading")
            ? false
            : true
        ) ? (
          <p.Stack
            as={"div"}
            hasGap={true}
            className={classNames(projectcss.all, sty.freeBox__cUxaj, {
              [sty.freeBoxconfirmed__cUxaj8RDp]: hasVariant(
                variants,
                "confirmed",
                "confirmed"
              ),

              [sty.freeBoxloading__cUxajfUsmp]: hasVariant(
                variants,
                "loading",
                "loading"
              ),

              [sty.freeBoxnotfound__cUxajkt814]: hasVariant(
                variants,
                "notfound",
                "notfound"
              )
            })}
          >
            <div className={classNames(projectcss.all, sty.freeBox__w8Dwv)}>
              <div className={classNames(projectcss.all, sty.freeBox__aJIhM)}>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__okjCv
                  )}
                >
                  {"PO No"}
                </div>

                {true ? (
                  <div
                    className={classNames(projectcss.all, sty.freeBox__osdLc)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__aonCz
                      )}
                    >
                      {"#"}
                    </div>

                    <div
                      className={classNames(projectcss.all, sty.freeBox__ynIiU)}
                    >
                      {p.renderPlasmicSlot({
                        defaultContents: "ABC123",
                        value: args.pono,
                        className: classNames(sty.slotTargetPono)
                      })}
                    </div>
                  </div>
                ) : null}
              </div>
            </div>

            {true ? (
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__nboCq)}
              >
                {true ? (
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__vMz8I
                    )}
                  >
                    {"Order To: "}
                  </div>
                ) : null}
                {true ? (
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__r8Zhr
                    )}
                  >
                    {"Ship To:"}
                  </div>
                ) : null}
              </p.Stack>
            ) : null}
            {true ? (
              <div className={classNames(projectcss.all, sty.freeBox__gQb8X)}>
                <div
                  className={classNames(projectcss.all, sty.freeBox___9Kunz)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___0JDvi
                    )}
                  >
                    {"Supplier Name"}
                  </div>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___566Cv
                    )}
                  >
                    {":"}
                  </div>

                  <div
                    data-plasmic-name={"supplier"}
                    data-plasmic-override={overrides.supplier}
                    className={classNames(projectcss.all, sty.supplier)}
                  >
                    {p.renderPlasmicSlot({
                      defaultContents: "N/A",
                      value: args.children,
                      className: classNames(sty.slotTargetChildren)
                    })}
                  </div>
                </div>

                <div className={classNames(projectcss.all, sty.freeBox__sbKBk)}>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__mevQ
                    )}
                  >
                    {"Mode of Shipment"}
                  </div>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__qyeB
                    )}
                  >
                    {":"}
                  </div>

                  <div
                    data-plasmic-name={"shipmentmode"}
                    data-plasmic-override={overrides.shipmentmode}
                    className={classNames(projectcss.all, sty.shipmentmode)}
                  >
                    {p.renderPlasmicSlot({
                      defaultContents: "N/A",
                      value: args.slot,
                      className: classNames(sty.slotTargetSlot)
                    })}
                  </div>
                </div>

                <div
                  className={classNames(projectcss.all, sty.freeBox___8AfCv)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__u7IiE
                    )}
                  >
                    {"Country of Origin"}
                  </div>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__eZgGo
                    )}
                  >
                    {":"}
                  </div>

                  <div
                    data-plasmic-name={"origincountry"}
                    data-plasmic-override={overrides.origincountry}
                    className={classNames(projectcss.all, sty.origincountry)}
                  >
                    {p.renderPlasmicSlot({
                      defaultContents: "N/A",
                      value: args.slot2,
                      className: classNames(sty.slotTargetSlot2)
                    })}
                  </div>
                </div>

                <div className={classNames(projectcss.all, sty.freeBox__h135C)}>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__em1Ex
                    )}
                  >
                    {"SAP Status"}
                  </div>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__op6Ep
                    )}
                  >
                    {":"}
                  </div>

                  <div
                    data-plasmic-name={"sap"}
                    data-plasmic-override={overrides.sap}
                    className={classNames(projectcss.all, sty.sap)}
                  >
                    {p.renderPlasmicSlot({
                      defaultContents: "N/A",
                      value: args.slot3,
                      className: classNames(sty.slotTargetSlot3)
                    })}
                  </div>
                </div>

                <div className={classNames(projectcss.all, sty.freeBox__ubkuq)}>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___7ToA2
                    )}
                  >
                    {"GRN Number"}
                  </div>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__wCjQq
                    )}
                  >
                    {":"}
                  </div>

                  <div
                    data-plasmic-name={"grn"}
                    data-plasmic-override={overrides.grn}
                    className={classNames(projectcss.all, sty.grn)}
                  >
                    {p.renderPlasmicSlot({
                      defaultContents: "N/A",
                      value: args.slot4,
                      className: classNames(sty.slotTargetSlot4)
                    })}
                  </div>
                </div>

                <div
                  className={classNames(projectcss.all, sty.freeBox___1P9GL)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__evfnh
                    )}
                  >
                    {"Credit Note Value"}
                  </div>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__lcd48
                    )}
                  >
                    {":"}
                  </div>

                  <div
                    data-plasmic-name={"creditnotevalue"}
                    data-plasmic-override={overrides.creditnotevalue}
                    className={classNames(projectcss.all, sty.creditnotevalue)}
                  >
                    {p.renderPlasmicSlot({
                      defaultContents: "N/A",
                      value: args.slot5,
                      className: classNames(sty.slotTargetSlot5)
                    })}
                  </div>
                </div>

                <div className={classNames(projectcss.all, sty.freeBox__piXrL)}>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___04RT1
                    )}
                  >
                    {
                      "Balance Payable (Total Invoice Value - Credit Note Amount"
                    }
                  </div>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__lXbDt
                    )}
                  >
                    {":"}
                  </div>

                  <div
                    data-plasmic-name={"balance2"}
                    data-plasmic-override={overrides.balance2}
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.balance2
                    )}
                  >
                    {"$"}
                  </div>

                  <div
                    data-plasmic-name={"balance"}
                    data-plasmic-override={overrides.balance}
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.balance
                    )}
                  >
                    {"N/A"}
                  </div>
                </div>
              </div>
            ) : null}
            {true ? (
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox___2WW8G)}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__vnWkz
                  )}
                >
                  {"Order To: "}
                </div>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__hRkIr
                  )}
                >
                  {"Ship To:"}
                </div>
              </p.Stack>
            ) : null}
            {true ? (
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__lMlfy)}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__stbvw
                  )}
                >
                  {"ABC Company, \nLocation"}
                </div>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__tnNfx
                  )}
                >
                  {"ABC Company, \nLocation"}
                </div>
              </p.Stack>
            ) : null}
            {true ? (
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox___4S2C)}
              >
                <div className={classNames(projectcss.all, sty.freeBox__qQgtz)}>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__xxiRz
                    )}
                  >
                    {"Contact:"}
                  </div>

                  {true ? (
                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__ejIKl)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__aIVsu
                        )}
                      >
                        {"Name:"}
                      </div>

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__flJ9
                        )}
                      >
                        {"1234567890"}
                      </div>
                    </p.Stack>
                  ) : null}
                </div>

                <div className={classNames(projectcss.all, sty.freeBox__j7WzX)}>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___8Ygt3
                    )}
                  >
                    {"Date:"}
                  </div>

                  {true ? (
                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__bpvk7)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__xiD0Q
                        )}
                      >
                        {"1234567890"}
                      </div>
                    </p.Stack>
                  ) : null}
                </div>
              </p.Stack>
            ) : null}
            {true ? (
              <div className={classNames(projectcss.all, sty.freeBox__tk8R6)}>
                <div className={classNames(projectcss.all, sty.freeBox__mYa1C)}>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__p6NX3
                    )}
                  >
                    {"#"}
                  </div>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__o5OmB
                    )}
                  >
                    {"Product ID"}
                  </div>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__b0NfJ
                    )}
                  >
                    {"Product"}
                  </div>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__iiZp1
                    )}
                  >
                    {"Quantity"}
                  </div>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__vFtkB
                    )}
                  >
                    {"Unit Price"}
                  </div>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__hkA4
                    )}
                  >
                    {"Total"}
                  </div>
                </div>

                <div className={classNames(projectcss.all, sty.freeBox__m3KW5)}>
                  <div
                    className={classNames(projectcss.all, sty.freeBox___0N2PT)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__qmmEg
                      )}
                    >
                      {"#"}
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__pxuCm
                      )}
                    >
                      {"Product ID"}
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__esdaJ
                      )}
                    >
                      {"Product"}
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__vvEsu
                      )}
                    >
                      {"Quantity"}
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__iYkKf
                      )}
                    >
                      {"Unit Price"}
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__apzo1
                      )}
                    >
                      {"Total"}
                    </div>
                  </div>

                  {true ? (
                    <div
                      className={classNames(
                        projectcss.all,
                        sty.freeBox___5X6Ag
                      )}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__jtFsT
                        )}
                      >
                        {"#"}
                      </div>

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text___8V7Xo
                        )}
                      >
                        {"Product ID"}
                      </div>

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__rgIb
                        )}
                      >
                        {"Product"}
                      </div>

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text___37Mvn
                        )}
                      >
                        {"Quantity"}
                      </div>

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__onu4R
                        )}
                      >
                        {"Unit Price"}
                      </div>

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text___9RdId
                        )}
                      >
                        {"Total"}
                      </div>
                    </div>
                  ) : null}
                  {true ? (
                    <div
                      className={classNames(projectcss.all, sty.freeBox__it2Mm)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__no7R6
                        )}
                      >
                        {"#"}
                      </div>

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text___58Qf
                        )}
                      >
                        {"Product ID"}
                      </div>

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__fiPPo
                        )}
                      >
                        {"Product"}
                      </div>

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__qoiJ
                        )}
                      >
                        {"Quantity"}
                      </div>

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text___9O63Q
                        )}
                      >
                        {"Unit Price"}
                      </div>

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text___7MSg
                        )}
                      >
                        {"Total"}
                      </div>
                    </div>
                  ) : null}
                  {true ? (
                    <div
                      className={classNames(projectcss.all, sty.freeBox__o18Pd)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__illNg
                        )}
                      >
                        {"#"}
                      </div>

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__d2JD2
                        )}
                      >
                        {"Product ID"}
                      </div>

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__kjU38
                        )}
                      >
                        {"Product"}
                      </div>

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__yfn4M
                        )}
                      >
                        {"Quantity"}
                      </div>

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__hlXaj
                        )}
                      >
                        {"Unit Price"}
                      </div>

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__vdm0B
                        )}
                      >
                        {"Total"}
                      </div>
                    </div>
                  ) : null}
                </div>
              </div>
            ) : null}
            {true ? (
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__mLLxf)}
              >
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__zQ4ST)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__rWn0W
                    )}
                  >
                    {"Sub Total"}
                  </div>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__lMg
                    )}
                  >
                    {"Total"}
                  </div>
                </p.Stack>

                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__gfpsd)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__t37Q
                    )}
                  >
                    {"Tax"}
                  </div>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__cV3N
                    )}
                  >
                    {"Total"}
                  </div>
                </p.Stack>

                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__cvMRj)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__afqou
                    )}
                  >
                    {"Total"}
                  </div>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__b45S2
                    )}
                  >
                    {"Total"}
                  </div>
                </p.Stack>
              </p.Stack>
            ) : null}
          </p.Stack>
        ) : null}
        {(
          hasVariant(variants, "confirmed", "confirmed")
            ? true
            : hasVariant(variants, "notfound", "notfound")
            ? true
            : hasVariant(variants, "loading", "loading")
            ? true
            : true
        ) ? (
          <div
            className={classNames(
              projectcss.all,
              projectcss.__wab_text,
              sty.text__ejgGv,
              {
                [sty.textconfirmed__ejgGv8RDp]: hasVariant(
                  variants,
                  "confirmed",
                  "confirmed"
                ),

                [sty.textloading__ejgGVfUsmp]: hasVariant(
                  variants,
                  "loading",
                  "loading"
                ),

                [sty.textnotfound__ejgGVkt814]: hasVariant(
                  variants,
                  "notfound",
                  "notfound"
                )
              }
            )}
          >
            {hasVariant(variants, "confirmed", "confirmed")
              ? "Sales Order already approved."
              : hasVariant(variants, "notfound", "notfound")
              ? "No Record Found.\nPlease create the sales order."
              : "Fetching Data from Database...."}
          </div>
        ) : null}
        {(
          hasVariant(variants, "confirmed", "confirmed")
            ? false
            : hasVariant(variants, "notfound", "notfound")
            ? false
            : hasVariant(variants, "loading", "loading")
            ? false
            : true
        ) ? (
          <Consentandsubmit
            data-plasmic-name={"consent"}
            data-plasmic-override={overrides.consent}
            className={classNames("__wab_instance", sty.consent, {
              [sty.consentconfirmed]: hasVariant(
                variants,
                "confirmed",
                "confirmed"
              ),

              [sty.consentloading]: hasVariant(variants, "loading", "loading"),
              [sty.consentnotfound]: hasVariant(
                variants,
                "notfound",
                "notfound"
              )
            })}
          />
        ) : null}
        {(
          hasVariant(variants, "confirmed", "confirmed")
            ? false
            : hasVariant(variants, "notfound", "notfound")
            ? false
            : hasVariant(variants, "loading", "loading")
            ? false
            : true
        ) ? (
          <ButtonB
            data-plasmic-name={"formbutton"}
            data-plasmic-override={overrides.formbutton}
            className={classNames("__wab_instance", sty.formbutton, {
              [sty.formbuttonconfirmed]: hasVariant(
                variants,
                "confirmed",
                "confirmed"
              ),

              [sty.formbuttonloading]: hasVariant(
                variants,
                "loading",
                "loading"
              ),

              [sty.formbuttonnotfound]: hasVariant(
                variants,
                "notfound",
                "notfound"
              )
            })}
            connectmm={true}
          />
        ) : null}
      </div>
    </div>
  );
}

const PlasmicDescendants = {
  root: [
    "root",
    "applicationForm",
    "supplier",
    "shipmentmode",
    "origincountry",
    "sap",
    "grn",
    "creditnotevalue",
    "balance2",
    "balance",
    "consent",
    "formbutton"
  ],

  applicationForm: [
    "applicationForm",
    "supplier",
    "shipmentmode",
    "origincountry",
    "sap",
    "grn",
    "creditnotevalue",
    "balance2",
    "balance",
    "consent",
    "formbutton"
  ],

  supplier: ["supplier"],
  shipmentmode: ["shipmentmode"],
  origincountry: ["origincountry"],
  sap: ["sap"],
  grn: ["grn"],
  creditnotevalue: ["creditnotevalue"],
  balance2: ["balance2"],
  balance: ["balance"],
  consent: ["consent"],
  formbutton: ["formbutton"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = deriveRenderOpts(props, {
      name: nodeName,
      descendantNames: [...PlasmicDescendants[nodeName]],
      internalArgPropNames: PlasmicSalesOrderConfirmationOld__ArgProps,
      internalVariantPropNames: PlasmicSalesOrderConfirmationOld__VariantProps
    });

    return PlasmicSalesOrderConfirmationOld__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicSalesOrderConfirmationOld";
  } else {
    func.displayName = `PlasmicSalesOrderConfirmationOld.${nodeName}`;
  }
  return func;
}

export const PlasmicSalesOrderConfirmationOld = Object.assign(
  // Top-level PlasmicSalesOrderConfirmationOld renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    applicationForm: makeNodeComponent("applicationForm"),
    supplier: makeNodeComponent("supplier"),
    shipmentmode: makeNodeComponent("shipmentmode"),
    origincountry: makeNodeComponent("origincountry"),
    sap: makeNodeComponent("sap"),
    grn: makeNodeComponent("grn"),
    creditnotevalue: makeNodeComponent("creditnotevalue"),
    balance2: makeNodeComponent("balance2"),
    balance: makeNodeComponent("balance"),
    consent: makeNodeComponent("consent"),
    formbutton: makeNodeComponent("formbutton"),
    // Metadata about props expected for PlasmicSalesOrderConfirmationOld
    internalVariantProps: PlasmicSalesOrderConfirmationOld__VariantProps,
    internalArgProps: PlasmicSalesOrderConfirmationOld__ArgProps
  }
);

export default PlasmicSalesOrderConfirmationOld;
/* prettier-ignore-end */
