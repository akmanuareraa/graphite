// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: 5GT6nVB5WgvLWb2iBXTk1E
// Component: Pzz-_WqNylx
import * as React from "react";
import * as p from "@plasmicapp/react-web";
import {
  hasVariant,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts
} from "@plasmicapp/react-web";
import "@plasmicapp/react-web/lib/plasmic.css";
import projectcss from "./plasmic_ezofis.module.css"; // plasmic-import: 5GT6nVB5WgvLWb2iBXTk1E/projectcss
import sty from "./PlasmicParamDisplay.module.css"; // plasmic-import: Pzz-_WqNylx/css

export const PlasmicParamDisplay__VariantProps = new Array(
  "application",
  "applicant",
  "organization"
);

export const PlasmicParamDisplay__ArgProps = new Array(
  "applicationNo",
  "txnNo",
  "receiptNo",
  "paymentDate",
  "fullName",
  "passportNo",
  "fileNo",
  "nationality",
  "accompanied",
  "orgName",
  "orgFileNo"
);

function PlasmicParamDisplay__RenderFunc(props) {
  const { variants, args, overrides, forNode, dataFetches } = props;
  return (
    <p.Stack
      as={"div"}
      data-plasmic-name={"root"}
      data-plasmic-override={overrides.root}
      data-plasmic-root={true}
      data-plasmic-for-node={forNode}
      hasGap={true}
      className={classNames(projectcss.all, projectcss.root_reset, sty.root)}
    >
      {(
        hasVariant(variants, "organization", "organization")
          ? false
          : hasVariant(variants, "applicant", "applicant")
          ? false
          : true
      ) ? (
        <div
          className={classNames(projectcss.all, sty.freeBox___4Llb6, {
            [sty.freeBox__applicant___4Llb6LzOdH]: hasVariant(
              variants,
              "applicant",
              "applicant"
            ),

            [sty.freeBox__organization___4Llb618Q1J]: hasVariant(
              variants,
              "organization",
              "organization"
            )
          })}
        >
          <div className={classNames(projectcss.all, sty.freeBox__a0VFc)}>
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__beWyt
              )}
            >
              {"APPLICATION NUMBER"}
            </div>
          </div>

          <div className={classNames(projectcss.all, sty.freeBox___3CTwX)}>
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__rrItk
              )}
            >
              {":"}
            </div>
          </div>

          <div className={classNames(projectcss.all, sty.freeBox__dpctc)}>
            <div className={classNames(projectcss.all, sty.freeBox__x2XN)}>
              {p.renderPlasmicSlot({
                defaultContents: "N/A",
                value: args.applicationNo,
                className: classNames(sty.slotTargetApplicationNo)
              })}
            </div>
          </div>
        </div>
      ) : null}
      {(
        hasVariant(variants, "organization", "organization")
          ? false
          : hasVariant(variants, "applicant", "applicant")
          ? false
          : true
      ) ? (
        <div
          className={classNames(projectcss.all, sty.freeBox__pEca, {
            [sty.freeBox__applicant__pEcaLzOdH]: hasVariant(
              variants,
              "applicant",
              "applicant"
            ),

            [sty.freeBox__organization__pEca18Q1J]: hasVariant(
              variants,
              "organization",
              "organization"
            )
          })}
        >
          <div className={classNames(projectcss.all, sty.freeBox__smQtb)}>
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__uxqYh
              )}
            >
              {"TRANSACTION NUMBER"}
            </div>
          </div>

          <div className={classNames(projectcss.all, sty.freeBox__rvn9Z)}>
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__rVhTd
              )}
            >
              {":"}
            </div>
          </div>

          <div className={classNames(projectcss.all, sty.freeBox__noxJq)}>
            <div className={classNames(projectcss.all, sty.freeBox__xcBQt)}>
              {p.renderPlasmicSlot({
                defaultContents: "N/A",
                value: args.txnNo,
                className: classNames(sty.slotTargetTxnNo)
              })}
            </div>
          </div>
        </div>
      ) : null}
      {(
        hasVariant(variants, "organization", "organization")
          ? false
          : hasVariant(variants, "applicant", "applicant")
          ? false
          : true
      ) ? (
        <div
          className={classNames(projectcss.all, sty.freeBox__ahQmS, {
            [sty.freeBox__applicant__ahQmSLzOdH]: hasVariant(
              variants,
              "applicant",
              "applicant"
            ),

            [sty.freeBox__organization__ahQmS18Q1J]: hasVariant(
              variants,
              "organization",
              "organization"
            )
          })}
        >
          <div className={classNames(projectcss.all, sty.freeBox__bfGly)}>
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__vcHlU
              )}
            >
              {"RECEIPT NUMBER"}
            </div>
          </div>

          <div className={classNames(projectcss.all, sty.freeBox__hykf)}>
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__zjZn9
              )}
            >
              {":"}
            </div>
          </div>

          <div className={classNames(projectcss.all, sty.freeBox__bgHZh)}>
            <div className={classNames(projectcss.all, sty.freeBox__ty0K4)}>
              {p.renderPlasmicSlot({
                defaultContents: "N/A",
                value: args.receiptNo,
                className: classNames(sty.slotTargetReceiptNo)
              })}
            </div>
          </div>
        </div>
      ) : null}
      {(
        hasVariant(variants, "organization", "organization")
          ? false
          : hasVariant(variants, "applicant", "applicant")
          ? false
          : true
      ) ? (
        <div
          className={classNames(projectcss.all, sty.freeBox__qZvks, {
            [sty.freeBox__applicant__qZvksLzOdH]: hasVariant(
              variants,
              "applicant",
              "applicant"
            ),

            [sty.freeBox__organization__qZvks18Q1J]: hasVariant(
              variants,
              "organization",
              "organization"
            )
          })}
        >
          <div className={classNames(projectcss.all, sty.freeBox__c5Q5)}>
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text___1NFao
              )}
            >
              {"PAYMENT DATE"}
            </div>
          </div>

          <div className={classNames(projectcss.all, sty.freeBox__jguV3)}>
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__p7Pr
              )}
            >
              {":"}
            </div>
          </div>

          <div className={classNames(projectcss.all, sty.freeBox__dS0Wv)}>
            <div className={classNames(projectcss.all, sty.freeBox__zptYc)}>
              {p.renderPlasmicSlot({
                defaultContents: "N/A",
                value: args.paymentDate,
                className: classNames(sty.slotTargetPaymentDate)
              })}
            </div>
          </div>
        </div>
      ) : null}
      {(
        hasVariant(variants, "organization", "organization")
          ? false
          : hasVariant(variants, "application", "application")
          ? false
          : true
      ) ? (
        <div
          className={classNames(projectcss.all, sty.freeBox__g2XjY, {
            [sty.freeBox__application__g2XjY3JTbp]: hasVariant(
              variants,
              "application",
              "application"
            ),

            [sty.freeBox__organization__g2XjY18Q1J]: hasVariant(
              variants,
              "organization",
              "organization"
            )
          })}
        >
          <div
            className={classNames(projectcss.all, sty.freeBox___918Zm, {
              [sty.freeBox__application___918Zm3JTbp]: hasVariant(
                variants,
                "application",
                "application"
              )
            })}
          >
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__rUSp1,
                {
                  [sty.text__application__rUSp13JTbp]: hasVariant(
                    variants,
                    "application",
                    "application"
                  )
                }
              )}
            >
              {"FULLNAME"}
            </div>
          </div>

          <div className={classNames(projectcss.all, sty.freeBox___29Ky2)}>
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__d6YH
              )}
            >
              {":"}
            </div>
          </div>

          <div className={classNames(projectcss.all, sty.freeBox__vXtY6)}>
            <div className={classNames(projectcss.all, sty.freeBox__k5YUx)}>
              {p.renderPlasmicSlot({
                defaultContents: "N/A",
                value: args.fullName,
                className: classNames(sty.slotTargetFullName)
              })}
            </div>
          </div>
        </div>
      ) : null}
      {(
        hasVariant(variants, "organization", "organization")
          ? false
          : hasVariant(variants, "application", "application")
          ? false
          : true
      ) ? (
        <div
          className={classNames(projectcss.all, sty.freeBox__kzke, {
            [sty.freeBox__application__kzke3JTbp]: hasVariant(
              variants,
              "application",
              "application"
            ),

            [sty.freeBox__organization__kzke18Q1J]: hasVariant(
              variants,
              "organization",
              "organization"
            )
          })}
        >
          <div className={classNames(projectcss.all, sty.freeBox__aGyUj)}>
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__olXjf
              )}
            >
              {"PASSPORT NUMBER"}
            </div>
          </div>

          <div className={classNames(projectcss.all, sty.freeBox__qrEj2)}>
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__mQcrb
              )}
            >
              {":"}
            </div>
          </div>

          <div className={classNames(projectcss.all, sty.freeBox__um8Hs)}>
            <div className={classNames(projectcss.all, sty.freeBox__qeFGp)}>
              {p.renderPlasmicSlot({
                defaultContents: "N/A",
                value: args.passportNo,
                className: classNames(sty.slotTargetPassportNo)
              })}
            </div>
          </div>
        </div>
      ) : null}
      {(
        hasVariant(variants, "organization", "organization")
          ? false
          : hasVariant(variants, "application", "application")
          ? false
          : true
      ) ? (
        <div
          className={classNames(projectcss.all, sty.freeBox__vpA7, {
            [sty.freeBox__application__vpA73JTbp]: hasVariant(
              variants,
              "application",
              "application"
            ),

            [sty.freeBox__organization__vpA718Q1J]: hasVariant(
              variants,
              "organization",
              "organization"
            )
          })}
        >
          <div className={classNames(projectcss.all, sty.freeBox___9RBxj)}>
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__hvBgA
              )}
            >
              {"FILE NUMBER"}
            </div>
          </div>

          <div className={classNames(projectcss.all, sty.freeBox__kmqAa)}>
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__xvd7B
              )}
            >
              {":"}
            </div>
          </div>

          <div className={classNames(projectcss.all, sty.freeBox__njJ)}>
            <div className={classNames(projectcss.all, sty.freeBox__gvhPy)}>
              {p.renderPlasmicSlot({
                defaultContents: "N/A",
                value: args.fileNo,
                className: classNames(sty.slotTargetFileNo)
              })}
            </div>
          </div>
        </div>
      ) : null}
      {(
        hasVariant(variants, "organization", "organization")
          ? false
          : hasVariant(variants, "application", "application")
          ? false
          : true
      ) ? (
        <div
          className={classNames(projectcss.all, sty.freeBox__t7ZXm, {
            [sty.freeBox__application__t7ZXm3JTbp]: hasVariant(
              variants,
              "application",
              "application"
            ),

            [sty.freeBox__organization__t7ZXm18Q1J]: hasVariant(
              variants,
              "organization",
              "organization"
            )
          })}
        >
          <div className={classNames(projectcss.all, sty.freeBox__vOaV2)}>
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__sfSiq
              )}
            >
              {"NATIONALITY"}
            </div>
          </div>

          <div className={classNames(projectcss.all, sty.freeBox__npZn5)}>
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text___60FGi
              )}
            >
              {":"}
            </div>
          </div>

          <div className={classNames(projectcss.all, sty.freeBox__vvUyY)}>
            <div className={classNames(projectcss.all, sty.freeBox__lxSbo)}>
              {p.renderPlasmicSlot({
                defaultContents: "N/A",
                value: args.nationality,
                className: classNames(sty.slotTargetNationality)
              })}
            </div>
          </div>
        </div>
      ) : null}
      {(
        hasVariant(variants, "organization", "organization")
          ? false
          : hasVariant(variants, "application", "application")
          ? false
          : true
      ) ? (
        <div
          className={classNames(projectcss.all, sty.freeBox__f4Pq2, {
            [sty.freeBox__application__f4Pq23JTbp]: hasVariant(
              variants,
              "application",
              "application"
            ),

            [sty.freeBox__organization__f4Pq218Q1J]: hasVariant(
              variants,
              "organization",
              "organization"
            )
          })}
        >
          <div className={classNames(projectcss.all, sty.freeBox__r3HLb)}>
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__zilkl
              )}
            >
              {"ACCOMPANIED"}
            </div>
          </div>

          <div className={classNames(projectcss.all, sty.freeBox__kKCiJ)}>
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__d9WMr
              )}
            >
              {":"}
            </div>
          </div>

          <div className={classNames(projectcss.all, sty.freeBox__dpmnC)}>
            <div className={classNames(projectcss.all, sty.freeBox__iQ1C4)}>
              {p.renderPlasmicSlot({
                defaultContents: "N/A",
                value: args.accompanied,
                className: classNames(sty.slotTargetAccompanied)
              })}
            </div>
          </div>
        </div>
      ) : null}
      {(
        hasVariant(variants, "applicant", "applicant")
          ? false
          : hasVariant(variants, "application", "application")
          ? false
          : true
      ) ? (
        <div
          className={classNames(projectcss.all, sty.freeBox___08Gnt, {
            [sty.freeBox__applicant___08GntLzOdH]: hasVariant(
              variants,
              "applicant",
              "applicant"
            ),

            [sty.freeBox__application___08Gnt3JTbp]: hasVariant(
              variants,
              "application",
              "application"
            )
          })}
        >
          <div className={classNames(projectcss.all, sty.freeBox___2XwyB)}>
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__jdEqj
              )}
            >
              {"ORGANIZATION NAME"}
            </div>
          </div>

          <div className={classNames(projectcss.all, sty.freeBox__geqr2)}>
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__e5Yjs
              )}
            >
              {":"}
            </div>
          </div>

          <div className={classNames(projectcss.all, sty.freeBox___2A1F0)}>
            <div className={classNames(projectcss.all, sty.freeBox__ujhdx)}>
              {p.renderPlasmicSlot({
                defaultContents: "N/A",
                value: args.orgName,
                className: classNames(sty.slotTargetOrgName)
              })}
            </div>
          </div>
        </div>
      ) : null}
      {(
        hasVariant(variants, "applicant", "applicant")
          ? false
          : hasVariant(variants, "application", "application")
          ? false
          : true
      ) ? (
        <div
          className={classNames(projectcss.all, sty.freeBox__znrL4, {
            [sty.freeBox__applicant__znrL4LzOdH]: hasVariant(
              variants,
              "applicant",
              "applicant"
            ),

            [sty.freeBox__application__znrL43JTbp]: hasVariant(
              variants,
              "application",
              "application"
            )
          })}
        >
          <div className={classNames(projectcss.all, sty.freeBox__zvwTr)}>
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__p60Tk
              )}
            >
              {"ORGANIZATION FILE NUMBER"}
            </div>
          </div>

          <div className={classNames(projectcss.all, sty.freeBox__wZi7Y)}>
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__eIOv
              )}
            >
              {":"}
            </div>
          </div>

          <div className={classNames(projectcss.all, sty.freeBox__bZqy1)}>
            <div className={classNames(projectcss.all, sty.freeBox__d95F)}>
              {p.renderPlasmicSlot({
                defaultContents: "N/A",
                value: args.orgFileNo,
                className: classNames(sty.slotTargetOrgFileNo)
              })}
            </div>
          </div>
        </div>
      ) : null}
    </p.Stack>
  );
}

const PlasmicDescendants = {
  root: ["root"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = deriveRenderOpts(props, {
      name: nodeName,
      descendantNames: [...PlasmicDescendants[nodeName]],
      internalArgPropNames: PlasmicParamDisplay__ArgProps,
      internalVariantPropNames: PlasmicParamDisplay__VariantProps
    });

    const { dataFetches } = props;
    return PlasmicParamDisplay__RenderFunc({
      variants,
      args,
      overrides,
      dataFetches,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicParamDisplay";
  } else {
    func.displayName = `PlasmicParamDisplay.${nodeName}`;
  }
  return func;
}

export const PlasmicParamDisplay = Object.assign(
  // Top-level PlasmicParamDisplay renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    // Metadata about props expected for PlasmicParamDisplay
    internalVariantProps: PlasmicParamDisplay__VariantProps,
    internalArgProps: PlasmicParamDisplay__ArgProps
  }
);

export default PlasmicParamDisplay;
/* prettier-ignore-end */
