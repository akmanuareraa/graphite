// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: 5GT6nVB5WgvLWb2iBXTk1E
// Component: DRfnTEvX2_-
import * as React from "react";
import * as p from "@plasmicapp/react-web";
import {
  hasVariant,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts
} from "@plasmicapp/react-web";
import Tableheader from "../../Tableheader"; // plasmic-import: eIiItdxCH0/component
import Tablerow from "../../Tablerow"; // plasmic-import: M-WjYEmjxm/component
import ButtonB from "../../ButtonB"; // plasmic-import: oSXCQ8ez26/component
import "@plasmicapp/react-web/lib/plasmic.css";
import projectcss from "./plasmic_project_5162.module.css"; // plasmic-import: 5GT6nVB5WgvLWb2iBXTk1E/projectcss
import sty from "./PlasmicSalesordergeneration3.module.css"; // plasmic-import: DRfnTEvX2_-/css

export const PlasmicSalesordergeneration3__VariantProps = new Array(
  "displaysalesorder"
);

export const PlasmicSalesordergeneration3__ArgProps = new Array(
  "children",
  "slot",
  "slot2",
  "slot3",
  "slot4",
  "slot5"
);

function PlasmicSalesordergeneration3__RenderFunc(props) {
  const { variants, args, overrides, forNode } = props;
  return (
    <div
      data-plasmic-name={"root"}
      data-plasmic-override={overrides.root}
      data-plasmic-root={true}
      data-plasmic-for-node={forNode}
      className={classNames(
        projectcss.all,
        projectcss.root_reset,
        projectcss.plasmic_default_styles,
        projectcss.plasmic_tokens,
        sty.root,
        {
          [sty.rootdisplaysalesorder]: hasVariant(
            variants,
            "displaysalesorder",
            "displaysalesorder"
          )
        }
      )}
    >
      <div
        className={classNames(
          projectcss.all,
          projectcss.__wab_text,
          sty.text__hqC0R,
          {
            [sty.textdisplaysalesorder__hqC0REvsJi]: hasVariant(
              variants,
              "displaysalesorder",
              "displaysalesorder"
            )
          }
        )}
      >
        {hasVariant(variants, "displaysalesorder", "displaysalesorder")
          ? "SALES ORDER GENERATION"
          : "SALES ORDER GENERATION"}
      </div>

      <div
        data-plasmic-name={"applicationForm"}
        data-plasmic-override={overrides.applicationForm}
        className={classNames(projectcss.all, sty.applicationForm, {
          [sty.applicationFormdisplaysalesorder]: hasVariant(
            variants,
            "displaysalesorder",
            "displaysalesorder"
          )
        })}
      >
        <p.Stack
          as={"div"}
          hasGap={true}
          className={classNames(projectcss.all, sty.freeBox__frLjz, {
            [sty.freeBoxdisplaysalesorder__frLjzEvsJi]: hasVariant(
              variants,
              "displaysalesorder",
              "displaysalesorder"
            )
          })}
        >
          <Tableheader
            data-plasmic-name={"tableheader"}
            data-plasmic-override={overrides.tableheader}
            className={classNames("__wab_instance", sty.tableheader, {
              [sty.tableheaderdisplaysalesorder]: hasVariant(
                variants,
                "displaysalesorder",
                "displaysalesorder"
              )
            })}
          />

          {(
            hasVariant(variants, "displaysalesorder", "displaysalesorder")
              ? true
              : false
          ) ? (
            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__ikybQ, {
                [sty.freeBoxdisplaysalesorder__ikybQEvsJi]: hasVariant(
                  variants,
                  "displaysalesorder",
                  "displaysalesorder"
                )
              })}
            >
              {(
                hasVariant(variants, "displaysalesorder", "displaysalesorder")
                  ? true
                  : true
              ) ? (
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text___2Hyv2,
                    {
                      [sty.textdisplaysalesorder___2Hyv2EvsJi]: hasVariant(
                        variants,
                        "displaysalesorder",
                        "displaysalesorder"
                      )
                    }
                  )}
                >
                  {"Order To: "}
                </div>
              ) : null}
              {(
                hasVariant(variants, "displaysalesorder", "displaysalesorder")
                  ? true
                  : true
              ) ? (
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__mpbZ5,
                    {
                      [sty.textdisplaysalesorder__mpbZ5EvsJi]: hasVariant(
                        variants,
                        "displaysalesorder",
                        "displaysalesorder"
                      )
                    }
                  )}
                >
                  {"Ship To:"}
                </div>
              ) : null}
            </p.Stack>
          ) : null}
          {(
            hasVariant(variants, "displaysalesorder", "displaysalesorder")
              ? true
              : true
          ) ? (
            <div
              className={classNames(projectcss.all, sty.freeBox___5JnEs, {
                [sty.freeBoxdisplaysalesorder___5JnEsEvsJi]: hasVariant(
                  variants,
                  "displaysalesorder",
                  "displaysalesorder"
                )
              })}
            >
              <Tablerow
                data-plasmic-name={"tablerow"}
                data-plasmic-override={overrides.tablerow}
                className={classNames("__wab_instance", sty.tablerow, {
                  [sty.tablerowdisplaysalesorder]: hasVariant(
                    variants,
                    "displaysalesorder",
                    "displaysalesorder"
                  )
                })}
                valueslot={p.renderPlasmicSlot({
                  defaultContents: "N/A",
                  value: args.children
                })}
              />

              <div
                className={classNames(projectcss.all, sty.freeBox__u2RtZ, {
                  [sty.freeBoxdisplaysalesorder__u2RtZEvsJi]: hasVariant(
                    variants,
                    "displaysalesorder",
                    "displaysalesorder"
                  )
                })}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__btyjx,
                    {
                      [sty.textdisplaysalesorder__btyjxEvsJi]: hasVariant(
                        variants,
                        "displaysalesorder",
                        "displaysalesorder"
                      )
                    }
                  )}
                >
                  {"Mode of Shipment"}
                </div>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__pserk,
                    {
                      [sty.textdisplaysalesorder__pserkEvsJi]: hasVariant(
                        variants,
                        "displaysalesorder",
                        "displaysalesorder"
                      )
                    }
                  )}
                >
                  {":"}
                </div>

                <div
                  data-plasmic-name={"shipmentmode"}
                  data-plasmic-override={overrides.shipmentmode}
                  className={classNames(projectcss.all, sty.shipmentmode, {
                    [sty.shipmentmodedisplaysalesorder]: hasVariant(
                      variants,
                      "displaysalesorder",
                      "displaysalesorder"
                    )
                  })}
                >
                  {p.renderPlasmicSlot({
                    defaultContents: "N/A",
                    value: args.slot,
                    className: classNames(sty.slotTargetSlot, {
                      [sty.slotTargetSlotdisplaysalesorder]: hasVariant(
                        variants,
                        "displaysalesorder",
                        "displaysalesorder"
                      )
                    })
                  })}
                </div>
              </div>

              <div
                className={classNames(projectcss.all, sty.freeBox__gmEyK, {
                  [sty.freeBoxdisplaysalesorder__gmEyKEvsJi]: hasVariant(
                    variants,
                    "displaysalesorder",
                    "displaysalesorder"
                  )
                })}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__nr7U9,
                    {
                      [sty.textdisplaysalesorder__nr7U9EvsJi]: hasVariant(
                        variants,
                        "displaysalesorder",
                        "displaysalesorder"
                      )
                    }
                  )}
                >
                  {"Country of Origin"}
                </div>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__vhpvv,
                    {
                      [sty.textdisplaysalesorder__vhpvvEvsJi]: hasVariant(
                        variants,
                        "displaysalesorder",
                        "displaysalesorder"
                      )
                    }
                  )}
                >
                  {":"}
                </div>

                <div
                  data-plasmic-name={"origincountry"}
                  data-plasmic-override={overrides.origincountry}
                  className={classNames(projectcss.all, sty.origincountry, {
                    [sty.origincountrydisplaysalesorder]: hasVariant(
                      variants,
                      "displaysalesorder",
                      "displaysalesorder"
                    )
                  })}
                >
                  {p.renderPlasmicSlot({
                    defaultContents: "N/A",
                    value: args.slot2,
                    className: classNames(sty.slotTargetSlot2, {
                      [sty.slotTargetSlot2displaysalesorder]: hasVariant(
                        variants,
                        "displaysalesorder",
                        "displaysalesorder"
                      )
                    })
                  })}
                </div>
              </div>

              <div
                className={classNames(projectcss.all, sty.freeBox__wclVg, {
                  [sty.freeBoxdisplaysalesorder__wclVgEvsJi]: hasVariant(
                    variants,
                    "displaysalesorder",
                    "displaysalesorder"
                  )
                })}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text___50QaK,
                    {
                      [sty.textdisplaysalesorder___50QaKEvsJi]: hasVariant(
                        variants,
                        "displaysalesorder",
                        "displaysalesorder"
                      )
                    }
                  )}
                >
                  {"SAP Status"}
                </div>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__hW7Jk,
                    {
                      [sty.textdisplaysalesorder__hW7JkEvsJi]: hasVariant(
                        variants,
                        "displaysalesorder",
                        "displaysalesorder"
                      )
                    }
                  )}
                >
                  {":"}
                </div>

                <div
                  data-plasmic-name={"sap"}
                  data-plasmic-override={overrides.sap}
                  className={classNames(projectcss.all, sty.sap, {
                    [sty.sapdisplaysalesorder]: hasVariant(
                      variants,
                      "displaysalesorder",
                      "displaysalesorder"
                    )
                  })}
                >
                  {p.renderPlasmicSlot({
                    defaultContents: "N/A",
                    value: args.slot3,
                    className: classNames(sty.slotTargetSlot3, {
                      [sty.slotTargetSlot3displaysalesorder]: hasVariant(
                        variants,
                        "displaysalesorder",
                        "displaysalesorder"
                      )
                    })
                  })}
                </div>
              </div>

              <div
                className={classNames(projectcss.all, sty.freeBox__pepVv, {
                  [sty.freeBoxdisplaysalesorder__pepVvEvsJi]: hasVariant(
                    variants,
                    "displaysalesorder",
                    "displaysalesorder"
                  )
                })}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__ujC3S,
                    {
                      [sty.textdisplaysalesorder__ujC3SEvsJi]: hasVariant(
                        variants,
                        "displaysalesorder",
                        "displaysalesorder"
                      )
                    }
                  )}
                >
                  {"GRN Number"}
                </div>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text___2Mi8K,
                    {
                      [sty.textdisplaysalesorder___2Mi8KEvsJi]: hasVariant(
                        variants,
                        "displaysalesorder",
                        "displaysalesorder"
                      )
                    }
                  )}
                >
                  {":"}
                </div>

                <div
                  data-plasmic-name={"grn"}
                  data-plasmic-override={overrides.grn}
                  className={classNames(projectcss.all, sty.grn, {
                    [sty.grndisplaysalesorder]: hasVariant(
                      variants,
                      "displaysalesorder",
                      "displaysalesorder"
                    )
                  })}
                >
                  {p.renderPlasmicSlot({
                    defaultContents: "N/A",
                    value: args.slot4,
                    className: classNames(sty.slotTargetSlot4, {
                      [sty.slotTargetSlot4displaysalesorder]: hasVariant(
                        variants,
                        "displaysalesorder",
                        "displaysalesorder"
                      )
                    })
                  })}
                </div>
              </div>

              <div
                className={classNames(projectcss.all, sty.freeBox__zIbh, {
                  [sty.freeBoxdisplaysalesorder__zIbhEvsJi]: hasVariant(
                    variants,
                    "displaysalesorder",
                    "displaysalesorder"
                  )
                })}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__ufGpr,
                    {
                      [sty.textdisplaysalesorder__ufGprEvsJi]: hasVariant(
                        variants,
                        "displaysalesorder",
                        "displaysalesorder"
                      )
                    }
                  )}
                >
                  {"Credit Note Value"}
                </div>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__z8Yjn,
                    {
                      [sty.textdisplaysalesorder__z8YjnEvsJi]: hasVariant(
                        variants,
                        "displaysalesorder",
                        "displaysalesorder"
                      )
                    }
                  )}
                >
                  {":"}
                </div>

                <div
                  data-plasmic-name={"creditnotevalue"}
                  data-plasmic-override={overrides.creditnotevalue}
                  className={classNames(projectcss.all, sty.creditnotevalue, {
                    [sty.creditnotevaluedisplaysalesorder]: hasVariant(
                      variants,
                      "displaysalesorder",
                      "displaysalesorder"
                    )
                  })}
                >
                  {p.renderPlasmicSlot({
                    defaultContents: "N/A",
                    value: args.slot5,
                    className: classNames(sty.slotTargetSlot5, {
                      [sty.slotTargetSlot5displaysalesorder]: hasVariant(
                        variants,
                        "displaysalesorder",
                        "displaysalesorder"
                      )
                    })
                  })}
                </div>
              </div>

              <div
                className={classNames(projectcss.all, sty.freeBox__jlwIz, {
                  [sty.freeBoxdisplaysalesorder__jlwIzEvsJi]: hasVariant(
                    variants,
                    "displaysalesorder",
                    "displaysalesorder"
                  )
                })}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__wbe48,
                    {
                      [sty.textdisplaysalesorder__wbe48EvsJi]: hasVariant(
                        variants,
                        "displaysalesorder",
                        "displaysalesorder"
                      )
                    }
                  )}
                >
                  {"Balance Payable (Total Invoice Value - Credit Note Amount"}
                </div>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__jftE2,
                    {
                      [sty.textdisplaysalesorder__jftE2EvsJi]: hasVariant(
                        variants,
                        "displaysalesorder",
                        "displaysalesorder"
                      )
                    }
                  )}
                >
                  {":"}
                </div>

                <div
                  data-plasmic-name={"balance2"}
                  data-plasmic-override={overrides.balance2}
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.balance2,
                    {
                      [sty.balance2displaysalesorder]: hasVariant(
                        variants,
                        "displaysalesorder",
                        "displaysalesorder"
                      )
                    }
                  )}
                >
                  {"$"}
                </div>

                <div
                  data-plasmic-name={"balance"}
                  data-plasmic-override={overrides.balance}
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.balance,
                    {
                      [sty.balancedisplaysalesorder]: hasVariant(
                        variants,
                        "displaysalesorder",
                        "displaysalesorder"
                      )
                    }
                  )}
                >
                  {"N/A"}
                </div>
              </div>
            </div>
          ) : null}
          {(
            hasVariant(variants, "displaysalesorder", "displaysalesorder")
              ? true
              : true
          ) ? (
            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__eVUzr, {
                [sty.freeBoxdisplaysalesorder__eVUzrEvsJi]: hasVariant(
                  variants,
                  "displaysalesorder",
                  "displaysalesorder"
                )
              })}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text___9I6Pw,
                  {
                    [sty.textdisplaysalesorder___9I6PwEvsJi]: hasVariant(
                      variants,
                      "displaysalesorder",
                      "displaysalesorder"
                    )
                  }
                )}
              >
                {"Order To: "}
              </div>

              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__dR2Tu,
                  {
                    [sty.textdisplaysalesorder__dR2TuEvsJi]: hasVariant(
                      variants,
                      "displaysalesorder",
                      "displaysalesorder"
                    )
                  }
                )}
              >
                {"Ship To:"}
              </div>
            </p.Stack>
          ) : null}
          {(
            hasVariant(variants, "displaysalesorder", "displaysalesorder")
              ? true
              : true
          ) ? (
            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__rlc9E, {
                [sty.freeBoxdisplaysalesorder__rlc9EEvsJi]: hasVariant(
                  variants,
                  "displaysalesorder",
                  "displaysalesorder"
                )
              })}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text___7Af08,
                  {
                    [sty.textdisplaysalesorder___7Af08EvsJi]: hasVariant(
                      variants,
                      "displaysalesorder",
                      "displaysalesorder"
                    )
                  }
                )}
              >
                {"ABC Company, \nLocation"}
              </div>

              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__ccoDg,
                  {
                    [sty.textdisplaysalesorder__ccoDgEvsJi]: hasVariant(
                      variants,
                      "displaysalesorder",
                      "displaysalesorder"
                    )
                  }
                )}
              >
                {"ABC Company, \nLocation"}
              </div>
            </p.Stack>
          ) : null}
          {(
            hasVariant(variants, "displaysalesorder", "displaysalesorder")
              ? true
              : true
          ) ? (
            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__yr71O, {
                [sty.freeBoxdisplaysalesorder__yr71OEvsJi]: hasVariant(
                  variants,
                  "displaysalesorder",
                  "displaysalesorder"
                )
              })}
            >
              <div
                className={classNames(projectcss.all, sty.freeBox__iLqG, {
                  [sty.freeBoxdisplaysalesorder__iLqGEvsJi]: hasVariant(
                    variants,
                    "displaysalesorder",
                    "displaysalesorder"
                  )
                })}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text___6WYhq
                  )}
                >
                  {"Contact:"}
                </div>

                {true ? (
                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__laZKb, {
                      [sty.freeBoxdisplaysalesorder__laZKbEvsJi]: hasVariant(
                        variants,
                        "displaysalesorder",
                        "displaysalesorder"
                      )
                    })}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__eSkx5,
                        {
                          [sty.textdisplaysalesorder__eSkx5EvsJi]: hasVariant(
                            variants,
                            "displaysalesorder",
                            "displaysalesorder"
                          )
                        }
                      )}
                    >
                      {"Name:"}
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__lUgI5,
                        {
                          [sty.textdisplaysalesorder__lUgI5EvsJi]: hasVariant(
                            variants,
                            "displaysalesorder",
                            "displaysalesorder"
                          )
                        }
                      )}
                    >
                      {"1234567890"}
                    </div>
                  </p.Stack>
                ) : null}
              </div>

              <div
                className={classNames(projectcss.all, sty.freeBox__iwMsI, {
                  [sty.freeBoxdisplaysalesorder__iwMsIEvsJi]: hasVariant(
                    variants,
                    "displaysalesorder",
                    "displaysalesorder"
                  )
                })}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__tf7S6,
                    {
                      [sty.textdisplaysalesorder__tf7S6EvsJi]: hasVariant(
                        variants,
                        "displaysalesorder",
                        "displaysalesorder"
                      )
                    }
                  )}
                >
                  {"Date:"}
                </div>

                {true ? (
                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__pdKfr, {
                      [sty.freeBoxdisplaysalesorder__pdKfrEvsJi]: hasVariant(
                        variants,
                        "displaysalesorder",
                        "displaysalesorder"
                      )
                    })}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__qn3E,
                        {
                          [sty.textdisplaysalesorder__qn3EEvsJi]: hasVariant(
                            variants,
                            "displaysalesorder",
                            "displaysalesorder"
                          )
                        }
                      )}
                    >
                      {"1234567890"}
                    </div>
                  </p.Stack>
                ) : null}
              </div>
            </p.Stack>
          ) : null}
          {(
            hasVariant(variants, "displaysalesorder", "displaysalesorder")
              ? true
              : true
          ) ? (
            <div
              className={classNames(projectcss.all, sty.freeBox__edSa, {
                [sty.freeBoxdisplaysalesorder__edSaEvsJi]: hasVariant(
                  variants,
                  "displaysalesorder",
                  "displaysalesorder"
                )
              })}
            >
              <div
                className={classNames(projectcss.all, sty.freeBox__qiPex, {
                  [sty.freeBoxdisplaysalesorder__qiPexEvsJi]: hasVariant(
                    variants,
                    "displaysalesorder",
                    "displaysalesorder"
                  )
                })}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text___4EBb,
                    {
                      [sty.textdisplaysalesorder___4EBbEvsJi]: hasVariant(
                        variants,
                        "displaysalesorder",
                        "displaysalesorder"
                      )
                    }
                  )}
                >
                  {"#"}
                </div>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text___5Vlip,
                    {
                      [sty.textdisplaysalesorder___5VlipEvsJi]: hasVariant(
                        variants,
                        "displaysalesorder",
                        "displaysalesorder"
                      )
                    }
                  )}
                >
                  {"Product ID"}
                </div>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text___1BzDg,
                    {
                      [sty.textdisplaysalesorder___1BzDgEvsJi]: hasVariant(
                        variants,
                        "displaysalesorder",
                        "displaysalesorder"
                      )
                    }
                  )}
                >
                  {"Product"}
                </div>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__ka2SL,
                    {
                      [sty.textdisplaysalesorder__ka2SLEvsJi]: hasVariant(
                        variants,
                        "displaysalesorder",
                        "displaysalesorder"
                      )
                    }
                  )}
                >
                  {"Quantity"}
                </div>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text___1DcDb,
                    {
                      [sty.textdisplaysalesorder___1DcDbEvsJi]: hasVariant(
                        variants,
                        "displaysalesorder",
                        "displaysalesorder"
                      )
                    }
                  )}
                >
                  {"Unit Price"}
                </div>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__dWoaP,
                    {
                      [sty.textdisplaysalesorder__dWoaPEvsJi]: hasVariant(
                        variants,
                        "displaysalesorder",
                        "displaysalesorder"
                      )
                    }
                  )}
                >
                  {"Total"}
                </div>
              </div>

              <div className={classNames(projectcss.all, sty.freeBox___7PDji)}>
                <div
                  className={classNames(projectcss.all, sty.freeBox__ofVR, {
                    [sty.freeBoxdisplaysalesorder__ofVREvsJi]: hasVariant(
                      variants,
                      "displaysalesorder",
                      "displaysalesorder"
                    )
                  })}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__coWGw,
                      {
                        [sty.textdisplaysalesorder__coWGwEvsJi]: hasVariant(
                          variants,
                          "displaysalesorder",
                          "displaysalesorder"
                        )
                      }
                    )}
                  >
                    {"#"}
                  </div>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__pqaOi,
                      {
                        [sty.textdisplaysalesorder__pqaOiEvsJi]: hasVariant(
                          variants,
                          "displaysalesorder",
                          "displaysalesorder"
                        )
                      }
                    )}
                  >
                    {"Product ID"}
                  </div>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___4ZCcr,
                      {
                        [sty.textdisplaysalesorder___4ZCcrEvsJi]: hasVariant(
                          variants,
                          "displaysalesorder",
                          "displaysalesorder"
                        )
                      }
                    )}
                  >
                    {"Product"}
                  </div>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___64Fx,
                      {
                        [sty.textdisplaysalesorder___64FxEvsJi]: hasVariant(
                          variants,
                          "displaysalesorder",
                          "displaysalesorder"
                        )
                      }
                    )}
                  >
                    {"Quantity"}
                  </div>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___6WqUm,
                      {
                        [sty.textdisplaysalesorder___6WqUmEvsJi]: hasVariant(
                          variants,
                          "displaysalesorder",
                          "displaysalesorder"
                        )
                      }
                    )}
                  >
                    {"Unit Price"}
                  </div>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__oNLlY,
                      {
                        [sty.textdisplaysalesorder__oNLlYEvsJi]: hasVariant(
                          variants,
                          "displaysalesorder",
                          "displaysalesorder"
                        )
                      }
                    )}
                  >
                    {"Total"}
                  </div>
                </div>

                {(
                  hasVariant(variants, "displaysalesorder", "displaysalesorder")
                    ? true
                    : true
                ) ? (
                  <div
                    className={classNames(projectcss.all, sty.freeBox__hFufh, {
                      [sty.freeBoxdisplaysalesorder__hFufhEvsJi]: hasVariant(
                        variants,
                        "displaysalesorder",
                        "displaysalesorder"
                      )
                    })}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__tnUm,
                        {
                          [sty.textdisplaysalesorder__tnUmEvsJi]: hasVariant(
                            variants,
                            "displaysalesorder",
                            "displaysalesorder"
                          )
                        }
                      )}
                    >
                      {"#"}
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__xqyOl,
                        {
                          [sty.textdisplaysalesorder__xqyOlEvsJi]: hasVariant(
                            variants,
                            "displaysalesorder",
                            "displaysalesorder"
                          )
                        }
                      )}
                    >
                      {"Product ID"}
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__qwlhs,
                        {
                          [sty.textdisplaysalesorder__qwlhsEvsJi]: hasVariant(
                            variants,
                            "displaysalesorder",
                            "displaysalesorder"
                          )
                        }
                      )}
                    >
                      {"Product"}
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__yTkqZ
                      )}
                    >
                      {"Quantity"}
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__zs0Az
                      )}
                    >
                      {"Unit Price"}
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__xvE7N
                      )}
                    >
                      {"Total"}
                    </div>
                  </div>
                ) : null}
                {(
                  hasVariant(variants, "displaysalesorder", "displaysalesorder")
                    ? true
                    : true
                ) ? (
                  <div
                    className={classNames(projectcss.all, sty.freeBox__cr1N9, {
                      [sty.freeBoxdisplaysalesorder__cr1N9EvsJi]: hasVariant(
                        variants,
                        "displaysalesorder",
                        "displaysalesorder"
                      )
                    })}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___3NzX4
                      )}
                    >
                      {"#"}
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__kbGmt
                      )}
                    >
                      {"Product ID"}
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__sjgel
                      )}
                    >
                      {"Product"}
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__owlad
                      )}
                    >
                      {"Quantity"}
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__liUxe
                      )}
                    >
                      {"Unit Price"}
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__gGdUt
                      )}
                    >
                      {"Total"}
                    </div>
                  </div>
                ) : null}
                {(
                  hasVariant(variants, "displaysalesorder", "displaysalesorder")
                    ? true
                    : true
                ) ? (
                  <div
                    className={classNames(projectcss.all, sty.freeBox__t5U8A, {
                      [sty.freeBoxdisplaysalesorder__t5U8AEvsJi]: hasVariant(
                        variants,
                        "displaysalesorder",
                        "displaysalesorder"
                      )
                    })}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__zBuf
                      )}
                    >
                      {"#"}
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__yHbN
                      )}
                    >
                      {"Product ID"}
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__aB9Qp
                      )}
                    >
                      {"Product"}
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___1Qvuh
                      )}
                    >
                      {"Quantity"}
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__wb3Ej
                      )}
                    >
                      {"Unit Price"}
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__dgVNq
                      )}
                    >
                      {"Total"}
                    </div>
                  </div>
                ) : null}
              </div>
            </div>
          ) : null}
          {(
            hasVariant(variants, "displaysalesorder", "displaysalesorder")
              ? true
              : true
          ) ? (
            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox___5Fl63, {
                [sty.freeBoxdisplaysalesorder___5Fl63EvsJi]: hasVariant(
                  variants,
                  "displaysalesorder",
                  "displaysalesorder"
                )
              })}
            >
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__uSUbB, {
                  [sty.freeBoxdisplaysalesorder__uSUbBEvsJi]: hasVariant(
                    variants,
                    "displaysalesorder",
                    "displaysalesorder"
                  )
                })}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__s0Xzu,
                    {
                      [sty.textdisplaysalesorder__s0XzuEvsJi]: hasVariant(
                        variants,
                        "displaysalesorder",
                        "displaysalesorder"
                      )
                    }
                  )}
                >
                  {"Sub Total"}
                </div>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__lwva8,
                    {
                      [sty.textdisplaysalesorder__lwva8EvsJi]: hasVariant(
                        variants,
                        "displaysalesorder",
                        "displaysalesorder"
                      )
                    }
                  )}
                >
                  {"Total"}
                </div>
              </p.Stack>

              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__nOaji, {
                  [sty.freeBoxdisplaysalesorder__nOajiEvsJi]: hasVariant(
                    variants,
                    "displaysalesorder",
                    "displaysalesorder"
                  )
                })}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__lHz99
                  )}
                >
                  {"Tax"}
                </div>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__cufFy,
                    {
                      [sty.textdisplaysalesorder__cufFyEvsJi]: hasVariant(
                        variants,
                        "displaysalesorder",
                        "displaysalesorder"
                      )
                    }
                  )}
                >
                  {"Total"}
                </div>
              </p.Stack>

              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__f2, {
                  [sty.freeBoxdisplaysalesorder__f2EvsJi]: hasVariant(
                    variants,
                    "displaysalesorder",
                    "displaysalesorder"
                  )
                })}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__kn9Dp,
                    {
                      [sty.textdisplaysalesorder__kn9DpEvsJi]: hasVariant(
                        variants,
                        "displaysalesorder",
                        "displaysalesorder"
                      )
                    }
                  )}
                >
                  {"Total"}
                </div>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__o8Ohy,
                    {
                      [sty.textdisplaysalesorder__o8OhyEvsJi]: hasVariant(
                        variants,
                        "displaysalesorder",
                        "displaysalesorder"
                      )
                    }
                  )}
                >
                  {"Total"}
                </div>
              </p.Stack>
            </p.Stack>
          ) : null}
        </p.Stack>

        {true ? (
          <ButtonB
            data-plasmic-name={"formbutton"}
            data-plasmic-override={overrides.formbutton}
            className={classNames("__wab_instance", sty.formbutton, {
              [sty.formbuttondisplaysalesorder]: hasVariant(
                variants,
                "displaysalesorder",
                "displaysalesorder"
              )
            })}
            connectmm={true}
          />
        ) : null}
      </div>
    </div>
  );
}

const PlasmicDescendants = {
  root: [
    "root",
    "applicationForm",
    "tableheader",
    "tablerow",
    "shipmentmode",
    "origincountry",
    "sap",
    "grn",
    "creditnotevalue",
    "balance2",
    "balance",
    "formbutton"
  ],

  applicationForm: [
    "applicationForm",
    "tableheader",
    "tablerow",
    "shipmentmode",
    "origincountry",
    "sap",
    "grn",
    "creditnotevalue",
    "balance2",
    "balance",
    "formbutton"
  ],

  tableheader: ["tableheader"],
  tablerow: ["tablerow"],
  shipmentmode: ["shipmentmode"],
  origincountry: ["origincountry"],
  sap: ["sap"],
  grn: ["grn"],
  creditnotevalue: ["creditnotevalue"],
  balance2: ["balance2"],
  balance: ["balance"],
  formbutton: ["formbutton"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = deriveRenderOpts(props, {
      name: nodeName,
      descendantNames: [...PlasmicDescendants[nodeName]],
      internalArgPropNames: PlasmicSalesordergeneration3__ArgProps,
      internalVariantPropNames: PlasmicSalesordergeneration3__VariantProps
    });

    return PlasmicSalesordergeneration3__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicSalesordergeneration3";
  } else {
    func.displayName = `PlasmicSalesordergeneration3.${nodeName}`;
  }
  return func;
}

export const PlasmicSalesordergeneration3 = Object.assign(
  // Top-level PlasmicSalesordergeneration3 renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    applicationForm: makeNodeComponent("applicationForm"),
    tableheader: makeNodeComponent("tableheader"),
    tablerow: makeNodeComponent("tablerow"),
    shipmentmode: makeNodeComponent("shipmentmode"),
    origincountry: makeNodeComponent("origincountry"),
    sap: makeNodeComponent("sap"),
    grn: makeNodeComponent("grn"),
    creditnotevalue: makeNodeComponent("creditnotevalue"),
    balance2: makeNodeComponent("balance2"),
    balance: makeNodeComponent("balance"),
    formbutton: makeNodeComponent("formbutton"),
    // Metadata about props expected for PlasmicSalesordergeneration3
    internalVariantProps: PlasmicSalesordergeneration3__VariantProps,
    internalArgProps: PlasmicSalesordergeneration3__ArgProps
  }
);

export default PlasmicSalesordergeneration3;
/* prettier-ignore-end */
