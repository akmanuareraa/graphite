// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: 5GT6nVB5WgvLWb2iBXTk1E
// Component: Q64C15q-hHA
import * as React from "react";
import * as p from "@plasmicapp/react-web";
import {
  hasVariant,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts
} from "@plasmicapp/react-web";
import Consentandsubmit from "../../Consentandsubmit"; // plasmic-import: eZig3v-AJ7/component
import ButtonB from "../../ButtonB"; // plasmic-import: oSXCQ8ez26/component
import "@plasmicapp/react-web/lib/plasmic.css";
import projectcss from "./plasmic_project_5162.module.css"; // plasmic-import: 5GT6nVB5WgvLWb2iBXTk1E/projectcss
import sty from "./PlasmicInvoiceconfirmation.module.css"; // plasmic-import: Q64C15q-hHA/css

export const PlasmicInvoiceconfirmation__VariantProps = new Array(
  "loading",
  "notfound",
  "confirmed"
);

export const PlasmicInvoiceconfirmation__ArgProps = new Array(
  "dynamictableslot"
);

function PlasmicInvoiceconfirmation__RenderFunc(props) {
  const { variants, args, overrides, forNode } = props;
  return (
    <div
      data-plasmic-name={"root"}
      data-plasmic-override={overrides.root}
      data-plasmic-root={true}
      data-plasmic-for-node={forNode}
      className={classNames(
        projectcss.all,
        projectcss.root_reset,
        projectcss.plasmic_default_styles,
        projectcss.plasmic_tokens,
        sty.root
      )}
    >
      <div
        className={classNames(
          projectcss.all,
          projectcss.__wab_text,
          sty.text__aA2Ts
        )}
      >
        {"INVOICE CONFIRMATION"}
      </div>

      <div
        data-plasmic-name={"applicationForm"}
        data-plasmic-override={overrides.applicationForm}
        className={classNames(projectcss.all, sty.applicationForm, {
          [sty.applicationFormconfirmed]: hasVariant(
            variants,
            "confirmed",
            "confirmed"
          ),

          [sty.applicationFormloading]: hasVariant(
            variants,
            "loading",
            "loading"
          ),

          [sty.applicationFormnotfound]: hasVariant(
            variants,
            "notfound",
            "notfound"
          )
        })}
      >
        {(
          hasVariant(variants, "confirmed", "confirmed")
            ? true
            : hasVariant(variants, "notfound", "notfound")
            ? true
            : hasVariant(variants, "loading", "loading")
            ? true
            : true
        ) ? (
          <div
            className={classNames(
              projectcss.all,
              projectcss.__wab_text,
              sty.text__g2SGa,
              {
                [sty.textconfirmed__g2SGAuViL]: hasVariant(
                  variants,
                  "confirmed",
                  "confirmed"
                ),

                [sty.textloading__g2SGaqts2B]: hasVariant(
                  variants,
                  "loading",
                  "loading"
                ),

                [sty.textnotfound__g2SGAoAGbJ]: hasVariant(
                  variants,
                  "notfound",
                  "notfound"
                )
              }
            )}
          >
            {hasVariant(variants, "confirmed", "confirmed")
              ? "Invoice already approved."
              : hasVariant(variants, "notfound", "notfound")
              ? "No Record Found.\nPlease create the invoice."
              : "Fetching Data from Database...."}
          </div>
        ) : null}
        {(
          hasVariant(variants, "confirmed", "confirmed")
            ? false
            : hasVariant(variants, "notfound", "notfound")
            ? false
            : hasVariant(variants, "loading", "loading")
            ? false
            : true
        ) ? (
          <p.Stack
            as={"div"}
            hasGap={true}
            className={classNames(projectcss.all, sty.freeBox__zc9Bi, {
              [sty.freeBoxconfirmed__zc9BIuViL]: hasVariant(
                variants,
                "confirmed",
                "confirmed"
              ),

              [sty.freeBoxloading__zc9Biqts2B]: hasVariant(
                variants,
                "loading",
                "loading"
              ),

              [sty.freeBoxnotfound__zc9BIoAGbJ]: hasVariant(
                variants,
                "notfound",
                "notfound"
              )
            })}
          >
            <div className={classNames(projectcss.all, sty.freeBox__heLrp)}>
              {p.renderPlasmicSlot({
                defaultContents: null,
                value: args.dynamictableslot
              })}
            </div>

            <Consentandsubmit
              data-plasmic-name={"consent"}
              data-plasmic-override={overrides.consent}
              className={classNames("__wab_instance", sty.consent)}
            />

            {true ? (
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__oUpwa)}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text___8J6Eg
                  )}
                >
                  {"Order To: "}
                </div>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__aPzfM
                  )}
                >
                  {"Ship To:"}
                </div>
              </p.Stack>
            ) : null}
            {true ? (
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__neyS)}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text___3ZqSv
                  )}
                >
                  {"ABC Company, \nLocation"}
                </div>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__blgwc
                  )}
                >
                  {"ABC Company, \nLocation"}
                </div>
              </p.Stack>
            ) : null}
            {true ? (
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__eFe0T)}
              >
                <div className={classNames(projectcss.all, sty.freeBox__gEyE)}>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__eMcoZ
                    )}
                  >
                    {"Contact:"}
                  </div>

                  {true ? (
                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__elplS)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__tlFi1
                        )}
                      >
                        {"Name:"}
                      </div>

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__b4Ygz
                        )}
                      >
                        {"1234567890"}
                      </div>
                    </p.Stack>
                  ) : null}
                </div>

                <div className={classNames(projectcss.all, sty.freeBox__fusLg)}>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__mQvax
                    )}
                  >
                    {"Date:"}
                  </div>

                  {true ? (
                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__r9R1V)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__hfPyy
                        )}
                      >
                        {"1234567890"}
                      </div>
                    </p.Stack>
                  ) : null}
                </div>
              </p.Stack>
            ) : null}
            {true ? (
              <div className={classNames(projectcss.all, sty.freeBox__grAc)}>
                <div
                  className={classNames(projectcss.all, sty.freeBox___6Zi3F)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___0U2Ov
                    )}
                  >
                    {"#"}
                  </div>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__ozLSf
                    )}
                  >
                    {"Product ID"}
                  </div>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__yFn3A
                    )}
                  >
                    {"Product"}
                  </div>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__dukuA
                    )}
                  >
                    {"Quantity"}
                  </div>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___330Oy
                    )}
                  >
                    {"Unit Price"}
                  </div>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__dfYKr
                    )}
                  >
                    {"Total"}
                  </div>
                </div>

                <div className={classNames(projectcss.all, sty.freeBox__nnIpI)}>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__zgk9H)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__nRpBf
                      )}
                    >
                      {"#"}
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___8D15A
                      )}
                    >
                      {"Product ID"}
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__eMlP
                      )}
                    >
                      {"Product"}
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__y1ZD
                      )}
                    >
                      {"Quantity"}
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__rC9Sm
                      )}
                    >
                      {"Unit Price"}
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___0SER
                      )}
                    >
                      {"Total"}
                    </div>
                  </div>

                  {true ? (
                    <div
                      className={classNames(
                        projectcss.all,
                        sty.freeBox___0Rfv8
                      )}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__xOut7
                        )}
                      >
                        {"#"}
                      </div>

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__efTnE
                        )}
                      >
                        {"Product ID"}
                      </div>

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__djyng
                        )}
                      >
                        {"Product"}
                      </div>

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__uSxXt
                        )}
                      >
                        {"Quantity"}
                      </div>

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__sYfD
                        )}
                      >
                        {"Unit Price"}
                      </div>

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__pyT8A
                        )}
                      >
                        {"Total"}
                      </div>
                    </div>
                  ) : null}
                  {true ? (
                    <div
                      className={classNames(projectcss.all, sty.freeBox__k47Yz)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__eAfbu
                        )}
                      >
                        {"#"}
                      </div>

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__lNBru
                        )}
                      >
                        {"Product ID"}
                      </div>

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text___51S5X
                        )}
                      >
                        {"Product"}
                      </div>

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__gs72D
                        )}
                      >
                        {"Quantity"}
                      </div>

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__vMn3J
                        )}
                      >
                        {"Unit Price"}
                      </div>

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__bas6B
                        )}
                      >
                        {"Total"}
                      </div>
                    </div>
                  ) : null}
                  {true ? (
                    <div
                      className={classNames(
                        projectcss.all,
                        sty.freeBox___1Rf2J
                      )}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__euEtQ
                        )}
                      >
                        {"#"}
                      </div>

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__pSlIc
                        )}
                      >
                        {"Product ID"}
                      </div>

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__yAgb4
                        )}
                      >
                        {"Product"}
                      </div>

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__p6N8Z
                        )}
                      >
                        {"Quantity"}
                      </div>

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__zRq44
                        )}
                      >
                        {"Unit Price"}
                      </div>

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__t6OVk
                        )}
                      >
                        {"Total"}
                      </div>
                    </div>
                  ) : null}
                </div>
              </div>
            ) : null}
            {true ? (
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__jKqvx)}
              >
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__n4Qat)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__mUk4G
                    )}
                  >
                    {"Sub Total"}
                  </div>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__kzMEa
                    )}
                  >
                    {"Total"}
                  </div>
                </p.Stack>

                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__bp9T7)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__fcAbJ
                    )}
                  >
                    {"Tax"}
                  </div>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__c5JQz
                    )}
                  >
                    {"Total"}
                  </div>
                </p.Stack>

                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__im8Yg)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__z7RPh
                    )}
                  >
                    {"Total"}
                  </div>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__oBtOm
                    )}
                  >
                    {"Total"}
                  </div>
                </p.Stack>
              </p.Stack>
            ) : null}
            {true ? (
              <ButtonB
                data-plasmic-name={"formbutton"}
                data-plasmic-override={overrides.formbutton}
                className={classNames("__wab_instance", sty.formbutton)}
                connectmm={true}
              />
            ) : null}
          </p.Stack>
        ) : null}
      </div>
    </div>
  );
}

const PlasmicDescendants = {
  root: ["root", "applicationForm", "consent", "formbutton"],
  applicationForm: ["applicationForm", "consent", "formbutton"],
  consent: ["consent"],
  formbutton: ["formbutton"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = deriveRenderOpts(props, {
      name: nodeName,
      descendantNames: [...PlasmicDescendants[nodeName]],
      internalArgPropNames: PlasmicInvoiceconfirmation__ArgProps,
      internalVariantPropNames: PlasmicInvoiceconfirmation__VariantProps
    });

    return PlasmicInvoiceconfirmation__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicInvoiceconfirmation";
  } else {
    func.displayName = `PlasmicInvoiceconfirmation.${nodeName}`;
  }
  return func;
}

export const PlasmicInvoiceconfirmation = Object.assign(
  // Top-level PlasmicInvoiceconfirmation renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    applicationForm: makeNodeComponent("applicationForm"),
    consent: makeNodeComponent("consent"),
    formbutton: makeNodeComponent("formbutton"),
    // Metadata about props expected for PlasmicInvoiceconfirmation
    internalVariantProps: PlasmicInvoiceconfirmation__VariantProps,
    internalArgProps: PlasmicInvoiceconfirmation__ArgProps
  }
);

export default PlasmicInvoiceconfirmation;
/* prettier-ignore-end */
