// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: 5GT6nVB5WgvLWb2iBXTk1E
// Component: A5pFafQu1KH
import * as React from "react";
import * as p from "@plasmicapp/react-web";
import {
  hasVariant,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts
} from "@plasmicapp/react-web";
import ButtonB from "../../ButtonB"; // plasmic-import: oSXCQ8ez26/component
import "@plasmicapp/react-web/lib/plasmic.css";
import projectcss from "./plasmic_project_5162.module.css"; // plasmic-import: 5GT6nVB5WgvLWb2iBXTk1E/projectcss
import sty from "./PlasmicInvoicegenerationold.module.css"; // plasmic-import: A5pFafQu1KH/css

export const PlasmicInvoicegenerationold__VariantProps = new Array(
  "displayinvoice"
);

export const PlasmicInvoicegenerationold__ArgProps = new Array(
  "date",
  "value",
  "awbbl",
  "qty",
  "gross",
  "volume",
  "invoiceno",
  "eta"
);

function PlasmicInvoicegenerationold__RenderFunc(props) {
  const { variants, args, overrides, forNode } = props;
  return (
    <div
      data-plasmic-name={"root"}
      data-plasmic-override={overrides.root}
      data-plasmic-root={true}
      data-plasmic-for-node={forNode}
      className={classNames(
        projectcss.all,
        projectcss.root_reset,
        projectcss.plasmic_default_styles,
        projectcss.plasmic_tokens,
        sty.root
      )}
    >
      <div
        className={classNames(
          projectcss.all,
          projectcss.__wab_text,
          sty.text__mvrB,
          {
            [sty.textdisplayinvoice__mvrBlBi4J]: hasVariant(
              variants,
              "displayinvoice",
              "displayinvoice"
            )
          }
        )}
      >
        {hasVariant(variants, "displayinvoice", "displayinvoice")
          ? "INVOICE GENERATION"
          : "SALES ORDER GENERATION"}
      </div>

      <div
        data-plasmic-name={"applicationForm"}
        data-plasmic-override={overrides.applicationForm}
        className={classNames(projectcss.all, sty.applicationForm, {
          [sty.applicationFormdisplayinvoice]: hasVariant(
            variants,
            "displayinvoice",
            "displayinvoice"
          )
        })}
      >
        <p.Stack
          as={"div"}
          hasGap={true}
          className={classNames(projectcss.all, sty.freeBox__m6WMr, {
            [sty.freeBoxdisplayinvoice__m6WMRlBi4J]: hasVariant(
              variants,
              "displayinvoice",
              "displayinvoice"
            )
          })}
        >
          {(
            hasVariant(variants, "displayinvoice", "displayinvoice")
              ? true
              : false
          ) ? (
            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__yVGfB, {
                [sty.freeBoxdisplayinvoice__yVGfBlBi4J]: hasVariant(
                  variants,
                  "displayinvoice",
                  "displayinvoice"
                )
              })}
            >
              {(
                hasVariant(variants, "displayinvoice", "displayinvoice")
                  ? true
                  : true
              ) ? (
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__goFwB,
                    {
                      [sty.textdisplayinvoice__goFwBlBi4J]: hasVariant(
                        variants,
                        "displayinvoice",
                        "displayinvoice"
                      )
                    }
                  )}
                >
                  {"Order To: "}
                </div>
              ) : null}
              {(
                hasVariant(variants, "displayinvoice", "displayinvoice")
                  ? true
                  : true
              ) ? (
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__lcpm7,
                    {
                      [sty.textdisplayinvoice__lcpm7LBi4J]: hasVariant(
                        variants,
                        "displayinvoice",
                        "displayinvoice"
                      )
                    }
                  )}
                >
                  {"Ship To:"}
                </div>
              ) : null}
            </p.Stack>
          ) : null}
          {(
            hasVariant(variants, "displayinvoice", "displayinvoice")
              ? true
              : true
          ) ? (
            <div
              className={classNames(projectcss.all, sty.freeBox__fj34Q, {
                [sty.freeBoxdisplayinvoice__fj34QlBi4J]: hasVariant(
                  variants,
                  "displayinvoice",
                  "displayinvoice"
                )
              })}
            >
              <div
                className={classNames(projectcss.all, sty.freeBox__f9ZSl, {
                  [sty.freeBoxdisplayinvoice__f9ZSLlBi4J]: hasVariant(
                    variants,
                    "displayinvoice",
                    "displayinvoice"
                  )
                })}
              >
                <div
                  className={classNames(projectcss.all, sty.freeBox___3Q7UY, {
                    [sty.freeBoxdisplayinvoice___3Q7UYlBi4J]: hasVariant(
                      variants,
                      "displayinvoice",
                      "displayinvoice"
                    )
                  })}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___4Q5,
                      {
                        [sty.textdisplayinvoice___4Q5LBi4J]: hasVariant(
                          variants,
                          "displayinvoice",
                          "displayinvoice"
                        )
                      }
                    )}
                  >
                    {hasVariant(variants, "displayinvoice", "displayinvoice")
                      ? "Invoice No"
                      : "Order ID"}
                  </div>

                  {true ? (
                    <div
                      className={classNames(
                        projectcss.all,
                        sty.freeBox___9C9Mi,
                        {
                          [sty.freeBoxdisplayinvoice___9C9MilBi4J]: hasVariant(
                            variants,
                            "displayinvoice",
                            "displayinvoice"
                          )
                        }
                      )}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text___2GbMy,
                          {
                            [sty.textdisplayinvoice___2GbMYlBi4J]: hasVariant(
                              variants,
                              "displayinvoice",
                              "displayinvoice"
                            )
                          }
                        )}
                      >
                        {"#"}
                      </div>

                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__ulcO4,
                          {
                            [sty.freeBoxdisplayinvoice__ulcO4LBi4J]: hasVariant(
                              variants,
                              "displayinvoice",
                              "displayinvoice"
                            )
                          }
                        )}
                      >
                        {p.renderPlasmicSlot({
                          defaultContents: "ABC123",
                          value: args.invoiceno,
                          className: classNames(sty.slotTargetInvoiceno, {
                            [sty.slotTargetInvoicenodisplayinvoice]: hasVariant(
                              variants,
                              "displayinvoice",
                              "displayinvoice"
                            )
                          })
                        })}
                      </div>
                    </div>
                  ) : null}
                </div>
              </div>

              <div
                className={classNames(projectcss.all, sty.freeBox__tXxyR, {
                  [sty.freeBoxdisplayinvoice__tXxyRlBi4J]: hasVariant(
                    variants,
                    "displayinvoice",
                    "displayinvoice"
                  )
                })}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__b4XX3,
                    {
                      [sty.textdisplayinvoice__b4XX3LBi4J]: hasVariant(
                        variants,
                        "displayinvoice",
                        "displayinvoice"
                      )
                    }
                  )}
                >
                  {"Invoice Date"}
                </div>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text___441Db,
                    {
                      [sty.textdisplayinvoice___441DblBi4J]: hasVariant(
                        variants,
                        "displayinvoice",
                        "displayinvoice"
                      )
                    }
                  )}
                >
                  {":"}
                </div>

                <div
                  data-plasmic-name={"supplier"}
                  data-plasmic-override={overrides.supplier}
                  className={classNames(projectcss.all, sty.supplier, {
                    [sty.supplierdisplayinvoice]: hasVariant(
                      variants,
                      "displayinvoice",
                      "displayinvoice"
                    )
                  })}
                >
                  {p.renderPlasmicSlot({
                    defaultContents: "N/A",
                    value: args.date,
                    className: classNames(sty.slotTargetDate, {
                      [sty.slotTargetDatedisplayinvoice]: hasVariant(
                        variants,
                        "displayinvoice",
                        "displayinvoice"
                      )
                    })
                  })}
                </div>
              </div>

              <div
                className={classNames(projectcss.all, sty.freeBox__eu6Zo, {
                  [sty.freeBoxdisplayinvoice__eu6ZOlBi4J]: hasVariant(
                    variants,
                    "displayinvoice",
                    "displayinvoice"
                  )
                })}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__zc0KA,
                    {
                      [sty.textdisplayinvoice__zc0KAlBi4J]: hasVariant(
                        variants,
                        "displayinvoice",
                        "displayinvoice"
                      )
                    }
                  )}
                >
                  {"Invoice Value"}
                </div>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__iq3RG,
                    {
                      [sty.textdisplayinvoice__iq3RGlBi4J]: hasVariant(
                        variants,
                        "displayinvoice",
                        "displayinvoice"
                      )
                    }
                  )}
                >
                  {":"}
                </div>

                <div
                  data-plasmic-name={"shipmentmode"}
                  data-plasmic-override={overrides.shipmentmode}
                  className={classNames(projectcss.all, sty.shipmentmode, {
                    [sty.shipmentmodedisplayinvoice]: hasVariant(
                      variants,
                      "displayinvoice",
                      "displayinvoice"
                    )
                  })}
                >
                  {p.renderPlasmicSlot({
                    defaultContents: "N/A",
                    value: args.value,
                    className: classNames(sty.slotTargetValue, {
                      [sty.slotTargetValuedisplayinvoice]: hasVariant(
                        variants,
                        "displayinvoice",
                        "displayinvoice"
                      )
                    })
                  })}
                </div>
              </div>

              <div
                className={classNames(projectcss.all, sty.freeBox__gJvzO, {
                  [sty.freeBoxdisplayinvoice__gJvzOlBi4J]: hasVariant(
                    variants,
                    "displayinvoice",
                    "displayinvoice"
                  )
                })}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__zy7D,
                    {
                      [sty.textdisplayinvoice__zy7DLBi4J]: hasVariant(
                        variants,
                        "displayinvoice",
                        "displayinvoice"
                      )
                    }
                  )}
                >
                  {"AWB_BL No"}
                </div>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__hU1IE,
                    {
                      [sty.textdisplayinvoice__hU1IElBi4J]: hasVariant(
                        variants,
                        "displayinvoice",
                        "displayinvoice"
                      )
                    }
                  )}
                >
                  {":"}
                </div>

                <div
                  data-plasmic-name={"origincountry"}
                  data-plasmic-override={overrides.origincountry}
                  className={classNames(projectcss.all, sty.origincountry, {
                    [sty.origincountrydisplayinvoice]: hasVariant(
                      variants,
                      "displayinvoice",
                      "displayinvoice"
                    )
                  })}
                >
                  {p.renderPlasmicSlot({
                    defaultContents: "N/A",
                    value: args.awbbl,
                    className: classNames(sty.slotTargetAwbbl, {
                      [sty.slotTargetAwbbldisplayinvoice]: hasVariant(
                        variants,
                        "displayinvoice",
                        "displayinvoice"
                      )
                    })
                  })}
                </div>
              </div>

              <div
                className={classNames(projectcss.all, sty.freeBox__vTx67, {
                  [sty.freeBoxdisplayinvoice__vTx67LBi4J]: hasVariant(
                    variants,
                    "displayinvoice",
                    "displayinvoice"
                  )
                })}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__thjrO,
                    {
                      [sty.textdisplayinvoice__thjrOlBi4J]: hasVariant(
                        variants,
                        "displayinvoice",
                        "displayinvoice"
                      )
                    }
                  )}
                >
                  {"Quantity"}
                </div>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__opsga,
                    {
                      [sty.textdisplayinvoice__opsgAlBi4J]: hasVariant(
                        variants,
                        "displayinvoice",
                        "displayinvoice"
                      )
                    }
                  )}
                >
                  {":"}
                </div>

                <div
                  data-plasmic-name={"sap"}
                  data-plasmic-override={overrides.sap}
                  className={classNames(projectcss.all, sty.sap, {
                    [sty.sapdisplayinvoice]: hasVariant(
                      variants,
                      "displayinvoice",
                      "displayinvoice"
                    )
                  })}
                >
                  {p.renderPlasmicSlot({
                    defaultContents: "N/A",
                    value: args.qty,
                    className: classNames(sty.slotTargetQty, {
                      [sty.slotTargetQtydisplayinvoice]: hasVariant(
                        variants,
                        "displayinvoice",
                        "displayinvoice"
                      )
                    })
                  })}
                </div>
              </div>

              <div
                className={classNames(projectcss.all, sty.freeBox__xOuux, {
                  [sty.freeBoxdisplayinvoice__xOuuxlBi4J]: hasVariant(
                    variants,
                    "displayinvoice",
                    "displayinvoice"
                  )
                })}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text___06IAx,
                    {
                      [sty.textdisplayinvoice___06IAxlBi4J]: hasVariant(
                        variants,
                        "displayinvoice",
                        "displayinvoice"
                      )
                    }
                  )}
                >
                  {"Gross Weight"}
                </div>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__c5H,
                    {
                      [sty.textdisplayinvoice__c5HLBi4J]: hasVariant(
                        variants,
                        "displayinvoice",
                        "displayinvoice"
                      )
                    }
                  )}
                >
                  {":"}
                </div>

                <div
                  data-plasmic-name={"grn"}
                  data-plasmic-override={overrides.grn}
                  className={classNames(projectcss.all, sty.grn, {
                    [sty.grndisplayinvoice]: hasVariant(
                      variants,
                      "displayinvoice",
                      "displayinvoice"
                    )
                  })}
                >
                  {p.renderPlasmicSlot({
                    defaultContents: "N/A",
                    value: args.gross,
                    className: classNames(sty.slotTargetGross, {
                      [sty.slotTargetGrossdisplayinvoice]: hasVariant(
                        variants,
                        "displayinvoice",
                        "displayinvoice"
                      )
                    })
                  })}
                </div>
              </div>

              <div
                className={classNames(projectcss.all, sty.freeBox__kxWnp, {
                  [sty.freeBoxdisplayinvoice__kxWnPlBi4J]: hasVariant(
                    variants,
                    "displayinvoice",
                    "displayinvoice"
                  )
                })}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__txb2D,
                    {
                      [sty.textdisplayinvoice__txb2DlBi4J]: hasVariant(
                        variants,
                        "displayinvoice",
                        "displayinvoice"
                      )
                    }
                  )}
                >
                  {"Volume Weight"}
                </div>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text___15LMa,
                    {
                      [sty.textdisplayinvoice___15LMalBi4J]: hasVariant(
                        variants,
                        "displayinvoice",
                        "displayinvoice"
                      )
                    }
                  )}
                >
                  {":"}
                </div>

                <div
                  data-plasmic-name={"creditnotevalue"}
                  data-plasmic-override={overrides.creditnotevalue}
                  className={classNames(projectcss.all, sty.creditnotevalue, {
                    [sty.creditnotevaluedisplayinvoice]: hasVariant(
                      variants,
                      "displayinvoice",
                      "displayinvoice"
                    )
                  })}
                >
                  {p.renderPlasmicSlot({
                    defaultContents: "N/A",
                    value: args.volume,
                    className: classNames(sty.slotTargetVolume, {
                      [sty.slotTargetVolumedisplayinvoice]: hasVariant(
                        variants,
                        "displayinvoice",
                        "displayinvoice"
                      )
                    })
                  })}
                </div>
              </div>

              <div
                className={classNames(projectcss.all, sty.freeBox__fvNgj, {
                  [sty.freeBoxdisplayinvoice__fvNgjlBi4J]: hasVariant(
                    variants,
                    "displayinvoice",
                    "displayinvoice"
                  )
                })}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__gyk9Z,
                    {
                      [sty.textdisplayinvoice__gyk9ZlBi4J]: hasVariant(
                        variants,
                        "displayinvoice",
                        "displayinvoice"
                      )
                    }
                  )}
                >
                  {"ETA"}
                </div>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__b55LS,
                    {
                      [sty.textdisplayinvoice__b55LSlBi4J]: hasVariant(
                        variants,
                        "displayinvoice",
                        "displayinvoice"
                      )
                    }
                  )}
                >
                  {":"}
                </div>

                <div
                  data-plasmic-name={"creditnotevalue2"}
                  data-plasmic-override={overrides.creditnotevalue2}
                  className={classNames(projectcss.all, sty.creditnotevalue2, {
                    [sty.creditnotevalue2displayinvoice]: hasVariant(
                      variants,
                      "displayinvoice",
                      "displayinvoice"
                    )
                  })}
                >
                  {p.renderPlasmicSlot({
                    defaultContents: "N/A",
                    value: args.eta,
                    className: classNames(sty.slotTargetEta, {
                      [sty.slotTargetEtadisplayinvoice]: hasVariant(
                        variants,
                        "displayinvoice",
                        "displayinvoice"
                      )
                    })
                  })}
                </div>
              </div>
            </div>
          ) : null}
          {(
            hasVariant(variants, "displayinvoice", "displayinvoice")
              ? true
              : true
          ) ? (
            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__xBOrl, {
                [sty.freeBoxdisplayinvoice__xBOrllBi4J]: hasVariant(
                  variants,
                  "displayinvoice",
                  "displayinvoice"
                )
              })}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__yztAn,
                  {
                    [sty.textdisplayinvoice__yztAnlBi4J]: hasVariant(
                      variants,
                      "displayinvoice",
                      "displayinvoice"
                    )
                  }
                )}
              >
                {"Order To: "}
              </div>

              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__enz55,
                  {
                    [sty.textdisplayinvoice__enz55LBi4J]: hasVariant(
                      variants,
                      "displayinvoice",
                      "displayinvoice"
                    )
                  }
                )}
              >
                {"Ship To:"}
              </div>
            </p.Stack>
          ) : null}
          {(
            hasVariant(variants, "displayinvoice", "displayinvoice")
              ? true
              : true
          ) ? (
            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__vIrIo, {
                [sty.freeBoxdisplayinvoice__vIrIolBi4J]: hasVariant(
                  variants,
                  "displayinvoice",
                  "displayinvoice"
                )
              })}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__fj36Z,
                  {
                    [sty.textdisplayinvoice__fj36ZlBi4J]: hasVariant(
                      variants,
                      "displayinvoice",
                      "displayinvoice"
                    )
                  }
                )}
              >
                {"ABC Company, \nLocation"}
              </div>

              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text___5HVtb,
                  {
                    [sty.textdisplayinvoice___5HVtblBi4J]: hasVariant(
                      variants,
                      "displayinvoice",
                      "displayinvoice"
                    )
                  }
                )}
              >
                {"ABC Company, \nLocation"}
              </div>
            </p.Stack>
          ) : null}
          {(
            hasVariant(variants, "displayinvoice", "displayinvoice")
              ? true
              : true
          ) ? (
            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__eB9B, {
                [sty.freeBoxdisplayinvoice__eB9BlBi4J]: hasVariant(
                  variants,
                  "displayinvoice",
                  "displayinvoice"
                )
              })}
            >
              <div
                className={classNames(projectcss.all, sty.freeBox__cuEyA, {
                  [sty.freeBoxdisplayinvoice__cuEyAlBi4J]: hasVariant(
                    variants,
                    "displayinvoice",
                    "displayinvoice"
                  )
                })}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__aZLzs
                  )}
                >
                  {"Contact:"}
                </div>

                {true ? (
                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__b5Qz, {
                      [sty.freeBoxdisplayinvoice__b5QzlBi4J]: hasVariant(
                        variants,
                        "displayinvoice",
                        "displayinvoice"
                      )
                    })}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__z2Slu,
                        {
                          [sty.textdisplayinvoice__z2SlulBi4J]: hasVariant(
                            variants,
                            "displayinvoice",
                            "displayinvoice"
                          )
                        }
                      )}
                    >
                      {"Name:"}
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__wzMJ,
                        {
                          [sty.textdisplayinvoice__wzMJlBi4J]: hasVariant(
                            variants,
                            "displayinvoice",
                            "displayinvoice"
                          )
                        }
                      )}
                    >
                      {"1234567890"}
                    </div>
                  </p.Stack>
                ) : null}
              </div>

              <div
                className={classNames(projectcss.all, sty.freeBox__r4B0Q, {
                  [sty.freeBoxdisplayinvoice__r4B0QlBi4J]: hasVariant(
                    variants,
                    "displayinvoice",
                    "displayinvoice"
                  )
                })}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__kFpqZ,
                    {
                      [sty.textdisplayinvoice__kFpqZlBi4J]: hasVariant(
                        variants,
                        "displayinvoice",
                        "displayinvoice"
                      )
                    }
                  )}
                >
                  {"Date:"}
                </div>

                {true ? (
                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox___8J7Le, {
                      [sty.freeBoxdisplayinvoice___8J7LelBi4J]: hasVariant(
                        variants,
                        "displayinvoice",
                        "displayinvoice"
                      )
                    })}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__lC00B,
                        {
                          [sty.textdisplayinvoice__lC00BlBi4J]: hasVariant(
                            variants,
                            "displayinvoice",
                            "displayinvoice"
                          )
                        }
                      )}
                    >
                      {"1234567890"}
                    </div>
                  </p.Stack>
                ) : null}
              </div>
            </p.Stack>
          ) : null}
          {(
            hasVariant(variants, "displayinvoice", "displayinvoice")
              ? true
              : true
          ) ? (
            <div
              className={classNames(projectcss.all, sty.freeBox__jw565, {
                [sty.freeBoxdisplayinvoice__jw565LBi4J]: hasVariant(
                  variants,
                  "displayinvoice",
                  "displayinvoice"
                )
              })}
            >
              <div
                className={classNames(projectcss.all, sty.freeBox__mv99N, {
                  [sty.freeBoxdisplayinvoice__mv99NlBi4J]: hasVariant(
                    variants,
                    "displayinvoice",
                    "displayinvoice"
                  )
                })}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text___757Ap,
                    {
                      [sty.textdisplayinvoice___757APlBi4J]: hasVariant(
                        variants,
                        "displayinvoice",
                        "displayinvoice"
                      )
                    }
                  )}
                >
                  {"#"}
                </div>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__emAHp,
                    {
                      [sty.textdisplayinvoice__emAHplBi4J]: hasVariant(
                        variants,
                        "displayinvoice",
                        "displayinvoice"
                      )
                    }
                  )}
                >
                  {"Product ID"}
                </div>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text___7U0JN,
                    {
                      [sty.textdisplayinvoice___7U0JNlBi4J]: hasVariant(
                        variants,
                        "displayinvoice",
                        "displayinvoice"
                      )
                    }
                  )}
                >
                  {"Product"}
                </div>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__vurWh,
                    {
                      [sty.textdisplayinvoice__vurWHlBi4J]: hasVariant(
                        variants,
                        "displayinvoice",
                        "displayinvoice"
                      )
                    }
                  )}
                >
                  {"Quantity"}
                </div>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__w6HU,
                    {
                      [sty.textdisplayinvoice__w6HUlBi4J]: hasVariant(
                        variants,
                        "displayinvoice",
                        "displayinvoice"
                      )
                    }
                  )}
                >
                  {"Unit Price"}
                </div>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__ono6I,
                    {
                      [sty.textdisplayinvoice__ono6IlBi4J]: hasVariant(
                        variants,
                        "displayinvoice",
                        "displayinvoice"
                      )
                    }
                  )}
                >
                  {"Total"}
                </div>
              </div>

              <div className={classNames(projectcss.all, sty.freeBox__goulp)}>
                <div
                  className={classNames(projectcss.all, sty.freeBox___7L8Rq, {
                    [sty.freeBoxdisplayinvoice___7L8RQlBi4J]: hasVariant(
                      variants,
                      "displayinvoice",
                      "displayinvoice"
                    )
                  })}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__dKew9,
                      {
                        [sty.textdisplayinvoice__dKew9LBi4J]: hasVariant(
                          variants,
                          "displayinvoice",
                          "displayinvoice"
                        )
                      }
                    )}
                  >
                    {"#"}
                  </div>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__tV7Vu,
                      {
                        [sty.textdisplayinvoice__tV7VulBi4J]: hasVariant(
                          variants,
                          "displayinvoice",
                          "displayinvoice"
                        )
                      }
                    )}
                  >
                    {"Product ID"}
                  </div>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__rtNgm,
                      {
                        [sty.textdisplayinvoice__rtNgmlBi4J]: hasVariant(
                          variants,
                          "displayinvoice",
                          "displayinvoice"
                        )
                      }
                    )}
                  >
                    {"Product"}
                  </div>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__wnjox,
                      {
                        [sty.textdisplayinvoice__wnjoxlBi4J]: hasVariant(
                          variants,
                          "displayinvoice",
                          "displayinvoice"
                        )
                      }
                    )}
                  >
                    {"Quantity"}
                  </div>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___6P6PN,
                      {
                        [sty.textdisplayinvoice___6P6PNlBi4J]: hasVariant(
                          variants,
                          "displayinvoice",
                          "displayinvoice"
                        )
                      }
                    )}
                  >
                    {"Unit Price"}
                  </div>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__sFl32,
                      {
                        [sty.textdisplayinvoice__sFl32LBi4J]: hasVariant(
                          variants,
                          "displayinvoice",
                          "displayinvoice"
                        )
                      }
                    )}
                  >
                    {"Total"}
                  </div>
                </div>

                {(
                  hasVariant(variants, "displayinvoice", "displayinvoice")
                    ? true
                    : true
                ) ? (
                  <div
                    className={classNames(projectcss.all, sty.freeBox__lw0P7, {
                      [sty.freeBoxdisplayinvoice__lw0P7LBi4J]: hasVariant(
                        variants,
                        "displayinvoice",
                        "displayinvoice"
                      )
                    })}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__rI4V6,
                        {
                          [sty.textdisplayinvoice__rI4V6LBi4J]: hasVariant(
                            variants,
                            "displayinvoice",
                            "displayinvoice"
                          )
                        }
                      )}
                    >
                      {"#"}
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__j3Njj,
                        {
                          [sty.textdisplayinvoice__j3NjjlBi4J]: hasVariant(
                            variants,
                            "displayinvoice",
                            "displayinvoice"
                          )
                        }
                      )}
                    >
                      {"Product ID"}
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__hOpBy,
                        {
                          [sty.textdisplayinvoice__hOpBYlBi4J]: hasVariant(
                            variants,
                            "displayinvoice",
                            "displayinvoice"
                          )
                        }
                      )}
                    >
                      {"Product"}
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__h8Nk8
                      )}
                    >
                      {"Quantity"}
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__dr7Vp
                      )}
                    >
                      {"Unit Price"}
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__tvwzx
                      )}
                    >
                      {"Total"}
                    </div>
                  </div>
                ) : null}
                {(
                  hasVariant(variants, "displayinvoice", "displayinvoice")
                    ? true
                    : true
                ) ? (
                  <div
                    className={classNames(projectcss.all, sty.freeBox__b3L3D, {
                      [sty.freeBoxdisplayinvoice__b3L3DlBi4J]: hasVariant(
                        variants,
                        "displayinvoice",
                        "displayinvoice"
                      )
                    })}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__wIl6P
                      )}
                    >
                      {"#"}
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__zBO7
                      )}
                    >
                      {"Product ID"}
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__xJCy
                      )}
                    >
                      {"Product"}
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___2GvKn
                      )}
                    >
                      {"Quantity"}
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__zxIk4
                      )}
                    >
                      {"Unit Price"}
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___9Ebif
                      )}
                    >
                      {"Total"}
                    </div>
                  </div>
                ) : null}
                {(
                  hasVariant(variants, "displayinvoice", "displayinvoice")
                    ? true
                    : true
                ) ? (
                  <div
                    className={classNames(projectcss.all, sty.freeBox__hE7Ua, {
                      [sty.freeBoxdisplayinvoice__hE7UalBi4J]: hasVariant(
                        variants,
                        "displayinvoice",
                        "displayinvoice"
                      )
                    })}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___0Djj5
                      )}
                    >
                      {"#"}
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___0GTg7
                      )}
                    >
                      {"Product ID"}
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__kyXnz
                      )}
                    >
                      {"Product"}
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__wsyNp
                      )}
                    >
                      {"Quantity"}
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___6NlJw
                      )}
                    >
                      {"Unit Price"}
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___7Hxjl
                      )}
                    >
                      {"Total"}
                    </div>
                  </div>
                ) : null}
              </div>
            </div>
          ) : null}
          {(
            hasVariant(variants, "displayinvoice", "displayinvoice")
              ? true
              : true
          ) ? (
            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__y3Hzo, {
                [sty.freeBoxdisplayinvoice__y3HzolBi4J]: hasVariant(
                  variants,
                  "displayinvoice",
                  "displayinvoice"
                )
              })}
            >
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__xr0Ax, {
                  [sty.freeBoxdisplayinvoice__xr0AxlBi4J]: hasVariant(
                    variants,
                    "displayinvoice",
                    "displayinvoice"
                  )
                })}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__gUg2D,
                    {
                      [sty.textdisplayinvoice__gUg2DlBi4J]: hasVariant(
                        variants,
                        "displayinvoice",
                        "displayinvoice"
                      )
                    }
                  )}
                >
                  {"Sub Total"}
                </div>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__ujWb7,
                    {
                      [sty.textdisplayinvoice__ujWb7LBi4J]: hasVariant(
                        variants,
                        "displayinvoice",
                        "displayinvoice"
                      )
                    }
                  )}
                >
                  {"Total"}
                </div>
              </p.Stack>

              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox___85Vmp, {
                  [sty.freeBoxdisplayinvoice___85VmplBi4J]: hasVariant(
                    variants,
                    "displayinvoice",
                    "displayinvoice"
                  )
                })}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__rjNSj
                  )}
                >
                  {"Tax"}
                </div>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__bF9Ly,
                    {
                      [sty.textdisplayinvoice__bF9LylBi4J]: hasVariant(
                        variants,
                        "displayinvoice",
                        "displayinvoice"
                      )
                    }
                  )}
                >
                  {"Total"}
                </div>
              </p.Stack>

              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__pPY6, {
                  [sty.freeBoxdisplayinvoice__pPY6LBi4J]: hasVariant(
                    variants,
                    "displayinvoice",
                    "displayinvoice"
                  )
                })}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__r21E7,
                    {
                      [sty.textdisplayinvoice__r21E7LBi4J]: hasVariant(
                        variants,
                        "displayinvoice",
                        "displayinvoice"
                      )
                    }
                  )}
                >
                  {"Total"}
                </div>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text___9Ggb2,
                    {
                      [sty.textdisplayinvoice___9Ggb2LBi4J]: hasVariant(
                        variants,
                        "displayinvoice",
                        "displayinvoice"
                      )
                    }
                  )}
                >
                  {"Total"}
                </div>
              </p.Stack>
            </p.Stack>
          ) : null}
          {true ? (
            <ButtonB
              data-plasmic-name={"formbutton"}
              data-plasmic-override={overrides.formbutton}
              className={classNames("__wab_instance", sty.formbutton, {
                [sty.formbuttondisplayinvoice]: hasVariant(
                  variants,
                  "displayinvoice",
                  "displayinvoice"
                )
              })}
              connectmm={true}
            />
          ) : null}
        </p.Stack>
      </div>
    </div>
  );
}

const PlasmicDescendants = {
  root: [
    "root",
    "applicationForm",
    "supplier",
    "shipmentmode",
    "origincountry",
    "sap",
    "grn",
    "creditnotevalue",
    "creditnotevalue2",
    "formbutton"
  ],

  applicationForm: [
    "applicationForm",
    "supplier",
    "shipmentmode",
    "origincountry",
    "sap",
    "grn",
    "creditnotevalue",
    "creditnotevalue2",
    "formbutton"
  ],

  supplier: ["supplier"],
  shipmentmode: ["shipmentmode"],
  origincountry: ["origincountry"],
  sap: ["sap"],
  grn: ["grn"],
  creditnotevalue: ["creditnotevalue"],
  creditnotevalue2: ["creditnotevalue2"],
  formbutton: ["formbutton"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = deriveRenderOpts(props, {
      name: nodeName,
      descendantNames: [...PlasmicDescendants[nodeName]],
      internalArgPropNames: PlasmicInvoicegenerationold__ArgProps,
      internalVariantPropNames: PlasmicInvoicegenerationold__VariantProps
    });

    return PlasmicInvoicegenerationold__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicInvoicegenerationold";
  } else {
    func.displayName = `PlasmicInvoicegenerationold.${nodeName}`;
  }
  return func;
}

export const PlasmicInvoicegenerationold = Object.assign(
  // Top-level PlasmicInvoicegenerationold renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    applicationForm: makeNodeComponent("applicationForm"),
    supplier: makeNodeComponent("supplier"),
    shipmentmode: makeNodeComponent("shipmentmode"),
    origincountry: makeNodeComponent("origincountry"),
    sap: makeNodeComponent("sap"),
    grn: makeNodeComponent("grn"),
    creditnotevalue: makeNodeComponent("creditnotevalue"),
    creditnotevalue2: makeNodeComponent("creditnotevalue2"),
    formbutton: makeNodeComponent("formbutton"),
    // Metadata about props expected for PlasmicInvoicegenerationold
    internalVariantProps: PlasmicInvoicegenerationold__VariantProps,
    internalArgProps: PlasmicInvoicegenerationold__ArgProps
  }
);

export default PlasmicInvoicegenerationold;
/* prettier-ignore-end */
